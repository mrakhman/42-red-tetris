{"version":3,"sources":["src/config/constants.ts","src/client/screens/Login/utils.ts","src/client/constants/game.ts","App.tsx","src/client/navigation/index.tsx","src/client/screens/NotFoundScreen.tsx","src/client/screens/Ranking/index.tsx","src/client/navigation/LinkingConfiguration.ts","src/client/constants/tetriminos.ts","src/client/components/Digits/index.tsx","src/client/screens/Playground/utils.ts","src/client/components/Block/index.tsx","src/client/controllers/blockControllers.ts","src/client/components/Matrix/index.tsx","src/client/hooks/useKeyEvent/index.tsx","src/client/screens/Playground/index.tsx","src/client/screens/Login/ChooseUsername.tsx","src/client/screens/Login/ChooseRoom.tsx","src/client/screens/Login/index.tsx","web-build/register-service-worker.js","src/client/constants/keyboard.ts","assets/sprite.png","src/client/context/UserContext.ts","src/client/context/SocketContext.ts","src/client/components/Keypad/index.tsx","src/client/hooks/useWindowDimensions/index.ts","src/client/components/Gameboy/PreviewText.tsx","src/client/components/Gameboy/index.tsx"],"names":["SOCKETS","CREATE_USER","FETCH_CURRENT_PLAYER","CHOOSE_ROOM","ENTER_ROOM","UPDATE_ROOM_PLAYERS","PLAYER_LEFT","START_GAME","PAUSE_GAME","PENALTY_ROWS","UPDATE_SPECTRUM","FETCH_WAITING_ROOMS","UPDATE_WAITING_ROOMS","GAMEOVER","FETCH_ROOM_RANKING","UPDATE_SCORE","REDIRECT_TO_RANKING","CHAT_MESSAGE","FORBIDDEN","SCORING","ROW_DESTROYED","PIECE_PLACED","LAST_PLAYER","isEmpty","value","undefined","checkTextLength","text","length","checkSpecialChars","regexpr","RegExp","match","checkUsername","username","a","async","Error","axios","get","response","data","checkRoomName","roomName","name","isRoomPlayersLimitAvailable","players","maxPlayersLimit","App","window","addEventListener","e","keyCode","target","document","body","preventDefault","Navigation","colorScheme","linking","LinkingConfiguration","theme","DarkTheme","DefaultTheme","RootNavigator","Stack","createStackNavigator","useState","socket","setSocket","room","userContext","setUserContext","Provider","newSocket","io","getSocket","Navigator","screenOptions","headerShown","Screen","component","Login","Playground","Ranking","NotFoundScreen","options","title","navigation","style","styles","container","onPress","replace","link","linkText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","fontSize","fontWeight","marginTop","paddingVertical","color","alignSelf","marginBottom","subtitle","tableContainer","width","flexDirection","tableHeader","tableContent","useContext","SocketContext","UserContext","params","useRoute","rankedRoomPlayers","setRoomPlayers","console","log","socketAccessForbidden","socketFetchRoomRanking","useEffect","emit","gameMode","on","removeListener","_","map","index","key","player","score","prefixes","Linking","config","screens","Root","NotFound","cellState","blockShape","I","L","J","Z","S","O","T","initialPos","blockTypes","fill","Array","OCCUPIED","blankLine","FREE","penaltyLine","BLOCKED","blankMatrix","blockMatrix","Digits","imageURI","Asset","fromModule","require","uri","View","val","ImageBackground","source","height","overflow","imageStyle","left","resizeMode","top","roomPlayersNames","outer","borderColor","borderWidth","outerSpectrum","inner","innerSpectrum","Block","isSpectrum","blockCreate","pos","shape","type","timeStamp","Date","now","blockRotate","block","result","row","reverse","blockFall","n","blockRight","blockLeft","blockGetBlockPos","positions","rowIndex","colIndex","push","isBlock","find","shapePos","isEqual","isBlockValid","matrix","hitBlock","col","rows","cols","min","right","max","bottom","blockGetCorner","printBlock","newMatrix","cloneDeep","size","Matrix","blockWidth","useKeyEvent","setIsPause","setMatrix","setBlock","useKey","_key","isWidgetOpened","keyboard","reset","sample","prevIsPause","prevMatrix","rotate","currentBlock","down","space","nextBlock","newState","blockDrop","useNavigation","roomPlayers","isPause","setCurrentPlayer","roomLeader","setRoomLeader","gameover","setGameover","gameStarted","setGameStarted","isSoloMode","socketChatMessage","message","addResponseMessage","socketFetchCurrentPlayer","socketUpdateRoomPlayers","newLeader","isLeader","prevCurrentPlayer","id","socketReceiveStartGame","tilesStack","startTile","socketReceivePauseGame","prevState","socketReceivePenaltyRows","rowsNumber","addPenaltyRows","socketReceiveRedirectToRanking","socketReceiveGameover","endGame","roomWinner","isWinner","socketEmitUpdatePlayerScore","socketReceiveUpdateSpectrum","dropMessages","leader","penaltyMatrix","slice","nextBlockType","useInterval","includes","socketEmitGameover","bottomMatrix","topMatrix","sum","deletedRows","destroyBlock","socketEmitPenaltyRows","spectrum","socketEmitUpdateSpectrum","j","flag","i","convertMatrixToSpectrum","Gameboy","Text","position","zIndex","marginLeft","currentPlayerUsername","filter","filteredOpponents","marginVertical","join","handleNewUserMessage","ChooseUsername","props","setScreenNumber","ussernameError","setUsernameError","error","TextInput","onChangeText","TouchableOpacity","button","then","catch","err","textAlign","borderRadius","ChooseRoom","roomNameError","setRoomNameError","joinRoomError","setJoinRoomError","waitingRooms","setWaitingRooms","handleFetchWaitingRooms","roomNames","handleUpdateWaitingRooms","onCreateRoomPress","waitingRoom","roomsList","onJoinRoomPress","margin","screenNumber","navigator","serviceWorker","register","scope","info","module","exports","createContext","RoundButton","label","disabled","React","useRef","ref","current","blur","shadowColor","shadowOffset","shadowOpacity","shadowRadius","Keypad","opponentsNumber","showStartButton","showPauseButton","isButtonDisabled","keyDown","dispatchEvent","KeyboardEvent","which","sound","navigate","marginRight","useWindowDimensions","dim","Dimensions","dimensions","setDimensions","stillCareAboutTheCallback","updateDimensions","nextDimensions","removeEventListener","useDimensionsSync","PreviewText","isMultiplayerMode","secondLineText","scale","children","w","h","isKeypadDisabled","gameboy","transform","display","opacity","borderBottomColor","borderLeftColor","borderRightColor","borderTopColor","paddingBottom","paddingHorizontal"],"mappings":"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","file":"static/js/app.43360518.chunk.js","sourcesContent":["export const SOCKETS = {\n  /* ---- User ---- */\n  CREATE_USER: 'create user',\n  FETCH_CURRENT_PLAYER: 'fetch current player',\n\n  /* ---- Room ---- */\n  CHOOSE_ROOM: 'create or join room',\n  ENTER_ROOM: 'enter room',\n  UPDATE_ROOM_PLAYERS: 'update room players',\n  PLAYER_LEFT: 'player left',\n  START_GAME: 'start game',\n  PAUSE_GAME: 'pause game',\n  PENALTY_ROWS: 'penalty rows',\n  UPDATE_SPECTRUM: 'update spectrum',\n  \n  /* ---- Game ---- */\n  FETCH_WAITING_ROOMS: 'fetch waiting rooms',\n  UPDATE_WAITING_ROOMS: 'update waiting rooms',\n  GAMEOVER: 'gameover',\n  FETCH_ROOM_RANKING: 'fetch room ranking',\n  UPDATE_SCORE: 'update score',\n  REDIRECT_TO_RANKING: 'redirect to ranking',\n  \n  /* ---- Chat ---- */\n  CHAT_MESSAGE: 'chat message',\n\n  /* ---- Error ---- */\n  FORBIDDEN: 'access forbidden',\n};\n\nexport const SCORING = {\n  ROW_DESTROYED: 10,\n  PIECE_PLACED: 4,\n  LAST_PLAYER: 200,\n};\n","import axios from 'axios';\n\nimport { maxPlayersLimit } from '/client/constants/game';\n\nexport const isEmpty = (value?: string | null): boolean => value === undefined || value === null || value === '';\n\nexport const checkTextLength = (text?: string | null): boolean => {\n  const maxLength = 15;\n  if (isEmpty(text)) return false;\n  if (text && text.length > maxLength) return false;\n  return true;\n};\n\nexport const checkSpecialChars = (text?: string | null): boolean => {\n  const regexpr =  new RegExp('\\\\W'); // matches any non-word-character, to only allow [a-zA-Z0-9_]\n  if (!text) return false;\n  if (text.match(regexpr)) return false;\n  return true;\n};\n\nexport const checkUsername = async (username: string | null | undefined): Promise<boolean> => {\n  if (!checkTextLength(username)) throw Error('Name must be 1-15 symbols');\n  if (!checkSpecialChars(username)) throw Error('Use letters and numbers');\n\n  const response = await axios.get(`${process.env.SERVER_URL}/player/${username}`);\n  if (response && isEmpty(response.data.username)) return(true);\n  throw Error('Username already taken');\n};\n\nexport const checkRoomName = async (roomName: string | null | undefined): Promise<boolean | undefined> => {\n  if (!checkTextLength(roomName)) throw Error('Name must be 1-15 symbols');\n  if (!checkSpecialChars(roomName)) throw Error('Use letters and numbers');\n\n  const response = await axios.get(`${process.env.SERVER_URL}/room/${roomName}`);\n  if (response && isEmpty(response.data.name)) return true;\n  throw Error('Room name already taken');\n};\n\n\nexport const isRoomPlayersLimitAvailable = async (roomName: string | null | undefined): Promise<boolean | undefined> => {\n  const response = await axios.get(`${process.env.SERVER_URL}/room/${roomName}`);\n  if (response && response.data.players.length >= maxPlayersLimit)\n    throw Error('Too many players in the room');\n  return true;\n};\n","export const maxPlayersLimit = 4;\n","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport Navigation from './src/client/navigation';\n\nexport default function App(): JSX.Element | null {\n  // Prevent window from scrolling on Space button click\n  window.addEventListener('keydown', function(e) {\n    if(e.keyCode === 32 && e.target == document.body) {\n      e.preventDefault();\n    }\n  });\n\n  return (\n    <SafeAreaProvider>\n      <Navigation />\n      <StatusBar />\n    </SafeAreaProvider>\n  );\n}\n","import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport React, { useState } from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport NotFoundScreen from '/client/screens/NotFoundScreen';\nimport Login from '/client/screens/Login';\nimport Playground from '/client/screens/Playground';\nimport Ranking from '/client/screens/Ranking';\nimport LinkingConfiguration from '/client/navigation/LinkingConfiguration';\nimport io from 'socket.io-client';\nimport SocketContext from '/client/context/SocketContext';\nimport UserContext from '/client/context/UserContext';\n\n// If you are not familiar with React Navigation, we recommend going through the\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\nexport default function Navigation({ colorScheme }: { colorScheme?: ColorSchemeName }): JSX.Element {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  const [socket, setSocket] = useState<undefined | SocketIOClient.Socket>(undefined);\n\n  const getSocket = () => {\n    if (socket) {\n      return socket;\n    }\n    const newSocket = io(`${process.env.SERVER_URL}`);\n    setSocket(newSocket);\n    return newSocket;\n  };\n  \n  const [userContext, setUserContext] = useState<UserContextType>({username: undefined, room: undefined});\n\n  return (\n    <SocketContext.Provider value={getSocket()} >\n      <UserContext.Provider value={{userContext, setUserContext}} >\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\n          <Stack.Screen name=\"Root\" component={Login} />\n          <Stack.Screen name=\"Playground\" component={Playground} />\n          <Stack.Screen name=\"Ranking\" component={Ranking} />\n          <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n        </Stack.Navigator>\n      </UserContext.Provider>\n    </SocketContext.Provider>\n  );\n}\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>): JSX.Element {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{'This screen doesn\\'t exist.'}</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import  React, { useState, useEffect, useContext } from 'react';\nimport _ from 'lodash';\nimport { StyleSheet, View, Text } from 'react-native';\nimport { useRoute, RouteProp } from '@react-navigation/native';\n\nimport Gameboy from '/client/components/Gameboy';\nimport { SOCKETS } from '/config/constants';\nimport SocketContext from '/client/context/SocketContext';\nimport UserContext from '/client/context/UserContext';\n\nconst Ranking = (): JSX.Element => {\n  const socket = useContext(SocketContext);\n  const { userContext, setUserContext } = useContext(UserContext);\n\n  const route = useRoute<RouteProp<RootStackParamList, 'Ranking'>>();\n  const { params } = route;\n  // const { room, username } = userContext;\n  const { room, username } = params ?? {};\n  const [rankedRoomPlayers, setRoomPlayers] = useState<PlayerType[]>([]);\n\n  console.log('roomPlayers:', rankedRoomPlayers);\n\n  const socketAccessForbidden = () => {\n    console.log('aaaaaaaaaaaa forbidden');\n  };\n\n  const socketFetchRoomRanking = (players: PlayerType[]) => {\n    setRoomPlayers(players);\n  };\n\n\n  useEffect(() => {\n    if (!socket) throw Error('No socket');\n    // TODO: Here I tested how I can forbid access to pages that I entered fom URL but sis not create. Uncomment it at the end of development\n    // socket.emit(SOCKETS.FETCH_ROOM_RANKING, {username, roomName: room, gameMode: 'not solo'});\n    socket.emit(SOCKETS.FETCH_ROOM_RANKING, {username, roomName: room, gameMode: 'not solo'});\n    socket.on(SOCKETS.FORBIDDEN, socketAccessForbidden);\n    socket.on(SOCKETS.FETCH_ROOM_RANKING, socketFetchRoomRanking);\n\n    return () => {\n      socket.removeListener(SOCKETS.FORBIDDEN, socketAccessForbidden);\n      socket.removeListener(SOCKETS.FETCH_ROOM_RANKING, socketFetchRoomRanking);\n    };\n  }, []);\n\n  return (\n    <Gameboy>\n      <View style={{ justifyContent: 'space-between' }}>\n        <Text style={styles.title}>Game report</Text>\n        {username && rankedRoomPlayers[0] && (username === rankedRoomPlayers[0].username)\n          ? <Text style={styles.subtitle}>{username}, you are the winner!</Text>\n          : <Text style={styles.subtitle}>{username} @ {room}</Text>\n        }\n        <View style={styles.tableContainer}>\n          <View>\n            <Text style={styles.tableHeader}>Place</Text>\n            {_.map(rankedRoomPlayers, (_, index) =>\n              <Text key={index} style={styles.tableContent}>{index + 1}</Text>)}\n          </View>\n          <View>\n            <Text style={styles.tableHeader}>Name</Text>\n            {_.map(rankedRoomPlayers, (player, index) =>\n              <Text key={index} style={styles.tableContent}>{player.username}</Text>)}\n          </View>\n          <View>\n            <Text style={styles.tableHeader}>Score</Text>\n            {_.map(rankedRoomPlayers, (player, index) =>\n              <Text key={index} style={styles.tableContent}>{player.score}</Text>)}\n          </View>\n        </View>\n      </View>\n    </Gameboy>\n  );\n};\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 26,\n    fontWeight: 'bold',\n    alignSelf: 'center',\n    marginBottom: '10%',\n  },\n  subtitle: {\n    fontSize: 24,\n    alignSelf: 'center',\n    marginBottom: '10%',\n  },\n  tableContainer: {\n    width: 300,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  tableHeader: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  tableContent: {\n    fontSize: 18,\n    marginBottom: 3,\n    marginTop: 3,\n  },\n});\n\nexport default Ranking;\n","import * as Linking from 'expo-linking';\n\nexport default {\n  prefixes: [Linking.makeUrl(process.env.PUBLIC_URL)],\n  config: {\n    screens: {\n      Root: '/',\n      Playground: '/play',\n      Ranking: '/ranking',\n      NotFound: '*',\n    },\n  },\n};\n\nconsole.log(process.env.PUBLIC_URL)\nconsole.log(\"THIS IS THE LATEST VERSION !!!!\")","import _ from 'lodash';\n\nexport const blockShape = {\n  I: [\n    [0, 0, 0, 0],\n    [1, 1, 1, 1],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ],\n  L: [\n    [0, 0, 1],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n  J: [\n    [1, 0, 0],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n  Z: [\n    [1, 1, 0],\n    [0, 1, 1],\n    [0, 0, 0],\n  ],\n  S: [\n    [0, 1, 1],\n    [1, 1, 0],\n    [0, 0, 0],\n  ],\n  O: [\n    [1, 1],\n    [1, 1],\n  ],\n  T: [\n    [0, 1, 0],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n};\n\nexport const initialPos = {\n  I: [-2, 3],\n  L: [-2, 4],\n  J: [-2, 4],\n  Z: [-2, 4],\n  S: [-2, 4],\n  O: [-2, 4],\n  T: [-2, 4],\n};\n\nexport const blockTypes: TetriminosType[] = ['I','L','J','Z','S','O', 'T'];\n\nexport const speeds = [800, 650, 500, 370, 250, 160];\n\nexport const delays = [50, 60, 70, 80, 90, 100];\n\nexport enum cellState {\n  FREE,\n  OCCUPIED,\n  BLOCKED,\n}\n\nexport const fillLine = _.fill(Array(10), cellState.OCCUPIED); // never used\n\nexport const blankLine = _.fill(Array(10), cellState.FREE);\n\nexport const penaltyLine = _.fill(Array(10), cellState.BLOCKED);\n\nexport const blankMatrix: Matrix = _.map(Array(20), () => _.fill(Array(10), cellState.FREE));\n\nexport const blockMatrix: Matrix = _.map(Array(2), () => _.fill(Array(4), cellState.FREE));\n","import _ from 'lodash';\nimport { Asset } from 'expo-asset';\nimport { ImageBackground, View, ViewStyle } from 'react-native';\nimport * as React from 'react';\n\nexport default function Digits({ style }: { style?: ViewStyle }): JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const imageURI = Asset.fromModule(require('../../../../assets/sprite.png')).uri;\n  return (\n    <View style={[{ flexDirection: 'row' }, style]} >\n      {_.map(Array(6), (val, index: number) => <ImageBackground\n        key={index}\n        source={{ uri: imageURI }}\n        style={{ width: 14, height: 24, overflow: 'hidden' }}\n        imageStyle={{\n          height: 186,\n          left: -215,\n          resizeMode: 'cover',\n          top: -25,\n          width: 400,\n        }}\n      />)}\n    </View>\n  );\n}\n","import _ from 'lodash';\n\nimport { cellState } from '/client/constants/tetriminos';\n\nconst formatChatTitle = (leader: string): string => {\n  return `Leader: ${leader}`;\n};\n\nconst formatChatSubtitle = (players: string[]): string => {\n  if (players.length === 0) return 'No players';\n  return `Players: ${players.join(', ')}`;\n};\n\nconst roomPlayersNames = (players?: PlayerType[]): string[] => {\n  if (!players || players.length === 0) return [];\n  const namesArray = players.map((player) => player.username);\n  return namesArray;\n};\n\nconst convertMatrixToSpectrum = (matrix: Matrix): Matrix => {\n  const result = _.cloneDeep(matrix);\n  for (let j = 0; j < matrix[0].length; j++) {\n    let flag = false;\n    for (let i = 0; i < matrix.length; i++) {\n      if (matrix[i][j] === cellState.OCCUPIED)\n        flag = true;\n      if (flag)\n        result[i][j] = cellState.OCCUPIED;\n    }\n  }\n  return result;\n};\n\n// const rowFillWithOccupied = (row: number[]): number[] => {\n//   const index = _.indexOf(row, cellState.OCCUPIED);\n//   if (index === -1) return row;\n//   return(_.fill(row, cellState.OCCUPIED, index));\n// };\n\n// const transposeMatrix = (matrix: Matrix): Matrix => {\n//   const result = [];\n//   for (let i = 0; i < matrix[0].length; i++) {\n//     result.push([]);\n//     for (let j = 0; j < matrix.length; j++) {\n//       result[i].push(matrix[j][i]);\n//     }\n//   }\n//   return(result);\n// };\n\n// const fillSpectrum = (matrix: Matrix): Matrix => {\n//   const transposedMatrix = transposeMatrix(matrix);\n//   const transposedFilled = _.map(transposedMatrix, (array) => rowFillWithOccupied(array));\n//   return transposeMatrix(transposedFilled);\n// };\n\nexport { formatChatSubtitle, formatChatTitle, roomPlayersNames, convertMatrixToSpectrum };\n","import { StyleSheet, View } from 'react-native';\nimport * as React from 'react';\n\nimport { cellState } from '/client/constants/tetriminos';\n\nconst styles = StyleSheet.create({\n  outer: {\n    alignItems: 'center',\n    borderColor: '#879372',\n    borderWidth: 1,\n    height: 20,\n    justifyContent: 'center',\n    width: 20,\n  },\n  outerSpectrum: {\n    alignItems: 'center',\n    borderColor: '#879372',\n    borderWidth: 1,\n    height: 6,\n    justifyContent: 'center',\n    width: 6,\n  },\n  inner: {\n    height: 12,\n    width: 12,\n    backgroundColor: '#879372',\n  },\n  innerSpectrum: {\n    height: 2,\n    width: 2,\n    backgroundColor: '#879372',\n  },\n});\n\nconst Block = ({ value, isSpectrum }: { value: CellStateType | number, isSpectrum?: boolean }): JSX.Element => {\n  return (\n    isSpectrum\n      ?\n      <View style={[styles.outerSpectrum, value === cellState.OCCUPIED ? { borderColor: 'black' } : (value === cellState.BLOCKED ? { borderColor: 'black'} : undefined)]}>\n        <View style={[styles.innerSpectrum, value === cellState.OCCUPIED ? { backgroundColor: 'black' } : (value === cellState.BLOCKED ? { backgroundColor: 'transparent'} : undefined)]} />\n      </View>\n      :\n      <View style={[styles.outer, value === cellState.OCCUPIED ? { borderColor: 'black' } : (value === cellState.BLOCKED ? { borderColor: 'black'} : undefined)]}>\n        <View style={[styles.inner, value === cellState.OCCUPIED ? { backgroundColor: 'black' } : (value === cellState.BLOCKED ? { backgroundColor: 'transparent'} : undefined)]} />\n      </View>\n  );\n};\n\nexport default Block;\n","import _ from 'lodash';\n\nimport { blockShape, initialPos, blankLine, cellState } from '/client/constants/tetriminos';\n\nconst blockCreate = ({pos, shape, type, timeStamp}: BlockOption): BlockType => {\n  return {\n    pos: pos ?? initialPos[type],\n    shape: shape ?? blockShape[type],\n    type: type,\n    timeStamp: timeStamp ?? Date.now(),\n  };\n};\n\nconst blockRotate = (block: BlockType): BlockType => {\n  const shape = block.shape;\n  const result: number[][] = shape[0].map((val, index) => shape.map(row => row[index]).reverse());\n\n  return {\n    pos: block.pos,\n    shape: result,\n    type: block.type,\n    timeStamp: block.timeStamp,\n  };\n};\n\nconst blockFall = (block: BlockType, n = 1): BlockType => {\n  return {\n    pos: [block.pos[0] + n, block.pos[1]],\n    shape: block.shape,\n    type: block.type,\n    timeStamp: block.timeStamp,\n  };\n};\n\nconst blockRight = (block: BlockType): BlockType => {\n  return {\n    pos: [block.pos[0], block.pos[1] + 1],\n    shape: block.shape,\n    type: block.type,\n    timeStamp: block.timeStamp,\n  };\n};\n\nconst blockLeft = (block: BlockType): BlockType => {\n  return {\n    pos: [block.pos[0], block.pos[1] - 1],\n    shape: block.shape,\n    type: block.type,\n    timeStamp: block.timeStamp,\n  };\n};\n\nconst blockDrop = (block: BlockType, matrix: Matrix): BlockType => {\n  let newState = blockCreate({ type: block.type, pos: block.pos, shape: block.shape });\n\n  while (isBlockValid(blockFall(newState), matrix)) { \n    newState = blockFall(newState);\n  }\n  return newState;  \n};\n\nconst blockGetBlockPos = (block: BlockType): number[][] => {\n  const positions: number[][] = [];\n  _.map(block.shape, (row, rowIndex) =>\n    _.map(row, (val, colIndex) => { \n      if (val) positions.push([rowIndex + block.pos[0], colIndex + block.pos[1]]);\n    }));\n  return positions;\n};\n\nconst blockGetCorner = (block: BlockType): { left: number, top: number, right: number, bottom: number } => { \n  const rows = _.map(blockGetBlockPos(block), ([row]) => row);\n  const cols = _.map(blockGetBlockPos(block), ([, col]) => col);\n  return {\n    left: _.min(cols) ?? 0,\n    top: _.min(rows) ?? 0,\n    right: _.max(cols) ?? 0,\n    bottom: _.max(rows) ?? 0,\n  };\n};\n\nconst isBlock = (block: BlockType, pos: number[]): boolean => { \n  return _.find(blockGetBlockPos(block), (shapePos) => _.isEqual(shapePos, pos)) !== undefined;\n};\n\nconst isBlockValid = (block: BlockType, matrix: Matrix): boolean => { \n  const hitBlock = _.find(blockGetBlockPos(block), ([row, col]) => matrix?.[row]?.[col] === cellState.BLOCKED || matrix?.[row]?.[col] === cellState.OCCUPIED);\n  const { left, right, bottom } = blockGetCorner(block);\n  return bottom < 20\n    && left >= 0\n    && right < 10\n    && !hitBlock;\n};\n\nconst printBlock = (block: BlockType, matrix: Matrix): Matrix => { \n  const newMatrix = _.cloneDeep(matrix);\n  _.map(blockGetBlockPos(block), (pos) => {\n    if (pos[0] >= 0 && pos[0] < _.size(newMatrix)\n      && pos[1] >= 0 && pos[1] < _.size(newMatrix[0])) {\n      newMatrix[pos[0]][pos[1]] = cellState.OCCUPIED;\n    }\n  });\n  return newMatrix;\n};\n\nconst destroyBlock = (matrix: Matrix): { newMatrix: Matrix, deletedRows: number} => {\n  let bottomMatrix: Matrix = [];\n  let topMatrix: Matrix = [];\n  _.map(matrix, (row) => {\n    // Row sum = 10 when row is complete (cellState.OCCUPIED);\n    // Row sum > 10 (row sum = 20) when there is a penalty row (because penalty row consists of cellState.BLOCKED = 2)\n    if (_.sum(row) < 10 || _.sum(row) > 10) {\n      bottomMatrix = _.cloneDeep([...bottomMatrix, row]);\n      // TODO: We can send SOCKETS.SPECTER_UPDATE here when bottomMatrix.length === 20\n    } else {\n      topMatrix = _.cloneDeep([...topMatrix, blankLine]);\n    }\n  });\n  console.log('Destroy', _.cloneDeep([...topMatrix, ...bottomMatrix])); // TODO: rm\n  return ({ newMatrix: _.cloneDeep([...topMatrix, ...bottomMatrix]), deletedRows: topMatrix.length });\n};\n\nexport { \n  blockCreate,\n  blockRotate,\n  blockFall,\n  blockRight,\n  blockLeft,\n  blockDrop,\n  blockGetBlockPos,\n  blockGetCorner,\n  isBlock,\n  isBlockValid,\n  printBlock,\n  destroyBlock,\n};\n","import _ from 'lodash';\nimport { View, ViewStyle, StyleSheet } from 'react-native';\nimport * as React from 'react';\n\nimport BlockComponent from '/client/components/Block';\nimport { isBlock } from '/client/controllers/blockControllers';\nimport { cellState } from '/client/constants/tetriminos';\n\n\nconst Matrix = ({ block, matrix, style, isSpectrum }: { block: BlockType, matrix: Matrix, style?: ViewStyle, isSpectrum?:boolean }): JSX.Element => {\n  const blockWidth = isSpectrum ? 8 : 22;\n  return (\n    <View style={[styles.container, { height: _.size(matrix) * blockWidth }, style]}>\n      {_.map(matrix, (row, rowIndex) =>\n        <View key={rowIndex} style={{ flexDirection: 'row', width: _.size(row) * blockWidth, justifyContent: 'space-between' }}>\n          {_.map(row, (value, colIndex) => <BlockComponent key={colIndex} isSpectrum={isSpectrum} value={isBlock(block, [rowIndex, colIndex]) ? cellState.OCCUPIED : value} />)}\n        </View>)}\n    </View>\n  );\n};\n\nexport default Matrix;\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 2, justifyContent: 'space-between', borderColor: 'black', borderWidth: 1, backgroundColor: '#9ead86',\n  },\n});\n   ","import { Dispatch, SetStateAction } from 'react';\nimport useKey from 'use-key-hook';\nimport _ from 'lodash';\nimport { isWidgetOpened } from '/client/components/Chat';\n\nimport { blankMatrix } from '/client/constants/tetriminos';\nimport { blockTypes } from '/client/constants/tetriminos';\nimport { keyboard } from '/client/constants/keyboard';\nimport {\n  blockCreate,\n  blockRotate,\n  blockFall,\n  blockRight,\n  blockLeft,\n  blockDrop,\n  isBlockValid,\n  printBlock,\n} from '/client/controllers/blockControllers';\n\nexport const useKeyEvent = ({ setIsPause, setMatrix, setBlock }\n  : {\n    setIsPause: Dispatch<SetStateAction<boolean>>,\n    setMatrix: Dispatch<SetStateAction<Matrix>>,\n    setBlock: Dispatch<SetStateAction<BlockType>>,\n  }): void => {\n  useKey((_key: number, { keyCode }: { keyCode: number }) => {\n    // When Chat widget is opened, key press should not affect movement on Matrix Playground\n    if (isWidgetOpened()) return;\n    if (keyCode === keyboard.reset) {\n      setBlock(blockCreate({ type: _.sample(blockTypes) ?? 'T' }));\n      setMatrix(blankMatrix);\n      setIsPause(true);\n    }\n    setIsPause((prevIsPause) => {\n      setMatrix((prevMatrix) => {\n        if (!prevIsPause) {\n          if (keyCode === keyboard.rotate) {\n            setBlock((currentBlock) => isBlockValid(blockRotate(currentBlock), prevMatrix) ? blockRotate(currentBlock) : currentBlock);\n          }\n          if (keyCode === keyboard.left) {\n            setBlock((currentBlock) => isBlockValid(blockLeft(currentBlock), prevMatrix) ? blockLeft(currentBlock) : currentBlock);\n          }\n          if (keyCode === keyboard.right) {\n            setBlock((currentBlock) => isBlockValid(blockRight(currentBlock), prevMatrix) ? blockRight(currentBlock) : currentBlock);\n          }\n          if (keyCode === keyboard.down) {\n            setBlock((currentBlock) => {\n              if (isBlockValid(blockFall(currentBlock), prevMatrix)) return blockFall(currentBlock);\n              else {\n                setMatrix(printBlock(currentBlock, prevMatrix));\n                return currentBlock;\n              }\n            });\n          }\n          if (keyCode === keyboard.space) {\n            setBlock((currentBlock) => {\n              const nextBlock = blockDrop(currentBlock, prevMatrix);\n              setMatrix(printBlock(nextBlock, prevMatrix));\n              return nextBlock;\n            });\n          }\n        }\n        return prevMatrix;\n      });\n      return prevIsPause;\n    });\n  });\n};\n","import  React, { useState, useEffect, useContext } from 'react';\nimport _ from 'lodash';\nimport { View, Text } from 'react-native';\nimport useInterval from '@use-it/interval';\nimport { useRoute, RouteProp } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { SOCKETS, SCORING } from '/config/constants';\nimport { blankMatrix, blockMatrix, penaltyLine } from '/client/constants/tetriminos';\nimport { blockTypes } from '/client/constants/tetriminos';\nimport { ChatWidget, addResponseMessage, dropMessages } from '/client/components/Chat';\nimport Digits from '/client/components/Digits';\nimport { formatChatSubtitle, formatChatTitle, roomPlayersNames, convertMatrixToSpectrum } from '/client/screens/Playground/utils';\nimport Gameboy from '/client/components/Gameboy';\nimport Matrix from '/client/components/Matrix';\nimport { useKeyEvent } from '/client/hooks/useKeyEvent';\nimport SocketContext from '/client/context/SocketContext';\nimport UserContext from '/client/context/UserContext';\nimport { blockCreate, blockFall, isBlockValid, printBlock, destroyBlock } from '/client/controllers/blockControllers';\n\nexport default function Playground(): JSX.Element {\n  const socket = useContext(SocketContext);\n  const { userContext, setUserContext } = useContext(UserContext);\n  const navigation = useNavigation<StackNavigationProp<RootStackParamList, 'Root'>>();\n\n  const route = useRoute<RouteProp<RootStackParamList, 'Playground'>>();\n  const { params } = route;\n  // const { room, username } = userContext;\n  const { room, username } = params ?? {};\n  const [roomPlayers, setRoomPlayers] = useState<PlayerType[]>([]);\n  const [block, setBlock] = useState<BlockType>(blockCreate({ type: _.sample(blockTypes) ?? 'T' }));\n  const [matrix, setMatrix] = useState<Matrix>(blankMatrix);\n  const [isPause, setIsPause] = useState<boolean>(true);\n  const [player, setCurrentPlayer] = useState<PlayerType>();\n  const [roomLeader, setRoomLeader] = useState<PlayerType>();\n  const [gameover, setGameover] = useState<boolean>(false);\n  const [gameStarted, setGameStarted] = useState<boolean>(false);\n  //If there are no URL params, then it's solo mode\n  const isSoloMode = !room || !username;\n\n  const filteredOpponents = (roomPlayers: PlayerType[], currentPlayerUsername: string) => {\n    return _.filter(roomPlayers, (player) => player.username !== currentPlayerUsername);\n  };\n\n  useKeyEvent({ setBlock, setMatrix, setIsPause });\n\n  const socketChatMessage = (message: Message) => {\n    addResponseMessage(message.username + ': ' + message.text, message.username);\n  };\n  \n  const socketFetchCurrentPlayer = (player: PlayerType) => {\n    setCurrentPlayer(player);\n    console.log('FETCH_CURRENT_PLAYER', player); // TODO: use player.isLeader to show/hide tetris buttons\n  };\n\n  const socketUpdateRoomPlayers = (data: { room: string, players: PlayerType[] }) => {\n    setRoomPlayers(data.players);\n    \n    // When old leader leaves the room, we set a new leader\n    // And if new room leader and this room player are the same user, we update isLeader in player (or update the whole player)\n    const newLeader = _.find(data.players, (player) => player.isLeader);\n    setRoomLeader(newLeader);\n    setCurrentPlayer((prevCurrentPlayer) => {\n      if (prevCurrentPlayer && newLeader && prevCurrentPlayer.id === newLeader.id) {\n        return newLeader;\n      }\n      return prevCurrentPlayer;\n    });\n  };\n\n  const socketReceiveStartGame = ({ tilesStack, startTile }: { tilesStack: string[], startTile: string }) => {\n    // TODO: assign tile stack here\n    console.log('START_GAME', startTile, tilesStack, isPause);\n    setGameStarted(true);\n    setIsPause(false);\n  };\n\n  const socketReceivePauseGame = () => {\n    setIsPause(prevState => !prevState);\n  };\n\n  const socketEmitPenaltyRows = (rowsNumber: number) => {\n    if (!socket) throw Error('No socket');\n    console.log('PENALTY_ROWS emit, rowsNumber:', rowsNumber);\n    socket.emit(SOCKETS.PENALTY_ROWS, { username, roomName: room, rowsNumber });\n  };\n\n  const socketReceivePenaltyRows = (rowsNumber: number) => {\n    setMatrix((prevMatrix) => {\n      const newMatrix = addPenaltyRows(prevMatrix, rowsNumber);\n      console.log('PENALTY_ROWS receive. rowsNumber, newMatrix:', rowsNumber, newMatrix);\n      return newMatrix;\n    });\n  };\n  \n  const socketEmitUpdatePlayerScore = () => {\n    if (!socket) throw Error('No socket');\n\n    setCurrentPlayer((prevCurrentPlayer) => {\n      if (!prevCurrentPlayer) return;\n      socket.emit(SOCKETS.UPDATE_SCORE, { username: prevCurrentPlayer.username, roomName: prevCurrentPlayer.room, score: prevCurrentPlayer.score });\n      return prevCurrentPlayer;\n    });\n  };\n\n  const socketReceiveRedirectToRanking = () => {\n    navigation.push('Ranking', { username, room });\n  };\n\n  const socketEmitGameover = () => {\n    if (!socket) throw Error('No socket');\n    socket.emit(SOCKETS.GAMEOVER, { username: userContext.username, roomName: userContext.room });\n  };\n\n  const socketReceiveGameover = ({ players, endGame }: { players: PlayerType[], endGame: boolean }) => {\n    const roomWinner = _.find(players, (player) => player.isWinner);\n\n    setCurrentPlayer((prevCurrentPlayer) => {\n      if (prevCurrentPlayer && roomWinner && roomWinner.username === prevCurrentPlayer.username) {\n        const playerWithUpdatedScore = { ...prevCurrentPlayer, score: prevCurrentPlayer.score + SCORING.LAST_PLAYER };\n        return playerWithUpdatedScore;\n      }\n      return prevCurrentPlayer;\n    });\n\n    if (endGame) {\n      socketEmitUpdatePlayerScore();\n      setIsPause(true);\n      setGameover(true);\n    }\n  };\n\n  const socketEmitUpdateSpectrum = (spectrum: Matrix) => {\n    if (!socket) throw Error('No socket');\n    socket.emit(SOCKETS.UPDATE_SPECTRUM, { username: userContext.username, roomName: userContext.room, spectrum });\n  };\n\n  const socketReceiveUpdateSpectrum = (roomPlayers: PlayerType[]) => {\n    console.log('SOCKET.UPDATE_SPECTRUM, roomPlayers', roomPlayers);\n    setRoomPlayers(roomPlayers);\n  };\n\n  useEffect(() => {\n    dropMessages();\n    /*\n    ** TODO: del next line when tmp SOCKETS.ENTER_ROOM by url params is deleted\n    */\n    setUserContext({ username, room }); // for components that use UserContext\n    console.log('Playground, User context:', userContext);\n    if (!socket) throw Error('No socket');\n    /*\n    ** TODO: uncomment when tmp SOCKETS.ENTER_ROOM by url params is deleted\n    */\n    // if (userContext.username && userContext.room) // If not solo mode, enter room\n    socket.emit(SOCKETS.ENTER_ROOM, { username, roomName: room });\n\n    // Message from server\n    socket.on(SOCKETS.CHAT_MESSAGE, socketChatMessage);\n\n    // Current player sent from server\n    socket.on(SOCKETS.FETCH_CURRENT_PLAYER, socketFetchCurrentPlayer);\n\n    // When new players join the room\n    socket.on(SOCKETS.UPDATE_ROOM_PLAYERS, socketUpdateRoomPlayers);\n\n    // Receive block type and stack of 3 next blocks\n    socket.on(SOCKETS.START_GAME, socketReceiveStartGame);\n\n    // Pause playgound matrix\n    socket.on(SOCKETS.PAUSE_GAME, socketReceivePauseGame);\n\n    // Receive penalty rows\n    socket.on(SOCKETS.PENALTY_ROWS, socketReceivePenaltyRows);\n\n    // One of opponents has gameover\n    socket.on(SOCKETS.GAMEOVER, socketReceiveGameover);\n\n    // One of opponents updated his spectrum\n    socket.on(SOCKETS.UPDATE_SPECTRUM, socketReceiveUpdateSpectrum);\n\n    // Redirect player to ranking page after player.isWinner score was updated\n    socket.on(SOCKETS.REDIRECT_TO_RANKING, socketReceiveRedirectToRanking);\n  \n    return () => {\n      socket.emit(SOCKETS.PLAYER_LEFT, username);\n\n      socket.removeListener(SOCKETS.CHAT_MESSAGE, socketChatMessage);\n      socket.removeListener(SOCKETS.FETCH_CURRENT_PLAYER, socketFetchCurrentPlayer);\n      socket.removeListener(SOCKETS.UPDATE_ROOM_PLAYERS, socketUpdateRoomPlayers);\n      socket.removeListener(SOCKETS.START_GAME, socketReceivePauseGame);\n      socket.removeListener(SOCKETS.PAUSE_GAME, socketReceiveStartGame);\n      socket.removeListener(SOCKETS.PENALTY_ROWS, socketReceivePenaltyRows);\n      socket.removeListener(SOCKETS.GAMEOVER, socketReceiveGameover);\n      socket.removeListener(SOCKETS.UPDATE_SPECTRUM, socketReceiveUpdateSpectrum);\n      socket.removeListener(SOCKETS.REDIRECT_TO_RANKING, socketReceiveRedirectToRanking);\n      dropMessages();\n    };\n  }, []);\n\n  const handleNewUserMessage = (message: string) => {\n    if (!socket) throw Error('No socket');\n    socket.emit(SOCKETS.CHAT_MESSAGE, { username, message, roomName: room });\n  };\n\n  const addPenaltyRows = (matrix: Matrix, rowsNumber: number): Matrix => {\n    // Create array of blank lines\n    const penaltyMatrix = Array(rowsNumber).fill(penaltyLine);\n    // Add it to the bottom of matrix (matrix has 20 + rowsNumber lines)\n    const newMatrix = _.cloneDeep([...matrix, ...penaltyMatrix]);\n    // Return matrix without N start lines (matrix has 20 lines again)\n    return _.slice(newMatrix, rowsNumber, newMatrix.length);\n  };\n\n  // const nextBlockType = blockTypes[(_.indexOf(blockTypes, block.type) + 1) % _.size(blockTypes)];\n  const nextBlockType = blockTypes[0]; // TODO: del after debugging\n  useInterval(() => {\n    if (isPause) return;\n    // TODO: What condition do we have on playground screen? If not solo mode, check if user left Playground screen and stop pieces from falling (issue #66 in github)\n    // if (!username) return; // If user left Playground screen\n    if (_.includes(matrix[0], 1)) {\n      setMatrix(blankMatrix);\n      setIsPause(true);\n      setGameover(true);\n      socketEmitGameover();\n    } else {\n      setBlock((currentBlock) => {\n        if (!isBlockValid(blockFall(currentBlock), matrix)) {\n          const { newMatrix, deletedRows } = destroyBlock(printBlock(block, matrix));\n          setMatrix(newMatrix);\n          // if (deletedRows > 1)\n          if (deletedRows > 0) // TODO: del after debugging\n          //   socketEmitPenaltyRows(deletedRows - 1);\n            socketEmitPenaltyRows(deletedRows); // TODO: del after debugging\n\n          socketEmitUpdateSpectrum(convertMatrixToSpectrum(newMatrix));\n\n          // Update player in state each time he gains score\n          setCurrentPlayer((prevCurrentPlayer) => {\n            if (!prevCurrentPlayer) return;\n            const playerWithUpdatedScore = { ...prevCurrentPlayer, score: prevCurrentPlayer.score + SCORING.PIECE_PLACED + SCORING.ROW_DESTROYED * deletedRows };\n            return playerWithUpdatedScore;\n          });\n          return blockCreate({ type: nextBlockType });\n        } else {\n          return blockFall(currentBlock);\n        }\n      });\n    }\n  }, 500);\n\n  return (\n    <>\n      <Gameboy isPause={isPause} setIsPause={setIsPause} roomPlayers={roomPlayersNames(roomPlayers)} isLeader={player?.isLeader} gameStarted={gameStarted} gameover={gameover} isSoloMode={isSoloMode}>\n        <>\n          {username && room &&\n            <Text style={{ fontSize: 16, marginBottom: 10, alignSelf: 'flex-start' }}>{username} @ {room}</Text>\n          }\n          <View style={{ position: 'absolute', zIndex: 1, marginLeft: 600 }}>\n            <Text>{player?.score}</Text>\n            {_.map(filteredOpponents(roomPlayers, userContext.username || ''), (player) =>\n              <View key={player.id} style={{ width: 85 }}>\n                <View style={{ alignItems: 'center' }}><Text style={{ fontWeight: 'bold', color: 'white' }}>{player.username}</Text></View>\n                <Matrix matrix={player.spectrum} isSpectrum={true} block={blockCreate({ type: nextBlockType, pos: [-10, -10] })}/>\n              </View>)\n            }\n          </View>\n          <View style={{ flexDirection: 'row', alignSelf:'flex-start', width: '100%' }}>\n            <Matrix matrix={matrix} block={block}/>\n            <View style={{ marginLeft: 20, flex: 1 }} >\n              <Text style={{ fontSize: 20 }}>Score</Text>\n              <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n              <Text style={{ fontSize: 20 }}>Start Line</Text>\n              <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n              <Text style={{ fontSize: 20 }}>Level</Text>\n              <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n              <Text style={{ fontSize: 20 }}>Next</Text>\n              <Matrix\n                matrix={blockMatrix}\n                block={blockCreate({ type: nextBlockType, pos: [0, 0] })}\n                style={{ borderWidth: 0, marginVertical: 10, alignSelf: 'flex-end' }}\n              />\n            </View>\n          </View>\n        </>\n      </Gameboy>\n      {room && username &&\n        <ChatWidget title={formatChatTitle(roomLeader?.username ?? 'no leader')} subtitle={formatChatSubtitle(roomPlayersNames(roomPlayers))} handleNewUserMessage={handleNewUserMessage}/>\n      }\n    </>\n  );\n}\n","import  React, { useState, useContext, Dispatch, SetStateAction } from 'react';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { StyleSheet, Text, TouchableOpacity, TextInput, View } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { SOCKETS } from '/config/constants';\nimport { checkUsername } from '/client/screens/Login/utils';\nimport SocketContext from '/client/context/SocketContext';\nimport UserContext from '/client/context/UserContext';\n\ntype Props = {\n\tsetScreenNumber: Dispatch<SetStateAction<1 | 2>>,\n};\n\nexport default function ChooseUsername(props: Props): JSX.Element {\n  const {setScreenNumber} = props;\n  const { userContext, setUserContext } = useContext(UserContext);\n  const { username } = userContext;\n  const socket = useContext(SocketContext);\n  const navigation = useNavigation<StackNavigationProp<RootStackParamList, 'Root'>>();\n  const [ussernameError, setUsernameError] = useState<string>('');\n\n  const validateUsername = () => {\n    checkUsername(username)\n      .then(data => {\n        if (data === true) {\n          if(!socket) throw Error('No socket');\n          socket.emit(SOCKETS.CREATE_USER, username);\n          setScreenNumber(2);\n        }\n      })\n      .catch(err => {\n        setUsernameError(err.message);\n      });\n  };\n\n  return (\n    <View style={{ width: '100%', alignItems: 'center' }}>\n      <Text style={styles.title}>{'Username'}</Text>\n      <Text style={styles.error}>{ussernameError}</Text>\n      <TextInput\n        value={username ?? ''}\n        onChangeText={text => {\n          setUsernameError('');\n          setUserContext({username: text, room: undefined});\n        }}\n        style={{ borderWidth: 1, marginBottom: 20, height: 30, width: '100%' }}\n      />\n      <TouchableOpacity\n        style={styles.button}\n        onPress={validateUsername}\n      >\n        <Text style={styles.linkText}>Next</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.push('Playground', {})} // TODO: do we need to validate username here too?\n      >\n        <Text style={styles.linkText}>Solo mode</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    marginBottom: 5,\n    alignSelf: 'flex-start',\n    textAlign: 'center',\n  },\n  error: {\n    marginBottom: 5,\n    alignSelf: 'flex-start',\n    textAlign: 'center',\n    color: '#980f0f',\n  },\n  linkText: {\n    fontSize: 14,\n  },\n  button: {\n    width: '70%',\n    borderWidth: 1,\n    borderRadius: 10,\n    alignItems: 'center',\n    padding: 3,\n    marginBottom: 30,\n  },\n});\n","import  React, { useState, useEffect, useContext, Dispatch, SetStateAction } from 'react';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { StyleSheet, Text, TouchableOpacity, TextInput, View } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { SOCKETS } from '/config/constants';\nimport { checkRoomName, isRoomPlayersLimitAvailable } from '/client/screens/Login/utils';\nimport SocketContext from '/client/context/SocketContext';\nimport UserContext from '/client/context/UserContext';\n\ntype Props = {\n  setScreenNumber: Dispatch<SetStateAction<1 | 2>>,\n};\n\nexport default function ChooseRoom(props: Props): JSX.Element {\n  const {setScreenNumber} = props;\n  const { userContext, setUserContext } = useContext(UserContext);\n  const { username, room: roomName } = userContext;\n  const socket = useContext(SocketContext);\n  const navigation = useNavigation<StackNavigationProp<RootStackParamList, 'Root'>>();\n  const [roomNameError, setRoomNameError] = useState<string>('');\n  const [joinRoomError, setJoinRoomError] = useState<string>('');\n  const [waitingRooms, setWaitingRooms] = useState<string[]>([]);\n\n  console.log('Updates for waitingRooms:', waitingRooms);\n\n  const handleFetchWaitingRooms = (roomNames: string[]) => setWaitingRooms(roomNames);\n\n  const handleUpdateWaitingRooms = (roomNames: string[]) => {\n    setRoomNameError('');\n    setJoinRoomError('');\n    return setWaitingRooms(roomNames);\n  };\n\n  useEffect(() => {\n    if (!socket) throw Error('No socket');\n    // If I remove [] from useEffect there is a flood of sockets, for some reason component rerenders several times a second.\n    socket.emit(SOCKETS.FETCH_WAITING_ROOMS);\n\n    // Get waitingRooms when enter ChooseUsername screen\n    socket.on(SOCKETS.FETCH_WAITING_ROOMS, handleFetchWaitingRooms);\n\n    // Get waitingRooms when other users create / delete rooms and ChooseUsername screen is already open\n    socket.on(SOCKETS.UPDATE_WAITING_ROOMS, handleUpdateWaitingRooms);\n  \n    return () => {\n      socket.removeListener(SOCKETS.FETCH_WAITING_ROOMS, handleFetchWaitingRooms);\n      socket.removeListener(SOCKETS.UPDATE_WAITING_ROOMS, handleUpdateWaitingRooms);\n    };\n  }, []);\n\n  const onCreateRoomPress = (roomName: string | undefined) => {\n    checkRoomName(roomName)\n      .then(data => {\n        if (data === true) {\n          if(!socket) throw Error('No socket');\n          socket.emit(SOCKETS.CHOOSE_ROOM, { username, roomName });\n          username && roomName && navigation.push('Playground', { username, room: roomName });\n          setScreenNumber(1);\n        }\n      })\n      .catch(err => {\n        setJoinRoomError('');\n        setRoomNameError(err.message);\n      });\n  };\n\n  const onJoinRoomPress = (roomName: string | null | undefined) => {\n    setRoomNameError('');\n    setJoinRoomError('');\n    isRoomPlayersLimitAvailable(roomName)\n      .then(data => {\n        if (data === true) {\n          setUserContext({ username, room: roomName });\n          if (!socket) throw Error('No socket');\n          socket.emit(SOCKETS.CHOOSE_ROOM, { username, roomName });\n          username && roomName && navigation.push('Playground', { username, room: roomName });\n          setScreenNumber(1);\n        }\n      })\n      .catch(err => {\n        setRoomNameError('');\n        setJoinRoomError(err.message);\n      });\n  };\n\n  return (\n    <View style={{ width: '100%', alignItems: 'center' }}>\n      <Text style={{ fontSize: 16, marginBottom: 50 }}>Hello, {username}</Text>\n      <Text style={styles.title}>Create room</Text>\n      <Text style={styles.error}>{roomNameError}</Text>\n      <TextInput\n        value={roomName ?? ''}\n        onChangeText={text => {\n          setRoomNameError('');\n          setJoinRoomError('');\n          setUserContext({username, room: text});\n        }}\n        style={{ borderWidth: 1, marginBottom: 20, height: 30, width: '100%' }}\n      />\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => onCreateRoomPress(roomName)}\n      >\n        <Text style={styles.linkText}>Play</Text>\n      </TouchableOpacity>\n      <View style={{ width: '90%', marginTop: 20 }}>\n        {waitingRooms.length > 0 && <Text style={styles.title}>Join room</Text>}\n        <Text style={styles.error}>{joinRoomError}</Text>\n        {waitingRooms.length > 0 && waitingRooms.map((waitingRoom) =>\n          <View key={waitingRoom}>\n            <TouchableOpacity\n              style={styles.roomsList}\n              onPress={() => onJoinRoomPress(waitingRoom)}\n            >\n              <Text>{waitingRoom}</Text>\n            </TouchableOpacity>\n          </View>)}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    marginBottom: 5,\n    alignSelf: 'flex-start',\n    textAlign: 'center',\n  },\n  error: {\n    marginBottom: 5,\n    alignSelf: 'flex-start',\n    textAlign: 'center',\n    color: '#980f0f',\n  },\n  linkText: {\n    fontSize: 14,\n  },\n  roomsList: {\n    borderWidth: 1,\n    borderRadius: 5,\n    margin: 3,\n    padding: 2,\n    alignItems:\n\t\t'center',\n  },\n  button: {\n    width: '70%',\n    borderWidth: 1,\n    borderRadius: 10,\n    alignItems: 'center',\n    padding: 3,\n    marginBottom: 10,\n  },\n});\n","import  React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport ChooseUsername from '/client/screens/Login/ChooseUsername';\nimport ChooseRoom from '/client/screens/Login/ChooseRoom';\nimport Gameboy from '/client/components/Gameboy';\n\nexport default function Login(): JSX.Element {\n  const [screenNumber, setScreenNumber] = useState<1 | 2>(1);\n\n  return (\n    <Gameboy>\n      <View style={{ alignItems: 'center', width: '60%' }}>\n        {screenNumber === 1\n          ? <ChooseUsername setScreenNumber={setScreenNumber} />\n          : <ChooseRoom setScreenNumber={setScreenNumber} />\n        }\n      </View>\n    </Gameboy>\n  );\n}","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/42-red-tetris/expo-service-worker.js', { scope: '/42-red-tetris/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","export const keyboard = {\n  'left': 37,\n  'rotate': 38,\n  'right': 39,\n  'down': 40,\n  'space': 32,\n  'sound': 83,\n  'reset': 82,\n  // 'pause': 80,\n};\n","module.exports = __webpack_public_path__ + \"static/media/sprite.81de6409.png\";","import {createContext} from 'react';\n\nconst userContext = {username: undefined, room: undefined};\n\nconst UserContext = createContext<{userContext: UserContextType, setUserContext: UpdateUserContextType}>({\n  userContext,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setUserContext: () => {},\n});\n\nexport default UserContext;\n","import {createContext} from 'react';\n\nconst SocketContext = createContext<undefined | SocketIOClient.Socket>(undefined);\n\nexport default SocketContext;\n","import { TouchableOpacity, View, Text, ViewStyle } from 'react-native';\nimport React, { useContext, Dispatch, SetStateAction } from 'react';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { keyboard } from '/client/constants/keyboard';\nimport { SOCKETS } from '/config/constants';\nimport SocketContext from '/client/context/SocketContext';\nimport UserContext from '/client/context/UserContext';\n\nconst RoundButton = ({\n  size, color, label, style, onPress, disabled, text,\n}: {\n  size: number, color: string, label?: string,\n  style?: ViewStyle, onPress?: () => void, disabled?: boolean, text?: string,\n}): JSX.Element => {\n  const button = React.useRef<TouchableOpacity>(null);\n\n  return (\n    <View style={[{ alignItems: 'center' }, style]}>\n      <TouchableOpacity\n        ref={button}\n        disabled={disabled}\n        onPress={() => { button?.current?.blur(); onPress?.();}}\n        style={{\n          backgroundColor: color,\n          borderRadius: size / 2,\n          height: size,\n          width: size,\n          shadowColor: 'rgba(0,0,0, .4)',\n          shadowOffset: { height: 1, width: 1 },\n          shadowOpacity: 20,\n          shadowRadius: 5,\n          justifyContent: 'center',\n          alignItems: 'center',\n        }} >\n        {text && <Text style={{ fontSize: 25 }}>{text}</Text>}\n      </TouchableOpacity>\n      {label && <Text style={{ marginTop: 10 }}>{label}</Text>}\n    </View>\n  );\n};\n\ntype Props = {\n  isPause?: boolean,\n  setIsPause: Dispatch<SetStateAction<boolean>>,\n  opponentsNumber: number,\n  isLeader?: boolean,\n  gameStarted?: boolean,\n  disabled?: boolean,\n  isSoloMode?: boolean,\n}\n\nconst Keypad = (props: Props): JSX.Element => {\n  const { isPause, setIsPause, opponentsNumber, isLeader, gameStarted, disabled, isSoloMode } = props;\n  const socket = useContext(SocketContext);\n  const { userContext, setUserContext } = useContext(UserContext);\n  const navigation = useNavigation<StackNavigationProp<RootStackParamList, 'Playground'>>();\n  const showStartButton = !isSoloMode && isLeader && !gameStarted;\n  const showPauseButton = (isLeader && gameStarted ) || isSoloMode;\n  const isButtonDisabled = !isSoloMode && (disabled || opponentsNumber < 1);\n\n  const keyDown = (key: number) => {\n    // @ts-ignore https://github.com/microsoft/TSJS-lib-generator/pull/892\n    document.dispatchEvent(new KeyboardEvent('keydown', { keyCode: key, which: key }));\n  };\n  return (\n    <View style={{ width: 400 }}>\n      <View style={{ width: '100%' }}>\n        <View style={{ flexDirection: 'row', marginVertical: 20, justifyContent: 'space-between'}}>\n          {showStartButton &&\n          <RoundButton\n            color={isButtonDisabled ? '#c0c0c0' : '#2dc421'} size={50} label='Start' text='▶'\n            disabled={isButtonDisabled}\n            onPress={() => {\n              if (!socket) throw Error('No socket');\n              socket.emit(SOCKETS.START_GAME, { username: userContext.username, roomName: userContext.room });\n            }}\n          />}\n          {showPauseButton &&\n            <RoundButton\n              disabled={isButtonDisabled}\n              color={isButtonDisabled ? '#c0c0c0' : '#efcc19'} size={50} label={isPause ? 'Play(P)' : 'Pause(P)'} text={isPause ? '▶' : '||' }\n              onPress={() => {\n                if (!socket) throw Error('No socket');\n                socket.emit(SOCKETS.PAUSE_GAME, { username: userContext.username, roomName: userContext.room });\n              }}\n            />}\n          <RoundButton\n            disabled={isButtonDisabled}\n            color={isButtonDisabled ? '#c0c0c0' : '#2dc421'} size={50} label=\"Sound(S)\"\n            onPress={() => keyDown(keyboard.sound)}\n          />\n          <RoundButton\n            disabled={isButtonDisabled}\n            color={isButtonDisabled ? '#c0c0c0' : '#efcc19'} size={50} label=\"Reset(R)\"\n            onPress={() => keyDown(keyboard.reset)}\n          />\n          <RoundButton\n            color=\"white\" size={50} style={{ margin: 0 }} label='Exit' text='╳'\n            onPress={() => {\n              if (!socket) throw Error('No socket');\n              setUserContext({username: undefined, room: undefined});\n              setIsPause(true);\n              socket.emit(SOCKETS.PLAYER_LEFT, userContext.username);\n              navigation.navigate('Root');\n            }}\n          />\n        </View>\n        <View style={{ flexDirection: 'row', alignItems: 'center', marginTop: 20 }}>\n          <View style={{ marginRight: 20 }}>\n            <RoundButton\n              color={isButtonDisabled ? '#c0c0c0' : '#5a65f1'} size={160} label=\"Drop(Space)\" style={{ marginTop: 20 }}\n              disabled={isButtonDisabled || isPause}\n              onPress={() => keyDown(keyboard.space)}\n            />\n          </View>\n          <View style={{ marginLeft: 20 }}>\n            <RoundButton\n              color={isButtonDisabled ? '#c0c0c0' : '#5a65f1'} size={70} style={{ margin: 0 }}\n              disabled={isButtonDisabled || isPause}\n              onPress={() => keyDown(keyboard.rotate)}\n            />\n            <View style={{ flexDirection: 'row' }}>\n              <RoundButton\n                color={isButtonDisabled ? '#c0c0c0' : '#5a65f1'} size={70} style={{ margin: 0, marginRight: 60 }}\n                disabled={isButtonDisabled || isPause}\n                onPress={() => keyDown(keyboard.left)}\n              />\n              <RoundButton\n                color={isButtonDisabled ? '#c0c0c0' : '#5a65f1'} size={70} style={{ margin: 0 }}\n                disabled={isButtonDisabled || isPause}\n                onPress={() => keyDown(keyboard.right)}\n              />\n            </View>\n            <RoundButton\n              color={isButtonDisabled ? '#c0c0c0' : '#5a65f1'} size={70} style={{ margin: 0 }}\n              disabled={isButtonDisabled || isPause}\n              onPress={() => keyDown(keyboard.down)}\n            />\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Keypad;\n","import { Dimensions, ScaledSize } from 'react-native';\nimport * as React from 'react';\n\ntype EventValue = {\n  window: ScaledSize;\n  screen: ScaledSize;\n};\n\nexport const useDimensionsSync = (dim: 'window' | 'screen' = 'window'): { width: number, height: number } => {\n  const [dimensions, setDimensions] = React.useState(() => Dimensions.get(dim));\n\n  // Start listening to changes\n  React.useEffect(() => {\n    let stillCareAboutTheCallback = true;\n\n    const updateDimensions = (nextDimensions: EventValue) => {\n      stillCareAboutTheCallback && setDimensions(nextDimensions[dim]);\n    };\n\n    Dimensions.addEventListener('change', updateDimensions);\n\n    return () => {\n      stillCareAboutTheCallback = false;\n      Dimensions.removeEventListener('change', updateDimensions);\n    };\n  }, [dim, setDimensions]);\n\n  return dimensions;\n};\n\nexport const useWindowDimensions = (): { width: number, height: number } => {\n  return useDimensionsSync('window');\n};\n","import React from 'react';\nimport { Text, View } from 'react-native';\n\nimport { styles } from '/client/components/Gameboy';\nimport { maxPlayersLimit } from '/client/constants/game';\n\n\ntype Props = {\n  isMultiplayerMode: boolean,\n  opponentsNumber: number,\n  isLeader?: boolean,\n  gameover?: boolean,\n}\n\nconst PreviewText = (props: Props): JSX.Element  => {\n  const { isMultiplayerMode, opponentsNumber, isLeader, gameover } = props;\n  const secondLineText = (opponentsNumber: number, isLeader?: boolean) => {\n    if (opponentsNumber <= 0) return 'Wait for other players';\n    if (opponentsNumber > 0 && (opponentsNumber + 1 >= maxPlayersLimit) && isLeader) return 'Room is full, press Start to begin';\n    if (opponentsNumber > 0 && isLeader) return 'Press Start to begin';\n    if (opponentsNumber > 0 && (opponentsNumber + 1 >= maxPlayersLimit) && !isLeader) return 'Room is full, ask leader to start the game';\n    if (opponentsNumber > 0 && !isLeader) return 'Wait for leader to start the game';\n  };\n\n  if (gameover) {\n    return (\n      <View style={{ alignItems: 'center' }}>\n        <Text style={styles.gameover}>Game Over</Text>\n        <Text style={styles.gameMode}>Please wait for other players to finish</Text>\n      </View>\n    );\n  }\n  if (isMultiplayerMode) {\n    return (\n      <View style={{ alignItems: 'center' }}>\n        <Text style={styles.gameMode}>You are in multiplayer mode</Text>\n        <Text style={styles.gameMode}>{opponentsNumber} other player(s) in your room</Text>\n        <Text>{secondLineText(opponentsNumber, isLeader)}</Text>\n      </View>\n    );\n  }\n  return (\n    <View style={{ alignItems: 'center' }}>\n      <Text style={styles.gameMode}>You are in solo mode</Text>\n      <Text>Press Play(P) to start</Text>\n    </View>\n  );\n};\n\nexport default PreviewText;\n","import { StyleSheet, Text, View } from 'react-native';\nimport React, { useContext, Dispatch, SetStateAction } from 'react';\n\nimport Keypad from '/client/components/Keypad';\nimport { useWindowDimensions } from '/client/hooks/useWindowDimensions';\nimport UserContext from '/client/context/UserContext';\nimport PreviewText from '/client/components/Gameboy/PreviewText';\n\ntype Props = {\n  children: React.ReactChild,\n  isPause?: boolean,\n  setIsPause: Dispatch<SetStateAction<boolean>>,\n  roomPlayers?: string[],\n  isLeader?: boolean,\n  gameStarted?: boolean,\n  gameover?: boolean,\n  isSoloMode?: boolean,\n}\n\nexport default function Gameboy(props: Props): JSX.Element {\n  const {children, isPause, setIsPause, roomPlayers, isLeader, gameStarted, gameover, isSoloMode} = props;\n  const {userContext} = useContext(UserContext);\n  const opponentsNumber = !roomPlayers || roomPlayers.length === 0 ? 0 : roomPlayers.length - 1;\n  const isMultiplayerMode = userContext.username && userContext.room ? true : false;\n  const window = useWindowDimensions();\n  const w = window.width;\n  const h = window.height;\n  const ratio = h / w;\n  let scale;\n  if (ratio < 1.5) {\n    scale = h / 960;\n  } else {\n    scale = w / 560;\n  }\n\n  const isKeypadDisabled = gameover;\n\n  return (\n    <View style={styles.container}>\n      <View style={[styles.gameboy, { transform: [{ scale }] }]}>\n        <Text style={styles.title}>R E D ■ T E T R I S</Text>\n        <View style={styles.display}>\n          {children}\n          {isPause ?\n            <View style={[styles.display, { position: 'absolute', opacity: 0.8 }]} >\n              <PreviewText isMultiplayerMode={isMultiplayerMode} opponentsNumber={opponentsNumber} isLeader={isLeader} gameover={gameover} />\n            </View>\n            : null}\n        </View>\n        <Keypad isPause={isPause} setIsPause={setIsPause} opponentsNumber={opponentsNumber} isLeader={isLeader} gameStarted={gameStarted} disabled={isKeypadDisabled} isSoloMode={isSoloMode}/>\n      </View>\n    </View>\n  );\n}\n\nexport const styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1f393e',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n    height: '100%',\n  },\n  display: {\n    alignItems: 'center',\n    backgroundColor: '#9ead86',\n    borderBottomColor: '#fa6b6b',\n    borderLeftColor: '#980f0f',\n    borderRightColor: '#fa6b6b',\n    borderTopColor: '#980f0f',\n    borderWidth: 5,\n    height: 500,\n    justifyContent: 'center',\n    padding: 10,\n    width: 400,\n  },\n  gameboy: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#990011',\n    borderRadius: 20,\n    paddingBottom: 30,\n    paddingHorizontal: 50,\n  },\n  title: {\n    fontSize: 30,\n    marginVertical: 15,\n    textAlign: 'center',\n  },\n  gameMode: {\n    marginBottom: 20,\n    fontSize: 18,\n  },\n  gameover: {\n    marginBottom: 20,\n    fontWeight: 'bold',\n    color: '#990011',\n    fontSize: 24,\n  },\n});\n"],"sourceRoot":""}