{"version":3,"sources":["src/screens/NotFoundScreen.tsx","src/screens/Login/index.tsx","src/screens/Room/index.tsx","src/components/Block/index.tsx","src/components/Matrix/index.tsx","src/constants/tetriminos.ts","src/models/block.ts","src/screens/Playground/index.tsx","src/navigation/LinkingConfiguration.ts","src/navigation/index.tsx","App.tsx","web-build/register-service-worker.js"],"names":["NotFoundScreen","navigation","View","style","styles","container","Text","title","TouchableOpacity","onPress","replace","link","linkText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","fontSize","fontWeight","marginTop","paddingVertical","color","Login","push","Room","marginRight","marginBottom","outer","borderColor","borderWidth","height","width","inner","Block","value","undefined","Matrix","matrix","_","size","map","row","index","key","flexDirection","blockShape","I","L","J","Z","S","O","T","origin","blockType","option","this","type","xy","rotateIndex","timeStamp","Date","now","shape","e","result","val","reverse","nextXy","nextRotateIndex","length","n","Playground","React","sample","block","setBlock","useInterval","currentBlock","fall","useKey","rotate","left","right","newMatrix","forEach","m","i","j","printBlock","Array","prefixes","Linking","config","screens","Root","NotFound","Navigation","colorScheme","NavigationContainer","linking","LinkingConfiguration","theme","DarkTheme","DefaultTheme","RootNavigator","Stack","createStackNavigator","Navigator","screenOptions","headerShown","Screen","name","component","options","App","StatusBar","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error","console"],"mappings":"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","file":"static/js/app.2f6e4584.chunk.js","sourcesContent":["import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>): JSX.Element {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{'This screen doesn\\'t exist.'}</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nexport default function Login({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'Root'>): JSX.Element {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{'Login'}</Text>\n      <TouchableOpacity onPress={() => navigation.push('Room')} style={styles.link}>\n        <Text style={styles.linkText}>Go to room!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nexport default function Room({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'Room'>): JSX.Element {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{'Room'}</Text>\n      <TouchableOpacity onPress={() => navigation.push('Playground')} style={styles.link}>\n        <Text style={styles.linkText}>Go to Playground!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { StyleSheet, View } from 'react-native';\nimport * as React from 'react';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginRight: 2,\n    marginBottom: 2,\n  },\n  outer: {\n    alignItems: 'center',\n    borderColor: '#879372',\n    borderWidth: 1,\n    height: 20,\n    justifyContent: 'center',\n    width: 20,\n  },\n  inner: {\n    height: 12,\n    width: 12,\n    backgroundColor: '#879372',\n  },\n});\n\nconst Block = ({ value }: { value: number }): JSX.Element => {\n  return (\n    <View style={[styles.outer, value ? { borderColor: 'black' } : undefined]}>\n      <View style={[styles.inner, value ? { backgroundColor: 'black' } : undefined]} />\n    </View>\n  );\n};\n\nexport default Block;\n","import _ from 'lodash';\nimport { View } from 'react-native';\nimport * as React from 'react';\n\nimport Block from '/components/Block';\n\nconst Matrix = ({ matrix }: { matrix: Matrix }): JSX.Element => {\n  return (\n    <View style={{ height: _.size(matrix) * 22, padding: 2, justifyContent: 'space-between', borderColor: 'black', borderWidth: 1, backgroundColor: '#9ead86' }}>\n      {_.map(matrix, (row, index) =>\n        <View key={index} style={{ flexDirection: 'row', width: _.size(row) * 22, justifyContent: 'space-between' }}>\n          {_.map(row, (value, index) => <Block key={index} value={value} />)}\n        </View>)}\n    </View>\n  );\n};\n\nexport default Matrix;\n","import _ from 'lodash';\n\nexport const blockShape = {\n  I: [\n    [1, 1, 1, 1],\n  ],\n  L: [\n    [0, 0, 1],\n    [1, 1, 1],\n  ],\n  J: [\n    [1, 0, 0],\n    [1, 1, 1],\n  ],\n  Z: [\n    [1, 1, 0],\n    [0, 1, 1],\n  ],\n  S: [\n    [0, 1, 1],\n    [1, 1, 0],\n  ],\n  O: [\n    [1, 1],\n    [1, 1],\n  ],\n  T: [\n    [0, 1, 0],\n    [1, 1, 1],\n  ],\n};\n\nexport const origin = {\n  I: [[-1, 1], [1, -1]],\n  L: [[0, 0]],\n  J: [[0, 0]],\n  Z: [[0, 0]],\n  S: [[0, 0]],\n  O: [[0, 0]],\n  T: [[0, 0], [1, 0], [-1, 1], [0, -1]],\n};\n\nexport const blockType: TetriminosType[] = ['I','L','J','Z','S','O', 'T'];\n\nexport const speeds = [800, 650, 500, 370, 250, 160];\n\nexport const delays = [50, 60, 70, 80, 90, 100];\n\nexport const fillLine = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\n\nexport const blankLine = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\nexport const blankMatrix = (): Matrix => _.map(Array(20), () => _.map(Array(10), 0));\n","import _ from 'lodash';\n\nimport { blockShape, origin } from '/constants/tetriminos.ts';\n\nclass Block {\n  xy: number[];\n  shape: number[][];\n  type: TetriminosType;\n  rotateIndex: number;\n  timeStamp: number;\n\n  constructor(option: BlockOption) {\n    this.type = option.type;\n    this.xy = option.xy ?? [-1, 4];\n  \n    if (!option.rotateIndex) {\n      this.rotateIndex = 0;\n    } else {\n      this.rotateIndex = option.rotateIndex;\n    }\n\n    if (!option.timeStamp) {\n      this.timeStamp = Date.now();\n    } else {\n      this.timeStamp = option.timeStamp;\n    }\n\n    if (!option.shape) { // init\n      this.shape = blockShape[option.type].map((e) => e);\n    } else {\n      this.shape = option.shape;\n    }\n    if (!option.xy) {\n      switch (option.type) {\n        case 'I': // I\n          this.xy = [0, 3];\n          break;\n        case 'L': // L\n          this.xy = [-1, 4];\n          break;\n        case 'J': // J\n          this.xy = [-1, 4];\n          break;\n        case 'Z': // Z\n          this.xy = [-1, 4];\n          break;\n        case 'S': // S\n          this.xy = [-1, 4];\n          break;\n        case 'O': // O\n          this.xy = [-1, 4];\n          break;\n        case 'T': // T\n          this.xy = [-1, 4];\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  rotate(): Block {\n    const shape = this.shape;\n    const result: number[][] = shape[0].map((val, index) => shape.map(row => row[index]).reverse());\n    const nextXy = [\n      this.xy[0] + origin[this.type][this.rotateIndex][0],\n      this.xy[1] + origin[this.type][this.rotateIndex][1],\n    ];\n    const nextRotateIndex = this.rotateIndex + 1 >= origin[this.type].length ?\n      0 : this.rotateIndex + 1;\n    return new Block({\n      shape: result,\n      type: this.type,\n      xy: nextXy,\n      rotateIndex: nextRotateIndex,\n      timeStamp: this.timeStamp,\n    });\n  }\n  fall(n = 1): Block {\n    return new Block({\n      shape: this.shape,\n      type: this.type,\n      xy: [this.xy[0] + n, this.xy[1]],\n      rotateIndex: this.rotateIndex,\n      timeStamp: Date.now(),\n    });\n  }\n  right(): Block {\n    return new Block({\n      shape: this.shape,\n      type: this.type,\n      xy: [this.xy[0], this.xy[1] + 1],\n      rotateIndex: this.rotateIndex,\n      timeStamp: this.timeStamp,\n    });\n  }\n  left(): Block {\n    return new Block({\n      shape: this.shape,\n      type: this.type,\n      xy: [this.xy[0], this.xy[1] - 1],\n      rotateIndex: this.rotateIndex,\n      timeStamp: this.timeStamp,\n    });\n  }\n}\n\nexport default Block;\n","import _ from 'lodash';\nimport { StyleSheet, Text, View } from 'react-native';\nimport * as React from 'react';\nimport useInterval from '@use-it/interval';\nimport useKey from 'use-key-hook';\n\nimport Matrix from '/components/Matrix';\nimport { blankMatrix } from '/constants/tetriminos';\nimport Block from '/models/block';\nimport { blockType } from '/constants/tetriminos';\n\nconst printBlock = (matrix: Matrix, block: Block) => { \n  const { shape, xy } = block;\n  shape.forEach((m, i) => (\n    m.forEach((n, j) => {\n      if (xy[0] + i >= 0 && xy[0] + i < 20 && xy[1] + j < 10) {\n        matrix[xy[0] + i][xy[1] + j] = shape[i][j];\n      }\n    })\n  ));\n  return matrix;\n};\n\nexport default function Playground(): JSX.Element {\n  const [block, setBlock] = React.useState<Block>(new Block({\n    type: _.sample<TetriminosType>(blockType) ?? 'T',\n  }));\n  useInterval(() => {\n    setBlock((currentBlock) =>\n      (currentBlock.xy[0] + currentBlock.shape.length < 20)\n        ? currentBlock.fall()\n        : new Block({\n          type: _.sample<TetriminosType>(blockType) ?? 'T',\n        }));\n  }, 500);\n  useKey((key: number) => {\n    if (key === 38) setBlock((currentBlock) => currentBlock.rotate());\n    if (key === 37) setBlock((currentBlock) => currentBlock.left());\n    if (key === 39) setBlock((currentBlock) => currentBlock.right());\n    if (key === 40) setBlock((currentBlock) => currentBlock.fall());\n  });\n  const newMatrix = printBlock(blankMatrix(), block);\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{'Playground'}</Text>\n      <Matrix matrix={newMatrix} />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 20,\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import * as Linking from 'expo-linking';\n\nexport default {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Root: '/',\n      Room: '/room',\n      Playground: '/play',\n      NotFound: '*',\n    },\n  },\n};\n","import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport NotFoundScreen from '/screens/NotFoundScreen';\nimport Login from '/screens/Login';\nimport Room from '/screens/Room';\nimport Playground from '/screens/Playground';\nimport LinkingConfiguration from '/navigation/LinkingConfiguration';\n\n// If you are not familiar with React Navigation, we recommend going through the\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\nexport default function Navigation({ colorScheme }: { colorScheme?: ColorSchemeName }): JSX.Element {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Root\" component={Login} />\n      <Stack.Screen name=\"Room\" component={Room} />\n      <Stack.Screen name=\"Playground\" component={Playground} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport Navigation from '/navigation';\n\nexport default function App(): JSX.Element | null {\n    return (\n      <SafeAreaProvider>\n        <Navigation />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/42-red-tetris/expo-service-worker.js', { scope: '/42-red-tetris/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}