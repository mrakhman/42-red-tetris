{"version":3,"sources":["App.tsx","src/screens/NotFoundScreen.tsx","src/components/Keypad/index.tsx","src/hooks/useWindowDimensions/index.ts","src/components/Gameboy/index.tsx","src/screens/Login/index.tsx","src/screens/Room/index.tsx","src/constants/tetriminos.ts","src/constants/keyboard.ts","src/models/block.ts","src/components/Block/index.tsx","src/components/Matrix/index.tsx","src/components/Digits/index.tsx","src/screens/Playground/index.tsx","src/navigation/LinkingConfiguration.ts","src/navigation/index.tsx","web-build/register-service-worker.js","assets/sprite.png"],"names":["io","App","NotFoundScreen","navigation","View","style","styles","container","Text","title","TouchableOpacity","onPress","replace","link","linkText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","fontSize","fontWeight","marginTop","paddingVertical","color","RoundButton","size","label","margin","borderRadius","height","width","shadowColor","shadowOffset","shadowOpacity","shadowRadius","Keypad","flexDirection","marginRight","useWindowDimensions","dim","React","Dimensions","get","dimensions","setDimensions","stillCareAboutTheCallback","updateDimensions","nextDimensions","addEventListener","removeEventListener","useDimensionsSync","Gameboy","scale","children","window","w","h","console","log","gameboy","transform","display","borderBottomColor","borderLeftColor","borderRightColor","borderTopColor","borderWidth","paddingBottom","paddingHorizontal","marginVertical","textAlign","Login","push","Room","blockShape","I","L","J","Z","S","O","T","origin","blockType","keyboard","Block","option","this","type","xy","rotateIndex","timeStamp","Date","now","shape","map","e","result","val","index","row","reverse","nextXy","nextRotateIndex","length","n","marginBottom","outer","borderColor","inner","value","undefined","Matrix","matrix","_","key","Digits","imageURI","Asset","fromModule","require","uri","Array","ImageBackground","source","overflow","imageStyle","left","resizeMode","top","Playground","sample","block","setBlock","nextBlockType","indexOf","useInterval","currentBlock","fall","useKey","rotate","right","newMatrix","forEach","m","i","j","printBlock","alignSelf","marginLeft","merge","prefixes","Linking","config","screens","Root","NotFound","Navigation","colorScheme","NavigationContainer","linking","LinkingConfiguration","theme","DarkTheme","DefaultTheme","RootNavigator","Stack","createStackNavigator","Navigator","screenOptions","headerShown","Screen","name","component","options","navigator","serviceWorker","register","scope","then","info","catch","error","module","exports"],"mappings":"uFAAA,4GAQeA,GAAG,IAAD,mxBAEF,SAASC,IACpB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,YAAD,U,iKCVO,SAASC,EAAT,GAEoD,IADjEC,EACgE,EADhEA,WAEA,OACE,gBAACC,EAAA,EAAD,CAAMC,MAAOC,EAAOC,WAClB,gBAACC,EAAA,EAAD,CAAMH,MAAOC,EAAOG,OAAQ,8BAC5B,gBAACC,EAAA,EAAD,CAAkBC,QAAS,kBAAMR,EAAWS,QAAQ,SAASP,MAAOC,EAAOO,MACzE,gBAACL,EAAA,EAAD,CAAMH,MAAOC,EAAOQ,UAApB,wBAMR,IAAMR,EAASS,IAAWC,OAAO,CAC/BT,UAAW,CACTU,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,SAChBC,QAAS,IAEXZ,MAAO,CACLa,SAAU,GACVC,WAAY,QAEdV,KAAM,CACJW,UAAW,GACXC,gBAAiB,IAEnBX,SAAU,CACRQ,SAAU,GACVI,MAAO,aC/BLC,EAAc,SAAC,GAID,IAHlBC,EAGiB,EAHjBA,KAAMF,EAGW,EAHXA,MAAOG,EAGI,EAHJA,MAAOxB,EAGH,EAHGA,MAIpB,OACE,gBAACD,EAAA,EAAD,CAAMC,MAAO,CAAC,CAAEc,WAAY,SAAUW,OAAQ,IAAMzB,IAClD,gBAACK,EAAA,EAAD,CACEL,MAAO,CACLa,gBAAiBQ,EACjBK,aAAcH,EAAO,EACrBI,OAAQJ,EACRK,MAAOL,EACPM,YAAa,kBACbC,aAAc,CAAEH,OAAQ,EAAGC,MAAO,GAClCG,cAAe,GACfC,aAAc,KAElB,gBAAC7B,EAAA,EAAD,CAAMH,MAAO,CAAEmB,UAAW,KAAOK,KAgCxBS,EA3BA,WACb,OACE,gBAAClC,EAAA,EAAD,KACE,gBAACA,EAAA,EAAD,CAAMC,MAAO,CAAEkC,cAAe,QAC5B,gBAACnC,EAAA,EAAD,CAAMC,MAAO,CAAEY,KAAM,IACnB,gBAACb,EAAA,EAAD,CAAMC,MAAO,CAAEkC,cAAe,MAAOf,UAAW,KAC9C,gBAAC,EAAD,CAAaE,MAAM,UAAUE,KAAM,GAAIC,MAAM,aAC7C,gBAAC,EAAD,CAAaH,MAAM,UAAUE,KAAM,GAAIC,MAAM,aAC7C,gBAAC,EAAD,CAAaH,MAAM,UAAUE,KAAM,GAAIC,MAAM,cAE/C,gBAACzB,EAAA,EAAD,CAAMC,MAAO,CAAEc,WAAY,WACzB,gBAAC,EAAD,CAAaO,MAAM,UAAUE,KAAM,IAAKC,MAAM,cAAcxB,MAAO,CAAEmB,UAAW,QAGpF,gBAACpB,EAAA,EAAD,CAAMC,MAAO,CAAEc,WAAY,SAAUF,KAAM,EAAGG,eAAgB,WAC5D,gBAAC,EAAD,CAAaM,MAAM,UAAUE,KAAM,GAAIvB,MAAO,CAAEyB,OAAQ,KACxD,gBAAC1B,EAAA,EAAD,CAAMC,MAAO,CAAEkC,cAAe,QAC5B,gBAAC,EAAD,CAAab,MAAM,UAAUE,KAAM,GAAIvB,MAAO,CAAEyB,OAAQ,EAAGU,YAAa,MACxE,gBAAC,EAAD,CAAad,MAAM,UAAUE,KAAM,GAAIvB,MAAO,CAAEyB,OAAQ,MAE1D,gBAAC,EAAD,CAAaJ,MAAM,UAAUE,KAAM,GAAIvB,MAAO,CAAEyB,OAAQ,S,wBCjBrDW,EAAsB,WACjC,OAvB+B,WAA6E,IAA5EC,EAA2E,uDAAhD,SAAgD,EACvEC,YAAe,kBAAMC,IAAWC,IAAIH,MADmC,WACpGI,EADoG,KACxFC,EADwF,KAmB3G,OAfAJ,aAAgB,WACd,IAAIK,GAA4B,EAE1BC,EAAmB,SAACC,GACxBF,GAA6BD,EAAcG,EAAeR,KAK5D,OAFAE,IAAWO,iBAAiB,SAAUF,GAE/B,WACLD,GAA4B,EAC5BJ,IAAWQ,oBAAoB,SAAUH,MAE1C,CAACP,EAAKK,IAEFD,EAIAO,CAAkB,WCzBZ,SAASC,EAAT,GAAwF,IAKjGC,EAL4BC,EAAoE,EAApEA,SAC1BC,EAAShB,IACTiB,EAAID,EAAOxB,MACX0B,EAAIF,EAAOzB,OASjB,OALEuB,EAHYI,EAAID,EAEN,IACFC,EAAI,IAEJD,EAAI,IAEdE,QAAQC,IAAI,CAAEN,UAEZ,gBAACnD,EAAA,EAAD,CAAMC,MAAOC,EAAOC,WAClB,gBAACH,EAAA,EAAD,CAAMC,MAAO,CAACC,EAAOwD,QAAS,CAAEC,UAAW,CAAC,CAAER,aAC5C,gBAAC/C,EAAA,EAAD,CAAMH,MAAOC,EAAOG,OAApB,4BACA,gBAACL,EAAA,EAAD,CAAMC,MAAOC,EAAO0D,SACjBR,GAEH,gBAAC,EAAD,QAMR,IAAMlD,EAASS,IAAWC,OAAO,CAC/BT,UAAW,CACTU,KAAM,EACNC,gBAAiB,UACjBC,WAAY,SACZC,eAAgB,SAChBC,QAAS,GACTW,OAAQ,QAEVgC,QAAS,CACP7C,WAAY,SACZD,gBAAiB,UACjB+C,kBAAmB,UACnBC,gBAAiB,UACjBC,iBAAkB,UAClBC,eAAgB,UAChBC,YAAa,EACbrC,OAAQ,IACRZ,eAAgB,SAChBC,QAAS,GACTY,MAAO,KAET6B,QAAS,CACP1C,eAAgB,SAChBD,WAAY,SACZD,gBAAiB,UACjBa,aAAc,GACduC,cAAe,GACfC,kBAAmB,IAErB9D,MAAO,CACLa,SAAU,GACVkD,eAAgB,GAChBC,UAAW,YC1DA,SAASC,EAAT,GAEgD,IAD7DvE,EAC4D,EAD5DA,WAEA,OACE,gBAACmD,EAAD,KACE,gBAAC9C,EAAA,EAAD,CAAMH,MAAOC,EAAOG,OAAQ,SAC5B,gBAACC,EAAA,EAAD,CAAkBC,QAAS,kBAAMR,EAAWwE,KAAK,SAAStE,MAAOC,EAAOO,MACtE,gBAACL,EAAA,EAAD,CAAMH,MAAOC,EAAOQ,UAApB,iBAMR,IAAMR,EAASS,IAAWC,OAAO,CAC/BP,MAAO,CACLa,SAAU,GACVC,WAAY,QAEdV,KAAM,CACJW,UAAW,GACXC,gBAAiB,IAEnBX,SAAU,CACRQ,SAAU,GACVI,MAAO,aCxBI,SAASkD,EAAT,GAEgD,IAD7DzE,EAC4D,EAD5DA,WAEA,OACE,gBAACmD,EAAD,KACE,gBAAC9C,EAAA,EAAD,CAAMH,MAAOC,EAAOG,OAAQ,QAC5B,gBAACC,EAAA,EAAD,CAAkBC,QAAS,kBAAMR,EAAWwE,KAAK,eAAetE,MAAOC,EAAOO,MAC5E,gBAACL,EAAA,EAAD,CAAMH,MAAOC,EAAOQ,UAApB,uBAMR,IAAMR,EAASS,IAAWC,OAAO,CAC/BP,MAAO,CACLa,SAAU,GACVC,WAAY,QAEdV,KAAM,CACJW,UAAW,GACXC,gBAAiB,IAEnBX,SAAU,CACRQ,SAAU,GACVI,MAAO,a,4CC5BEmD,EAAa,CACxBC,EAAG,CACD,CAAC,EAAG,EAAG,EAAG,IAEZC,EAAG,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAETC,EAAG,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAETC,EAAG,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAETC,EAAG,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAETC,EAAG,CACD,CAAC,EAAG,GACJ,CAAC,EAAG,IAENC,EAAG,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAIEC,EAAS,CACpBP,EAAG,CAAC,EAAE,EAAG,GAAI,CAAC,GAAI,IAClBC,EAAG,CAAC,CAAC,EAAG,IACRC,EAAG,CAAC,CAAC,EAAG,IACRC,EAAG,CAAC,CAAC,EAAG,IACRC,EAAG,CAAC,CAAC,EAAG,IACRC,EAAG,CAAC,CAAC,EAAG,IACRC,EAAG,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,EAAE,EAAG,GAAI,CAAC,GAAI,KAGvBE,EAA8B,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAK,KC1CxDC,EACH,GADGA,EAED,GAFCA,EAGF,GAHEA,EAIH,G,kCCqGKC,E,WA/Fb,WAAYC,GAAsB,IAAD,EAqB/B,GArB+B,YAC/BC,KAAKC,KAAOF,EAAOE,KACnBD,KAAKE,GAAL,SAAUH,EAAOG,IAAjB,EAAuB,EAAE,EAAG,GAEvBH,EAAOI,YAGVH,KAAKG,YAAcJ,EAAOI,YAF1BH,KAAKG,YAAc,EAKhBJ,EAAOK,UAGVJ,KAAKI,UAAYL,EAAOK,UAFxBJ,KAAKI,UAAYC,KAAKC,MAKnBP,EAAOQ,MAGVP,KAAKO,MAAQR,EAAOQ,MAFpBP,KAAKO,MAAQpB,EAAWY,EAAOE,MAAMO,KAAI,SAACC,GAAD,OAAOA,MAI7CV,EAAOG,GACV,OAAQH,EAAOE,MACb,IAAK,IACHD,KAAKE,GAAK,CAAC,EAAG,GACd,MACF,IAAK,IAGL,IAAK,IAGL,IAAK,IAGL,IAAK,IAGL,IAAK,IAGL,IAAK,IACHF,KAAKE,GAAK,EAAE,EAAG,I,6CAQrB,IAAMK,EAAQP,KAAKO,MACbG,EAAqBH,EAAM,GAAGC,KAAI,SAACG,EAAKC,GAAN,OAAgBL,EAAMC,KAAI,SAAAK,GAAG,OAAIA,EAAID,MAAQE,aAC/EC,EAAS,CACbf,KAAKE,GAAG,GAAKP,EAAOK,KAAKC,MAAMD,KAAKG,aAAa,GACjDH,KAAKE,GAAG,GAAKP,EAAOK,KAAKC,MAAMD,KAAKG,aAAa,IAE7Ca,EAAkBhB,KAAKG,YAAc,GAAKR,EAAOK,KAAKC,MAAMgB,OAChE,EAAIjB,KAAKG,YAAc,EACzB,OAAO,IAAIL,EAAM,CACfS,MAAOG,EACPT,KAAMD,KAAKC,KACXC,GAAIa,EACJZ,YAAaa,EACbZ,UAAWJ,KAAKI,c,6BAGA,IAAfc,EAAc,uDAAV,EACP,OAAO,IAAIpB,EAAM,CACfS,MAAOP,KAAKO,MACZN,KAAMD,KAAKC,KACXC,GAAI,CAACF,KAAKE,GAAG,GAAKgB,EAAGlB,KAAKE,GAAG,IAC7BC,YAAaH,KAAKG,YAClBC,UAAWC,KAAKC,U,8BAIlB,OAAO,IAAIR,EAAM,CACfS,MAAOP,KAAKO,MACZN,KAAMD,KAAKC,KACXC,GAAI,CAACF,KAAKE,GAAG,GAAIF,KAAKE,GAAG,GAAK,GAC9BC,YAAaH,KAAKG,YAClBC,UAAWJ,KAAKI,c,6BAIlB,OAAO,IAAIN,EAAM,CACfS,MAAOP,KAAKO,MACZN,KAAMD,KAAKC,KACXC,GAAI,CAACF,KAAKE,GAAG,GAAIF,KAAKE,GAAG,GAAK,GAC9BC,YAAaH,KAAKG,YAClBC,UAAWJ,KAAKI,gB,KCjGhBxF,EAASS,IAAWC,OAAO,CAC/BT,UAAW,CACTiC,YAAa,EACbqE,aAAc,GAEhBC,MAAO,CACL3F,WAAY,SACZ4F,YAAa,UACb1C,YAAa,EACbrC,OAAQ,GACRZ,eAAgB,SAChBa,MAAO,IAET+E,MAAO,CACLhF,OAAQ,GACRC,MAAO,GACPf,gBAAiB,aAYNsE,EARD,SAAC,GAA+C,IAA7CyB,EAA4C,EAA5CA,MACf,OACE,gBAAC7G,EAAA,EAAD,CAAMC,MAAO,CAACC,EAAOwG,MAAOG,EAAQ,CAAEF,YAAa,cAAYG,IAC7D,gBAAC9G,EAAA,EAAD,CAAMC,MAAO,CAACC,EAAO0G,MAAOC,EAAQ,CAAE/F,gBAAiB,cAAYgG,OCT1DC,EAXA,SAAC,GAA2E,IAAzEC,EAAwE,EAAxEA,OAAQ/G,EAAgE,EAAhEA,MACxB,OACE,gBAACD,EAAA,EAAD,CAAMC,MAAO,CAACC,EAAOC,UAAW,CAAEyB,OAAyB,GAAjBqF,IAAEzF,KAAKwF,IAAgB/G,IAC9DgH,IAAEnB,IAAIkB,GAAQ,SAACb,EAAKD,GAAN,OACb,gBAAClG,EAAA,EAAD,CAAMkH,IAAKhB,EAAOjG,MAAO,CAAEkC,cAAe,MAAON,MAAqB,GAAdoF,IAAEzF,KAAK2E,GAAWnF,eAAgB,kBACvFiG,IAAEnB,IAAIK,GAAK,SAACU,EAAOX,GAAR,OAAkB,gBAAC,EAAD,CAAOgB,IAAKhB,EAAOW,MAAOA,aAQ5D3G,EAASS,IAAWC,OAAO,CAC/BT,UAAW,CACTc,QAAS,EAAGD,eAAgB,gBAAiB2F,YAAa,QAAS1C,YAAa,EAAGnD,gBAAiB,a,kBChBzF,SAASqG,EAAT,GAAgE,IAA9ClH,EAA6C,EAA7CA,MAEzBmH,EAAWC,IAAMC,WAAWC,EAAQ,MAA+BC,IACzE,OACE,gBAACxH,EAAA,EAAD,CAAMC,MAAO,CAAC,CAAEkC,cAAe,OAASlC,IACrCgH,IAAEnB,IAAI2B,MAAM,IAAI,kBAAM,gBAACC,EAAA,EAAD,CACrBC,OAAQ,CAAEH,IAAKJ,GACfnH,MAAO,CAAE4B,MAAO,GAAID,OAAQ,GAAIgG,SAAU,UAC1CC,WAAY,CACVjG,OAAQ,IACRkG,MAAO,IACPC,WAAY,QACZC,KAAM,GACNnG,MAAO,WCQF,SAASoG,IAA2B,IAAD,IACtB1F,WAAsB,IAAI6C,EAAM,CACxDG,KAAI,SAAE0B,IAAEiB,OAAuBhD,IAA3B,EAAyC,OAFC,WACzCiD,EADyC,KAClCC,EADkC,KAI1CC,EAAgBnD,GAAW+B,IAAEqB,QAAQpD,EAAWiD,EAAM5C,MAAQ,GAAK0B,IAAEzF,KAAK0D,IAChFqD,aAAY,WACVH,GAAS,SAACI,GAAD,OACNA,EAAahD,GAAG,GAAKgD,EAAa3C,MAAMU,OAAS,GAC9CiC,EAAaC,OACb,IAAIrD,EAAM,CAAEG,KAAM8C,SACvB,KACHK,KAAO,SAACxB,GACFA,IAAQ/B,GAAiBiD,GAAS,SAACI,GAAD,OAAkBA,EAAaG,YACjEzB,IAAQ/B,GAAeiD,GAAS,SAACI,GAAD,OAAkBA,EAAaV,UAC/DZ,IAAQ/B,GAAgBiD,GAAS,SAACI,GAAD,OAAkBA,EAAaI,WAChE1B,IAAQ/B,GAAeiD,GAAS,SAACI,GAAD,OAAkBA,EAAaC,aAErE,IAAMI,EA7BW,SAAC7B,EAAgBmB,GAAkB,IAC5CtC,EAAcsC,EAAdtC,MAAOL,EAAO2C,EAAP3C,GAQf,OAPAK,EAAMiD,SAAQ,SAACC,EAAGC,GAAJ,OACZD,EAAED,SAAQ,SAACtC,EAAGyC,GACRzD,EAAG,GAAKwD,GAAK,GAAKxD,EAAG,GAAKwD,EAAI,IAAMxD,EAAG,GAAKyD,EAAI,KAClDjC,EAAOxB,EAAG,GAAKwD,GAAGxD,EAAG,GAAKyD,GAAKpD,EAAMmD,GAAGC,UAIvCjC,EAoBWkC,CNSqBjC,IAAEnB,IAAI2B,MAAM,KAAK,kBAAMR,IAAEnB,IAAI2B,MAAM,IAAK,MMTnCU,GAC5C,OACE,gBAACjF,EAAD,KACE,gBAAClD,EAAA,EAAD,CAAMC,MAAO,CAAEkC,cAAe,MAAOgH,UAAU,aAActH,MAAO,SAClE,gBAAC,EAAD,CAAQmF,OAAQ6B,IAChB,gBAAC7I,EAAA,EAAD,CAAMC,MAAO,CAAEmJ,WAAY,GAAIvI,KAAM,IACnC,gBAACT,EAAA,EAAD,CAAMH,MAAO,CAAEiB,SAAU,KAAzB,SACA,gBAACiG,EAAD,CAAQlH,MAAO,CAAEmE,eAAgB,GAAI+E,UAAW,cAChD,gBAAC/I,EAAA,EAAD,CAAMH,MAAO,CAAEiB,SAAU,KAAzB,cACA,gBAACiG,EAAD,CAAQlH,MAAO,CAAEmE,eAAgB,GAAI+E,UAAW,cAChD,gBAAC/I,EAAA,EAAD,CAAMH,MAAO,CAAEiB,SAAU,KAAzB,SACA,gBAACiG,EAAD,CAAQlH,MAAO,CAAEmE,eAAgB,GAAI+E,UAAW,cAChD,gBAAC/I,EAAA,EAAD,CAAMH,MAAO,CAAEiB,SAAU,KAAzB,QACA,gBAAC,EAAD,CACE8F,OAAQC,IAAEoC,MNHmBpC,IAAEnB,IAAI2B,MAAM,IAAI,kBAAMR,IAAEnB,IAAI2B,MAAM,GAAI,MMGpC,IAAIrC,EAAM,CAAEG,KAAM8C,IAAiBxC,OAClE5F,MAAO,CAAEgE,YAAa,EAAGG,eAAgB,GAAI+E,UAAW,iB,ICxDrD,GACbG,SAAU,C,OAACC,QAAgB,MAC3BC,OAAQ,CACNC,QAAS,CACPC,KAAM,IACNlF,KAAM,QACNyD,WAAY,QACZ0B,SAAU,OCID,SAASC,EAAT,GAAsF,IAAhEC,EAA+D,EAA/DA,YACnC,OACE,gBAACC,EAAA,EAAD,CACEC,QAASC,EACTC,MAAuB,SAAhBJ,EAAyBK,IAAYC,KAC5C,gBAACC,GAAD,OAON,IAAMC,EAAQC,cAEd,SAASF,KACP,OACE,gBAACC,EAAME,UAAP,CAAiBC,cAAe,CAAEC,aAAa,IAC7C,gBAACJ,EAAMK,OAAP,CAAcC,KAAK,OAAOC,UAAWtG,IACrC,gBAAC+F,EAAMK,OAAP,CAAcC,KAAK,OAAOC,UAAWpG,IACrC,gBAAC6F,EAAMK,OAAP,CAAcC,KAAK,aAAaC,UAAW3C,IAC3C,gBAACoC,EAAMK,OAAP,CAAcC,KAAK,WAAWC,UAAW9K,EAAgB+K,QAAS,CAAExK,MAAO,c,+DC/B7E,kBAAmByK,WACrBzH,OAAON,iBAAiB,QAAQ,WAC9B+H,UAAUC,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAAUC,OAGfC,OAAM,SAAUC,GACf7H,QAAQ2H,KAAK,oCAAqCE,U,oBCV1DC,EAAOC,QAAU,IAA0B,oC","file":"static/js/app.bf132299.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport Navigation from '/navigation';\nimport io from 'socket.io-client';\n\n// Check socket connection\nconst socket = io(`${process.env.EXPO_SOCKET_URL}`);\n\nexport default function App(): JSX.Element | null {\n    return (\n      <SafeAreaProvider>\n        <Navigation />\n        <StatusBar />\n      </SafeAreaProvider>\n    );\n}\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>): JSX.Element {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{'This screen doesn\\'t exist.'}</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { TouchableOpacity, View, Text, ViewStyle } from 'react-native';\nimport * as React from 'react';\n\n\nconst RoundButton = ({\n  size, color, label, style,\n}: {\n  size: number, color: string, label?: string, style?: ViewStyle,\n}): JSX.Element => {\n  return (\n    <View style={[{ alignItems: 'center', margin: 10 }, style]}>\n      <TouchableOpacity\n        style={{\n          backgroundColor: color,\n          borderRadius: size / 2,\n          height: size,\n          width: size,\n          shadowColor: 'rgba(0,0,0, .4)',\n          shadowOffset: { height: 1, width: 1 },\n          shadowOpacity: 20,\n          shadowRadius: 5,\n        }} />\n      <Text style={{ marginTop: 10 }}>{label}</Text>\n    </View>\n  );\n};\n\nconst Keypad = (): JSX.Element => {\n  return (\n    <View>\n      <View style={{ flexDirection: 'row' }}>\n        <View style={{ flex: 1 }}>\n          <View style={{ flexDirection: 'row', marginTop: 20 }}>\n            <RoundButton color=\"#2dc421\" size={50} label=\"Pause(P)\"/>\n            <RoundButton color=\"#2dc421\" size={50} label=\"Sound(S)\"/>\n            <RoundButton color=\"#efcc19\" size={50} label=\"Reset(R)\"/>\n          </View>\n          <View style={{ alignItems: 'center' }}>\n            <RoundButton color=\"#5a65f1\" size={160} label=\"Drop(Space)\" style={{ marginTop: 20 }}/>\n          </View>\n        </View>\n        <View style={{ alignItems: 'center', flex: 1, justifyContent: 'center' }}>\n          <RoundButton color=\"#5a65f1\" size={70} style={{ margin: 0 }} />\n          <View style={{ flexDirection: 'row' }}>\n            <RoundButton color=\"#5a65f1\" size={70} style={{ margin: 0, marginRight: 60}} />\n            <RoundButton color=\"#5a65f1\" size={70} style={{ margin: 0 }} />\n          </View>\n          <RoundButton color=\"#5a65f1\" size={70} style={{ margin: 0 }} />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Keypad;\n","import { Dimensions, ScaledSize } from 'react-native';\nimport * as React from 'react';\n\ntype EventValue = {\n  window: ScaledSize;\n  screen: ScaledSize;\n};\n\nexport const useDimensionsSync = (dim: 'window' | 'screen' = 'window'): { width: number, height: number } => {\n  const [dimensions, setDimensions] = React.useState(() => Dimensions.get(dim));\n\n  // Start listening to changes\n  React.useEffect(() => {\n    let stillCareAboutTheCallback = true;\n\n    const updateDimensions = (nextDimensions: EventValue) => {\n      stillCareAboutTheCallback && setDimensions(nextDimensions[dim]);\n    };\n\n    Dimensions.addEventListener('change', updateDimensions);\n\n    return () => {\n      stillCareAboutTheCallback = false;\n      Dimensions.removeEventListener('change', updateDimensions);\n    };\n  }, [dim, setDimensions]);\n\n  return dimensions;\n};\n\nexport const useWindowDimensions = (): { width: number, height: number } => {\n  return useDimensionsSync('window');\n};\n","import { StyleSheet, Text, View } from 'react-native';\nimport * as React from 'react';\nimport Keypad from '/components/Keypad';\n\nimport { useWindowDimensions } from '/hooks/useWindowDimensions';\n\nexport default function Gameboy({ children }: { children: JSX.Element[] | JSX.Element }): JSX.Element {\n  const window = useWindowDimensions();\n  const w = window.width;\n  const h = window.height;\n  const ratio = h / w;\n  let scale;\n  if (ratio < 1.5) {\n    scale = h / 960;\n  } else {\n    scale = w / 560;\n  }\n  console.log({ scale });\n  return (\n    <View style={styles.container}>\n      <View style={[styles.gameboy, { transform: [{ scale }] }]}>\n        <Text style={styles.title}>R E D ■ T E T R I S</Text>\n        <View style={styles.display}>\n          {children}\n        </View>\n        <Keypad/>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#009688',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n    height: '100%',\n  },\n  display: {\n    alignItems: 'center',\n    backgroundColor: '#9ead86',\n    borderBottomColor: '#fa6b6b',\n    borderLeftColor: '#980f0f',\n    borderRightColor: '#fa6b6b',\n    borderTopColor: '#980f0f',\n    borderWidth: 5,\n    height: 470,\n    justifyContent: 'center',\n    padding: 10,\n    width: 400,\n  },\n  gameboy: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#af0000',\n    borderRadius: 20,\n    paddingBottom: 50,\n    paddingHorizontal: 50,\n  },\n  title: {\n    fontSize: 30,\n    marginVertical: 20,\n    textAlign: 'center',\n  },\n});\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\n\nimport Gameboy from '/components/Gameboy';\n\nexport default function Login({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'Root'>): JSX.Element {\n  return (\n    <Gameboy>\n      <Text style={styles.title}>{'Login'}</Text>\n      <TouchableOpacity onPress={() => navigation.push('Room')} style={styles.link}>\n        <Text style={styles.linkText}>Go to room!</Text>\n      </TouchableOpacity>\n    </Gameboy>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#004580',\n  },\n});\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\n\nimport Gameboy from '/components/Gameboy';\n\nexport default function Room({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'Room'>): JSX.Element {\n  return (\n    <Gameboy>\n      <Text style={styles.title}>{'Room'}</Text>\n      <TouchableOpacity onPress={() => navigation.push('Playground')} style={styles.link}>\n        <Text style={styles.linkText}>Go to Playground!</Text>\n      </TouchableOpacity>\n    </Gameboy>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#004580',\n  },\n});","import _ from 'lodash';\n\nexport const blockShape = {\n  I: [\n    [1, 1, 1, 1],\n  ],\n  L: [\n    [0, 0, 1],\n    [1, 1, 1],\n  ],\n  J: [\n    [1, 0, 0],\n    [1, 1, 1],\n  ],\n  Z: [\n    [1, 1, 0],\n    [0, 1, 1],\n  ],\n  S: [\n    [0, 1, 1],\n    [1, 1, 0],\n  ],\n  O: [\n    [1, 1],\n    [1, 1],\n  ],\n  T: [\n    [0, 1, 0],\n    [1, 1, 1],\n  ],\n};\n\nexport const origin = {\n  I: [[-1, 1], [1, -1]],\n  L: [[0, 0]],\n  J: [[0, 0]],\n  Z: [[0, 0]],\n  S: [[0, 0]],\n  O: [[0, 0]],\n  T: [[0, 0], [1, 0], [-1, 1], [0, -1]],\n};\n\nexport const blockType: TetriminosType[] = ['I','L','J','Z','S','O', 'T'];\n\nexport const speeds = [800, 650, 500, 370, 250, 160];\n\nexport const delays = [50, 60, 70, 80, 90, 100];\n\nexport const fillLine = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\n\nexport const blankLine = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\nexport const blankMatrix = (): Matrix => _.map(Array(20), () => _.map(Array(10), 0));\n\nexport const blockMatrix = (): Matrix => _.map(Array(2), () => _.map(Array(4), 0));\n","export const keyboard = {\n  'left': 37,\n  'rotate': 38,\n  'right': 39,\n  'down': 40,\n  'space': 32,\n  'sound': 83,\n  'reset': 82,\n  'pause': 80,\n};\n","\nimport { blockShape, origin } from '/constants/tetriminos.ts';\n\nclass Block {\n  xy: number[];\n  shape: number[][];\n  type: TetriminosType;\n  rotateIndex: number;\n  timeStamp: number;\n\n  constructor(option: BlockOption) {\n    this.type = option.type;\n    this.xy = option.xy ?? [-1, 4];\n  \n    if (!option.rotateIndex) {\n      this.rotateIndex = 0;\n    } else {\n      this.rotateIndex = option.rotateIndex;\n    }\n\n    if (!option.timeStamp) {\n      this.timeStamp = Date.now();\n    } else {\n      this.timeStamp = option.timeStamp;\n    }\n\n    if (!option.shape) { // init\n      this.shape = blockShape[option.type].map((e) => e);\n    } else {\n      this.shape = option.shape;\n    }\n    if (!option.xy) {\n      switch (option.type) {\n        case 'I': // I\n          this.xy = [0, 3];\n          break;\n        case 'L': // L\n          this.xy = [-1, 4];\n          break;\n        case 'J': // J\n          this.xy = [-1, 4];\n          break;\n        case 'Z': // Z\n          this.xy = [-1, 4];\n          break;\n        case 'S': // S\n          this.xy = [-1, 4];\n          break;\n        case 'O': // O\n          this.xy = [-1, 4];\n          break;\n        case 'T': // T\n          this.xy = [-1, 4];\n          break;\n        default:\n          break;\n      }\n    }\n  }\n  rotate(): Block {\n    const shape = this.shape;\n    const result: number[][] = shape[0].map((val, index) => shape.map(row => row[index]).reverse());\n    const nextXy = [\n      this.xy[0] + origin[this.type][this.rotateIndex][0],\n      this.xy[1] + origin[this.type][this.rotateIndex][1],\n    ];\n    const nextRotateIndex = this.rotateIndex + 1 >= origin[this.type].length ?\n      0 : this.rotateIndex + 1;\n    return new Block({\n      shape: result,\n      type: this.type,\n      xy: nextXy,\n      rotateIndex: nextRotateIndex,\n      timeStamp: this.timeStamp,\n    });\n  }\n  fall(n = 1): Block {\n    return new Block({\n      shape: this.shape,\n      type: this.type,\n      xy: [this.xy[0] + n, this.xy[1]],\n      rotateIndex: this.rotateIndex,\n      timeStamp: Date.now(),\n    });\n  }\n  right(): Block {\n    return new Block({\n      shape: this.shape,\n      type: this.type,\n      xy: [this.xy[0], this.xy[1] + 1],\n      rotateIndex: this.rotateIndex,\n      timeStamp: this.timeStamp,\n    });\n  }\n  left(): Block {\n    return new Block({\n      shape: this.shape,\n      type: this.type,\n      xy: [this.xy[0], this.xy[1] - 1],\n      rotateIndex: this.rotateIndex,\n      timeStamp: this.timeStamp,\n    });\n  }\n}\n\nexport default Block;\n","import { StyleSheet, View } from 'react-native';\nimport * as React from 'react';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginRight: 2,\n    marginBottom: 2,\n  },\n  outer: {\n    alignItems: 'center',\n    borderColor: '#879372',\n    borderWidth: 1,\n    height: 20,\n    justifyContent: 'center',\n    width: 20,\n  },\n  inner: {\n    height: 12,\n    width: 12,\n    backgroundColor: '#879372',\n  },\n});\n\nconst Block = ({ value }: { value: number }): JSX.Element => {\n  return (\n    <View style={[styles.outer, value ? { borderColor: 'black' } : undefined]}>\n      <View style={[styles.inner, value ? { backgroundColor: 'black' } : undefined]} />\n    </View>\n  );\n};\n\nexport default Block;\n","import _ from 'lodash';\nimport { View, ViewStyle, StyleSheet } from 'react-native';\nimport * as React from 'react';\n\nimport Block from '/components/Block';\n\nconst Matrix = ({ matrix, style }: { matrix: Matrix, style?: ViewStyle }): JSX.Element => {\n  return (\n    <View style={[styles.container, { height: _.size(matrix) * 22 }, style]}>\n      {_.map(matrix, (row, index) =>\n        <View key={index} style={{ flexDirection: 'row', width: _.size(row) * 22, justifyContent: 'space-between' }}>\n          {_.map(row, (value, index) => <Block key={index} value={value} />)}\n        </View>)}\n    </View>\n  );\n};\n\nexport default Matrix;\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 2, justifyContent: 'space-between', borderColor: 'black', borderWidth: 1, backgroundColor: '#9ead86',\n  },\n});","import _ from 'lodash';\nimport { Asset } from 'expo-asset';\nimport { ImageBackground, View, ViewStyle } from 'react-native';\nimport * as React from 'react';\n\nexport default function Digits({ style }: { style?: ViewStyle }): JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const imageURI = Asset.fromModule(require('../../../assets/sprite.png')).uri;\n  return (\n    <View style={[{ flexDirection: 'row' }, style]} >\n      {_.map(Array(6), () => <ImageBackground\n        source={{ uri: imageURI }}\n        style={{ width: 14, height: 24, overflow: 'hidden' }}\n        imageStyle={{\n          height: 186,\n          left: -215,\n          resizeMode: 'cover',\n          top: -25,\n          width: 400,\n        }}\n      />)}\n    </View>\n  );\n}\n","import _ from 'lodash';\nimport { View, Text } from 'react-native';\nimport * as React from 'react';\nimport useInterval from '@use-it/interval';\nimport useKey from 'use-key-hook';\n\nimport { blankMatrix, blockMatrix } from '/constants/tetriminos';\nimport { blockType } from '/constants/tetriminos';\nimport { keyboard } from '/constants/keyboard';\nimport Block from '/models/block';\nimport Matrix from '/components/Matrix';\nimport Gameboy from '/components/Gameboy';\nimport Digits from '/components/Digits';\n\nconst printBlock = (matrix: Matrix, block: Block) => { \n  const { shape, xy } = block;\n  shape.forEach((m, i) => (\n    m.forEach((n, j) => {\n      if (xy[0] + i >= 0 && xy[0] + i < 20 && xy[1] + j < 10) {\n        matrix[xy[0] + i][xy[1] + j] = shape[i][j];\n      }\n    })\n  ));\n  return matrix;\n};\n\nexport default function Playground(): JSX.Element {\n  const [block, setBlock] = React.useState<Block>(new Block({\n    type: _.sample<TetriminosType>(blockType) ?? 'T',\n  }));\n  const nextBlockType = blockType[(_.indexOf(blockType, block.type) + 1) % _.size(blockType)];\n  useInterval(() => {\n    setBlock((currentBlock) =>\n      (currentBlock.xy[0] + currentBlock.shape.length < 20)\n        ? currentBlock.fall()\n        : new Block({ type: nextBlockType }));\n  }, 500);\n  useKey((key: number) => {\n    if (key === keyboard.rotate) setBlock((currentBlock) => currentBlock.rotate());\n    if (key === keyboard.left) setBlock((currentBlock) => currentBlock.left());\n    if (key === keyboard.right) setBlock((currentBlock) => currentBlock.right());\n    if (key === keyboard.down) setBlock((currentBlock) => currentBlock.fall());\n  });\n  const newMatrix = printBlock(blankMatrix(), block);\n  return (\n    <Gameboy>\n      <View style={{ flexDirection: 'row', alignSelf:'flex-start', width: '100%' }}>\n        <Matrix matrix={newMatrix} />\n        <View style={{ marginLeft: 20, flex: 1 }} >\n          <Text style={{ fontSize: 20 }}>Score</Text>\n          <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n          <Text style={{ fontSize: 20 }}>Start Line</Text>\n          <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n          <Text style={{ fontSize: 20 }}>Level</Text>\n          <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n          <Text style={{ fontSize: 20 }}>Next</Text>\n          <Matrix\n            matrix={_.merge(blockMatrix(), new Block({ type: nextBlockType }).shape)}\n            style={{ borderWidth: 0, marginVertical: 10, alignSelf: 'flex-end' }}\n          />\n        </View>\n      </View>\n    </Gameboy>\n  );\n}\n","import * as Linking from 'expo-linking';\n\nexport default {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Root: '/',\n      Room: '/room',\n      Playground: '/play',\n      NotFound: '*',\n    },\n  },\n};\n","import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport NotFoundScreen from '/screens/NotFoundScreen';\nimport Login from '/screens/Login';\nimport Room from '/screens/Room';\nimport Playground from '/screens/Playground';\nimport LinkingConfiguration from '/navigation/LinkingConfiguration';\n\n// If you are not familiar with React Navigation, we recommend going through the\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\nexport default function Navigation({ colorScheme }: { colorScheme?: ColorSchemeName }): JSX.Element {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Root\" component={Login} />\n      <Stack.Screen name=\"Room\" component={Room} />\n      <Stack.Screen name=\"Playground\" component={Playground} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/sprite.81de6409.png\";"],"sourceRoot":""}