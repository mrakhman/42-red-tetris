{"version":3,"sources":["src/client/components/Keypad/index.tsx","src/client/hooks/useWindowDimensions/index.ts","src/client/components/Gameboy/index.tsx","src/client/models/block.ts","src/client/components/Digits/index.tsx","src/client/components/Block/index.tsx","src/client/components/Matrix/index.tsx","src/client/screens/Playground/index.tsx","src/client/screens/Playground/utils.tsx","src/client/screens/NotFoundScreen.tsx","src/client/screens/Login/index.tsx","src/client/navigation/LinkingConfiguration.ts","src/client/navigation/index.tsx","App.tsx","web-build/register-service-worker.js","assets/sprite.png","src/client/constants/keyboard.ts","src/client/constants/tetriminos.ts"],"names":["RoundButton","size","color","label","style","onPress","View","alignItems","margin","TouchableOpacity","backgroundColor","borderRadius","height","width","shadowColor","shadowOffset","shadowOpacity","shadowRadius","Text","marginTop","Keypad","flexDirection","flex","justifyContent","document","dispatchEvent","KeyboardEvent","keyCode","keyboard","rotate","which","marginRight","left","right","down","useWindowDimensions","dim","React","Dimensions","get","dimensions","setDimensions","stillCareAboutTheCallback","updateDimensions","nextDimensions","addEventListener","removeEventListener","useDimensionsSync","Gameboy","scale","children","window","w","h","styles","container","gameboy","transform","title","display","StyleSheet","create","padding","borderBottomColor","borderLeftColor","borderRightColor","borderTopColor","borderWidth","paddingBottom","paddingHorizontal","fontSize","marginVertical","textAlign","Block","option","this","type","timeStamp","Date","now","shape","blockShape","pos","initialPos","map","val","index","row","reverse","n","Digits","imageURI","Asset","fromModule","require","uri","_","Array","key","source","overflow","imageStyle","resizeMode","top","marginBottom","outer","borderColor","inner","value","undefined","Matrix","block","matrix","rowIndex","colIndex","socket","io","Playground","params","useRoute","room","username","useState","roomUsers","setRoomUsers","sample","blockTypes","setBlock","blankMatrix","setMatrix","useEffect","emit","on","message","addResponseMessage","text","data","users","user","nextBlockType","indexOf","useInterval","currentBlock","hit","forEach","col","hitBlock","newMatrix","cloneDeep","printBlock","fall","useKey","alignSelf","marginLeft","blockMatrix","subtitle","formatChatSubtitle","handleNewUserMessage","players","length","join","NotFoundScreen","navigation","replace","link","linkText","fontWeight","paddingVertical","Login","useNavigation","setUsername","setRoom","TextInput","onChangeText","push","prefixes","Linking","config","screens","Root","NotFound","Navigation","colorScheme","NavigationContainer","linking","LinkingConfiguration","theme","DarkTheme","DefaultTheme","RootNavigator","Stack","createStackNavigator","Navigator","screenOptions","headerShown","Screen","name","component","options","App","StatusBar","navigator","serviceWorker","register","scope","then","info","catch","error","console","module","exports","I","L","J","Z","S","O","T"],"mappings":"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","file":"static/js/app.ec3181fa.chunk.js","sourcesContent":["import { TouchableOpacity, View, Text, ViewStyle } from 'react-native';\nimport * as React from 'react';\n\nimport { keyboard } from '/client/constants/keyboard';\n\nconst RoundButton = ({\n  size, color, label, style, onPress,\n}: {\n  size: number, color: string, label?: string, style?: ViewStyle, onPress?: () =>  void,\n}): JSX.Element => {\n  return (\n    <View style={[{ alignItems: 'center', margin: 10 }, style]}>\n      <TouchableOpacity\n        onPress={onPress}\n        style={{\n          backgroundColor: color,\n          borderRadius: size / 2,\n          height: size,\n          width: size,\n          shadowColor: 'rgba(0,0,0, .4)',\n          shadowOffset: { height: 1, width: 1 },\n          shadowOpacity: 20,\n          shadowRadius: 5,\n        }} />\n      <Text style={{ marginTop: 10 }}>{label}</Text>\n    </View>\n  );\n};\n\nconst Keypad = (): JSX.Element => {\n  return (\n    <View>\n      <View style={{ flexDirection: 'row' }}>\n        <View style={{ flex: 1 }}>\n          <View style={{ flexDirection: 'row', marginTop: 20 }}>\n            <RoundButton color=\"#2dc421\" size={50} label=\"Pause(P)\"/>\n            <RoundButton color=\"#2dc421\" size={50} label=\"Sound(S)\"/>\n            <RoundButton color=\"#efcc19\" size={50} label=\"Reset(R)\"/>\n          </View>\n          <View style={{ alignItems: 'center' }}>\n            <RoundButton color=\"#5a65f1\" size={160} label=\"Drop(Space)\" style={{ marginTop: 20 }}/>\n          </View>\n        </View>\n        <View style={{ alignItems: 'center', flex: 1, justifyContent: 'center' }}>\n          <RoundButton\n            color=\"#5a65f1\" size={70} style={{ margin: 0 }}\n            // @ts-ignore https://github.com/microsoft/TSJS-lib-generator/pull/892\n            onPress={() => document.dispatchEvent(new KeyboardEvent('keydown', { keyCode: keyboard.rotate, which: keyboard.rotate }))}\n          />\n          <View style={{ flexDirection: 'row' }}>\n            <RoundButton\n              color=\"#5a65f1\" size={70} style={{ margin: 0, marginRight: 60 }}\n              // @ts-ignore https://github.com/microsoft/TSJS-lib-generator/pull/892\n              onPress={() => document.dispatchEvent(new KeyboardEvent('keydown', { keyCode: keyboard.left, which: keyboard.left }))}\n            />\n            <RoundButton\n              color=\"#5a65f1\" size={70} style={{ margin: 0 }}\n              // @ts-ignore https://github.com/microsoft/TSJS-lib-generator/pull/892\n              onPress={() => document.dispatchEvent(new KeyboardEvent('keydown', { keyCode: keyboard.right, which: keyboard.right }))}\n            />\n          </View>\n          <RoundButton\n            color=\"#5a65f1\" size={70} style={{ margin: 0 }}\n            // @ts-ignore https://github.com/microsoft/TSJS-lib-generator/pull/892\n            onPress={() => document.dispatchEvent(new KeyboardEvent('keydown', { keyCode: keyboard.down, which: keyboard.down }))}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Keypad;\n","import { Dimensions, ScaledSize } from 'react-native';\nimport * as React from 'react';\n\ntype EventValue = {\n  window: ScaledSize;\n  screen: ScaledSize;\n};\n\nexport const useDimensionsSync = (dim: 'window' | 'screen' = 'window'): { width: number, height: number } => {\n  const [dimensions, setDimensions] = React.useState(() => Dimensions.get(dim));\n\n  // Start listening to changes\n  React.useEffect(() => {\n    let stillCareAboutTheCallback = true;\n\n    const updateDimensions = (nextDimensions: EventValue) => {\n      stillCareAboutTheCallback && setDimensions(nextDimensions[dim]);\n    };\n\n    Dimensions.addEventListener('change', updateDimensions);\n\n    return () => {\n      stillCareAboutTheCallback = false;\n      Dimensions.removeEventListener('change', updateDimensions);\n    };\n  }, [dim, setDimensions]);\n\n  return dimensions;\n};\n\nexport const useWindowDimensions = (): { width: number, height: number } => {\n  return useDimensionsSync('window');\n};\n","import { StyleSheet, Text, View } from 'react-native';\nimport * as React from 'react';\nimport Keypad from '/client/components/Keypad';\n\nimport { useWindowDimensions } from '/client/hooks/useWindowDimensions';\n\nexport default function Gameboy({ children }: { children: JSX.Element[] | JSX.Element }): JSX.Element {\n  const window = useWindowDimensions();\n  const w = window.width;\n  const h = window.height;\n  const ratio = h / w;\n  let scale;\n  if (ratio < 1.5) {\n    scale = h / 960;\n  } else {\n    scale = w / 560;\n  }\n  return (\n    <View style={styles.container}>\n      <View style={[styles.gameboy, { transform: [{ scale }] }]}>\n        <Text style={styles.title}>R E D ■ T E T R I S</Text>\n        <View style={styles.display}>\n          {children}\n        </View>\n        <Keypad/>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#009688',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n    height: '100%',\n  },\n  display: {\n    alignItems: 'center',\n    backgroundColor: '#9ead86',\n    borderBottomColor: '#fa6b6b',\n    borderLeftColor: '#980f0f',\n    borderRightColor: '#fa6b6b',\n    borderTopColor: '#980f0f',\n    borderWidth: 5,\n    height: 470,\n    justifyContent: 'center',\n    padding: 10,\n    width: 400,\n  },\n  gameboy: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#af0000',\n    borderRadius: 20,\n    paddingBottom: 50,\n    paddingHorizontal: 50,\n  },\n  title: {\n    fontSize: 30,\n    marginVertical: 20,\n    textAlign: 'center',\n  },\n});\n","\nimport { blockShape, initialPos } from '/client/constants/tetriminos.ts';\n\nclass Block {\n  pos: number[];\n  shape: number[][];\n  type: TetriminosType;\n  timeStamp: number;\n\n  constructor(option: BlockOption) {\n    this.type = option.type;\n\n    if (!option.timeStamp) {\n      this.timeStamp = Date.now();\n    } else {\n      this.timeStamp = option.timeStamp;\n    }\n    if (!option.shape) {\n      this.shape = blockShape[this.type];\n    } else {\n      this.shape = option.shape;\n    }\n    if (!option.pos) {\n      this.pos = initialPos[this.type];\n    } else this.pos = option.pos;\n  }\n  rotate(): Block {\n    const shape = this.shape;\n    const result: number[][] = shape[0].map((val, index) => shape.map(row => row[index]).reverse());\n    return new Block({\n      shape: result,\n      type: this.type,\n      pos: this.pos,\n      timeStamp: this.timeStamp,\n    });\n  }\n  fall(n = 1): Block {\n    return new Block({\n      shape: this.shape,\n      type: this.type,\n      pos: [this.pos[0] + n, this.pos[1]],\n      timeStamp: Date.now(),\n    });\n  }\n  right(): Block {\n    return new Block({\n      shape: this.shape,\n      type: this.type,\n      pos: [this.pos[0], this.pos[1] + 1],\n      timeStamp: this.timeStamp,\n    });\n  }\n  left(): Block {\n    return new Block({\n      shape: this.shape,\n      type: this.type,\n      pos: [this.pos[0], this.pos[1] - 1],\n      timeStamp: this.timeStamp,\n    });\n  }\n}\n\nexport default Block;\n","import _ from 'lodash';\nimport { Asset } from 'expo-asset';\nimport { ImageBackground, View, ViewStyle } from 'react-native';\nimport * as React from 'react';\n\nexport default function Digits({ style }: { style?: ViewStyle }): JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const imageURI = Asset.fromModule(require('../../../../assets/sprite.png')).uri;\n  return (\n    <View style={[{ flexDirection: 'row' }, style]} >\n      {_.map(Array(6), (val, index: number) => <ImageBackground\n        key={index}\n        source={{ uri: imageURI }}\n        style={{ width: 14, height: 24, overflow: 'hidden' }}\n        imageStyle={{\n          height: 186,\n          left: -215,\n          resizeMode: 'cover',\n          top: -25,\n          width: 400,\n        }}\n      />)}\n    </View>\n  );\n}\n","import { StyleSheet, View } from 'react-native';\nimport * as React from 'react';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginRight: 2,\n    marginBottom: 2,\n  },\n  outer: {\n    alignItems: 'center',\n    borderColor: '#879372',\n    borderWidth: 1,\n    height: 20,\n    justifyContent: 'center',\n    width: 20,\n  },\n  inner: {\n    height: 12,\n    width: 12,\n    backgroundColor: '#879372',\n  },\n});\n\nconst Block = ({ value }: { value: number }): JSX.Element => {\n  return (\n    <View style={[styles.outer, value ? { borderColor: 'black' } : undefined]}>\n      <View style={[styles.inner, value ? { backgroundColor: 'black' } : undefined]} />\n    </View>\n  );\n};\n\nexport default Block;\n","import _ from 'lodash';\nimport { View, ViewStyle, StyleSheet } from 'react-native';\nimport * as React from 'react';\n\nimport BlockComponent from '/client/components/Block';\nimport Block from '/client/models/block';\n\nconst Matrix = ({ block, matrix, style }: { block: Block, matrix: Matrix, style?: ViewStyle }): JSX.Element => {\n  return (\n    <View style={[styles.container, { height: _.size(matrix) * 22 }, style]}>\n      {_.map(matrix, (row, rowIndex) =>\n        <View key={rowIndex} style={{ flexDirection: 'row', width: _.size(row) * 22, justifyContent: 'space-between' }}>\n          {_.map(row, (value, colIndex) =>\n            (\n              (block.pos[0] <= rowIndex) && (block.pos[0] + _.size(block.shape) > rowIndex) &&\n              (block.pos[1] <= colIndex) && (block.pos[1] + _.size(block.shape[0])) > colIndex\n            ) ?\n              <BlockComponent key={colIndex} value={block.shape[rowIndex - block.pos[0]][colIndex - block.pos[1]] || value} />\n              : <BlockComponent key={colIndex} value={value} />\n          )}\n        </View>)}\n    </View>\n  );\n};\n\nexport default Matrix;\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 2, justifyContent: 'space-between', borderColor: 'black', borderWidth: 1, backgroundColor: '#9ead86',\n  },\n});","import  React, { useState, useEffect } from 'react';\nimport _ from 'lodash';\nimport 'react-chat-widget/lib/styles.css';\nimport { View, Text } from 'react-native';\nimport { Widget as ChatWidget, addResponseMessage } from 'react-chat-widget';\nimport useInterval from '@use-it/interval';\nimport useKey from 'use-key-hook';\nimport { useRoute, RouteProp } from '@react-navigation/native';\nimport io from 'socket.io-client';\n\nimport { blankMatrix, blockMatrix } from '/client/constants/tetriminos';\nimport { blockTypes } from '/client/constants/tetriminos';\nimport { keyboard } from '/client/constants/keyboard';\nimport Block from '/client/models/block';\nimport Digits from '/client/components/Digits';\nimport formatChatSubtitle from '/client/screens/Playground/utils';\nimport Gameboy from '/client/components/Gameboy';\nimport Matrix from '/client/components/Matrix';\n\n// Initialize new socket\nconst socket = io(`${process.env.EXPO_SOCKET_URL}`);\n\nconst printBlock = (matrix: Matrix, block: Block) => { \n  const { shape, pos } = block;\n  const newMatrix = _.cloneDeep(matrix);\n  shape.forEach((row, rowIndex) => (\n    row.forEach((col, colIndex) => {\n      if (\n        shape[rowIndex][colIndex] &&\n        pos[0] + rowIndex >= 0 && pos[0] + rowIndex < 20 && pos[1] + colIndex < 10\n      ) {\n        newMatrix[pos[0] + rowIndex][pos[1] + colIndex] = shape[rowIndex][colIndex];\n      }\n    })\n  ));\n  return newMatrix;\n};\n\nconst hitBlock = (matrix: Matrix, block: Block) => { \n  const { shape, pos } = block;\n  let hit = false;\n  shape.forEach((row, rowIndex) => (\n    row.forEach((col, colIndex) => {\n      if (\n        shape[rowIndex][colIndex] &&\n        (((pos[0] + rowIndex) > 18) || matrix?.[pos[0] + rowIndex + 1]?.[pos[1] + colIndex])\n      ) {\n        hit = true;\n      }\n    })\n  ));\n  return hit;\n};\n\nexport default function Playground(): JSX.Element {\n  const route = useRoute<RouteProp<RootStackParamList, 'Playground'>>();\n  const { params } = route;\n  const { room, username } = params ?? {};\n  const [roomUsers, setRoomUsers] = useState<string[]>([]);\n  const [block, setBlock] = useState<Block>(new Block({\n    type: _.sample<TetriminosType>(blockTypes) ?? 'T',\n  }));\n  const [matrix, setMatrix] = useState<Matrix>(blankMatrix());\n  useEffect(() => {\n    socket.emit('joinRoom', { username, room });\n    // Message from server\n    socket.on('message', (message: Message) => {\n      if (message.username !== username)\n        addResponseMessage(message.username + ': ' + message.text, message.username);\n    });\n    socket.on('update room users', (data: { room: string, users: User[] }) => {\n      setRoomUsers(data.users.map((user) => user.username));\n    });\n  }, []);\n  const handleNewUserMessage = (message: string) => {\n    socket.emit('chatMessage', message);\n  };\n  const nextBlockType = blockTypes[(_.indexOf(blockTypes, block.type) + 1) % _.size(blockTypes)];\n  useInterval(() => {\n    setBlock((currentBlock) => {\n      if (hitBlock(matrix, currentBlock)) {\n        setMatrix(printBlock(matrix, currentBlock));\n        return new Block({ type: nextBlockType });\n      } else {\n        return currentBlock.fall();\n      }\n    });\n  }, 500);\n  useKey((key: number) => {\n    if (key === keyboard.rotate) setBlock((currentBlock) => currentBlock.rotate());\n    if (key === keyboard.left) setBlock((currentBlock) => currentBlock.left());\n    if (key === keyboard.right) setBlock((currentBlock) => currentBlock.right());\n    if (key === keyboard.down) setBlock((currentBlock) => currentBlock.fall());\n  });\n  return (\n    <>\n      <Gameboy>\n        <View style={{ flexDirection: 'row', alignSelf:'flex-start', width: '100%' }}>\n          <Matrix matrix={matrix} block={block}/>\n          <View style={{ marginLeft: 20, flex: 1 }} >\n            <Text style={{ fontSize: 20 }}>Score</Text>\n            <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n            <Text style={{ fontSize: 20 }}>Start Line</Text>\n            <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n            <Text style={{ fontSize: 20 }}>Level</Text>\n            <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n            <Text style={{ fontSize: 20 }}>Next</Text>\n            <Matrix\n              matrix={blockMatrix()}\n              block={new Block({ type: nextBlockType, pos: [0, 0] })}\n              style={{ borderWidth: 0, marginVertical: 10, alignSelf: 'flex-end' }}\n            />\n          </View>\n        </View>\n      </Gameboy>\n      {room && username &&\n        <ChatWidget title=\"RedTetris\" subtitle={formatChatSubtitle(roomUsers)} handleNewUserMessage={handleNewUserMessage}/>\n      }\n    </>\n  );\n}\n","const formatChatSubtitle = (players: string[]): string => {\n  if (players.length === 0) return 'No players';\n  return `Players: ${players.join(', ')}`;\n};\n\nexport default formatChatSubtitle;\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>): JSX.Element {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{'This screen doesn\\'t exist.'}</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { StackNavigationProp } from '@react-navigation/stack';\nimport { StyleSheet, Text, TouchableOpacity, TextInput, View } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport * as React from 'react';\n\nimport Gameboy from '/client/components/Gameboy';\n\nexport default function Login(): JSX.Element {\n  const navigation = useNavigation<StackNavigationProp<RootStackParamList, 'Root'>>();\n  const [username, setUsername] = React.useState<string | null>();\n  const [room, setRoom] = React.useState<string | null>();\n  return (\n    <Gameboy>\n      <View style={{ alignItems: 'center' }}>\n        <Text style={styles.title}>{'Username'}</Text>\n        <TextInput\n          value={username ?? ''}\n          onChangeText={setUsername}\n          style={{ borderWidth: 1, marginBottom: 20, height: 30 }}\n        />\n        <Text style={styles.title}>{'Room'}</Text>\n        <TextInput\n          value={room ?? ''}\n          onChangeText={setRoom}\n          style={{ borderWidth: 1, marginBottom: 20, height: 30 }}\n        />\n        <TouchableOpacity\n          style={{ marginBottom: 20 }}\n          onPress={() => username && room && navigation.push('Playground', { username, room })}\n        >\n          <Text style={styles.linkText}>Join Room</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => navigation.push('Playground', {})}\n        >\n          <Text style={styles.linkText}>Solo mode</Text>\n        </TouchableOpacity>\n      </View>\n    </Gameboy>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    marginBottom: 10,\n    alignSelf: 'flex-start',\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#004580',\n  },\n});\n","import * as Linking from 'expo-linking';\n\nexport default {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Root: '/',\n      Playground: '/play',\n      NotFound: '*',\n    },\n  },\n};\n","import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport NotFoundScreen from '/client/screens/NotFoundScreen';\nimport Login from '/client/screens/Login';\nimport Playground from '/client/screens/Playground';\nimport LinkingConfiguration from '/client/navigation/LinkingConfiguration';\n\n// If you are not familiar with React Navigation, we recommend going through the\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\nexport default function Navigation({ colorScheme }: { colorScheme?: ColorSchemeName }): JSX.Element {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Root\" component={Login} />\n      <Stack.Screen name=\"Playground\" component={Playground} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport Navigation from './src/client/navigation';\n\nexport default function App(): JSX.Element | null {\n  return (\n    <SafeAreaProvider>\n      <Navigation />\n      <StatusBar />\n    </SafeAreaProvider>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/sprite.81de6409.png\";","export const keyboard = {\n  'left': 37,\n  'rotate': 38,\n  'right': 39,\n  'down': 40,\n  'space': 32,\n  'sound': 83,\n  'reset': 82,\n  'pause': 80,\n};\n","import _ from 'lodash';\n\nexport const blockShape = {\n  I: [\n    [0, 0, 0, 0],\n    [1, 1, 1, 1],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ],\n  L: [\n    [0, 0, 1],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n  J: [\n    [1, 0, 0],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n  Z: [\n    [1, 1, 0],\n    [0, 1, 1],\n    [0, 0, 0],\n  ],\n  S: [\n    [0, 1, 1],\n    [1, 1, 0],\n    [0, 0, 0],\n  ],\n  O: [\n    [1, 1],\n    [1, 1],\n  ],\n  T: [\n    [0, 1, 0],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n};\n\nexport const initialPos = {\n  I: [0, 3],\n  L: [-1, 4],\n  J: [-1, 4],\n  Z: [-1, 4],\n  S: [-1, 4],\n  O: [-1, 4],\n  T: [-1, 4],\n};\n\nexport const blockTypes: TetriminosType[] = ['I','L','J','Z','S','O', 'T'];\n\nexport const speeds = [800, 650, 500, 370, 250, 160];\n\nexport const delays = [50, 60, 70, 80, 90, 100];\n\nexport const fillLine = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\n\nexport const blankLine = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\nexport const blankMatrix = (): Matrix => _.map(Array(20), () => _.map(Array(10), 0));\n\nexport const blockMatrix = (): Matrix => _.map(Array(2), () => _.map(Array(4), 0));\n"],"sourceRoot":""}