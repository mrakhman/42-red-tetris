{"version":3,"sources":["src/client/screens/Login/utils.ts","src/client/components/Keypad/index.tsx","src/client/hooks/useWindowDimensions/index.ts","src/client/components/Gameboy/index.tsx","App.tsx","src/client/navigation/index.tsx","src/client/screens/NotFoundScreen.tsx","src/client/navigation/LinkingConfiguration.ts","src/client/constants/tetriminos.ts","src/client/models/block.ts","src/client/components/Digits/index.tsx","src/client/screens/Playground/utils.tsx","src/client/components/Block/index.tsx","src/client/components/Matrix/index.tsx","src/client/screens/Playground/index.tsx","src/client/hooks/useKeyEvent/index.tsx","src/client/screens/Login/ChooseUsername.tsx","src/client/screens/Login/ChooseRoom.tsx","src/client/screens/Login/index.tsx","src/client/constants/keyboard.ts","web-build/register-service-worker.js","assets/sprite.png","src/config/constants.ts","src/client/context/SocketContext.ts","src/client/context/UserContext.ts"],"names":["isEmpty","value","undefined","checkTextLength","text","length","checkUsername","username","a","async","Error","axios","get","response","data","message","console","log","RoundButton","size","color","label","style","onPress","disabled","View","alignItems","TouchableOpacity","backgroundColor","borderRadius","height","width","shadowColor","shadowOffset","shadowOpacity","shadowRadius","Text","marginTop","Keypad","isPause","keyDown","key","document","dispatchEvent","KeyboardEvent","keyCode","which","flexDirection","flex","justifyContent","keyboard","pause","sound","reset","space","margin","rotate","marginRight","left","right","down","useWindowDimensions","dim","React","Dimensions","dimensions","setDimensions","stillCareAboutTheCallback","updateDimensions","nextDimensions","addEventListener","removeEventListener","useDimensionsSync","Gameboy","props","scale","children","roomPlayers","isLeader","userContext","useContext","UserContext","isMultiplayerMode","room","window","w","h","styles","container","gameboy","transform","title","display","position","opacity","otherPlayersNumber","gameMode","secondLineText","previewText","StyleSheet","create","padding","borderBottomColor","borderLeftColor","borderRightColor","borderTopColor","borderWidth","paddingBottom","paddingHorizontal","fontSize","marginVertical","textAlign","marginBottom","App","Navigation","colorScheme","linking","LinkingConfiguration","theme","DarkTheme","DefaultTheme","RootNavigator","Stack","createStackNavigator","socket","io","setUserContext","Provider","updateUserContext","Navigator","screenOptions","headerShown","Screen","name","component","Login","Playground","NotFoundScreen","options","navigation","replace","link","linkText","fontWeight","paddingVertical","prefixes","Linking","config","screens","Root","NotFound","blockShape","I","L","J","Z","S","O","T","initialPos","blockTypes","blankMatrix","_","map","Array","blockMatrix","Block","option","this","type","timeStamp","Date","now","shape","pos","val","index","row","reverse","n","matrix","newState","fall","isValid","positions","rowIndex","colIndex","push","rows","getBlockPos","cols","min","top","max","bottom","find","shapePos","isEqual","hitBlock","col","getCorner","newMatrix","cloneDeep","Digits","imageURI","Asset","fromModule","require","uri","ImageBackground","source","overflow","imageStyle","resizeMode","formatChatSubtitle","players","join","outer","borderColor","inner","Matrix","block","isBlock","SocketContext","useState","setRoomPlayers","sample","setBlock","setMatrix","setIsPause","player","setCurrentPlayer","useKey","_key","prevState","prevIsPause","prevMatrix","currentBlock","printBlock","nextBlock","drop","useKeyEvent","useEffect","emit","SOCKETS","ENTER_ROOM","roomName","on","CHAT_MESSAGE","addResponseMessage","FETCH_CURRENT_PLAYER","UPDATE_ROOM_PLAYERS","nextBlockType","indexOf","useInterval","includes","alignSelf","marginLeft","subtitle","handleNewUserMessage","ChooseUsername","setUsername","setScreenNumber","useNavigation","ussernameError","setUsernameError","error","TextInput","onChangeText","button","then","CREATE_USER","catch","err","ChooseRoom","setRoomName","roomNameError","setRoomNameError","waitingRooms","setWaitingRooms","FETCH_WAITING_ROOMS","roomNames","UPDATE_WAITING_ROOMS","onJoinRoomPress","CHOOSE_ROOM","waitingRoom","roomsList","screenNumber","navigator","serviceWorker","register","scope","info","module","exports","createContext"],"mappings":"6MAIaA,EAAU,SAACC,GAAD,YAA8CC,IAAVD,GAAiC,OAAVA,GAA4B,KAAVA,GAEvFE,EAAkB,SAACC,GAC9B,OAAIJ,EAAQI,MACRA,GAAQA,EAAKC,OAND,KAULC,EAAgB,SAAOC,GAAP,eAAAC,EAAAC,OAAA,mDACtBN,EAAgBI,GADM,sBAEnBG,MAAM,6BAFa,kCAAAF,EAAA,MAKFG,IAAMC,KAAN,g0BAA8CL,IAL5C,UAKnBM,EALmB,QAMrBb,EAAQa,EAASC,KAAKP,UAND,0CAMmB,GANnB,aAOnBG,MAAM,0BAPa,qCASH,2BAAlB,KAAMK,QATe,uBAUjBL,MAAM,0BAVW,QAWzBM,QAAQC,IAAR,MAXyB,oE,+ICPvBC,EAAc,SAAC,GAKD,IAJlBC,EAIiB,EAJjBA,KAAMC,EAIW,EAJXA,MAAOC,EAII,EAJJA,MAAOC,EAIH,EAJGA,MAAOC,EAIV,EAJUA,QAASC,EAInB,EAJmBA,SAKpC,OACE,gBAACC,EAAA,EAAD,CAAMH,MAAO,CAAC,CAAEI,WAAY,UAAYJ,IACtC,gBAACK,EAAA,EAAD,CACEH,SAAUA,EACVD,QAASA,EACTD,MAAO,CACLM,gBAAiBR,EACjBS,aAAcV,EAAO,EACrBW,OAAQX,EACRY,MAAOZ,EACPa,YAAa,kBACbC,aAAc,CAAEH,OAAQ,EAAGC,MAAO,GAClCG,cAAe,GACfC,aAAc,KAEjBd,GAAS,gBAACe,EAAA,EAAD,CAAMd,MAAO,CAAEe,UAAW,KAAOhB,KAiElCiB,EA5DA,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,QACVC,EAAU,SAACC,GAEfC,SAASC,cAAc,IAAIC,cAAc,UAAW,CAAEC,QAASJ,EAAKK,MAAOL,MAE7E,OACE,gBAAChB,EAAA,EAAD,CAAMH,MAAO,CAAES,MAAO,MACpB,gBAACN,EAAA,EAAD,CAAMH,MAAO,CAAEyB,cAAe,MAAOhB,MAAO,SAC1C,gBAACN,EAAA,EAAD,CAAMH,MAAO,CAAE0B,KAAM,IACnB,gBAACvB,EAAA,EAAD,CAAMH,MAAO,CAAEyB,cAAe,MAAOV,UAAW,GAAIY,eAAgB,kBAClE,gBAAC,EAAD,CACE7B,MAAM,UAAUD,KAAM,GAAIE,MAAOkB,EAAU,UAAY,WACvDhB,QAAS,kBAAMiB,EAAQU,IAASC,UAElC,gBAAC,EAAD,CACE/B,MAAM,UAAUD,KAAM,GAAIE,MAAM,WAChCE,QAAS,kBAAMiB,EAAQU,IAASE,UAElC,gBAAC,EAAD,CACEhC,MAAM,UAAUD,KAAM,GAAIE,MAAM,WAChCE,QAAS,kBAAMiB,EAAQU,IAASG,WAGpC,gBAAC5B,EAAA,EAAD,CAAMH,MAAO,CAAEI,WAAY,WACzB,gBAAC,EAAD,CACEN,MAAM,UAAUD,KAAM,IAAKE,MAAM,cAAcC,MAAO,CAAEe,UAAW,IACnEb,SAAUe,EACVhB,QAAS,kBAAMiB,EAAQU,IAASI,YAItC,gBAAC7B,EAAA,EAAD,CAAMH,MAAO,CAAEI,WAAY,SAAUsB,KAAM,EAAGC,eAAgB,WAC5D,gBAAC,EAAD,CACE7B,MAAM,UAAUD,KAAM,GAAIG,MAAO,CAAEiC,OAAQ,GAC3C/B,SAAUe,EACVhB,QAAS,kBAAMiB,EAAQU,IAASM,WAElC,gBAAC/B,EAAA,EAAD,CAAMH,MAAO,CAAEyB,cAAe,QAC5B,gBAAC,EAAD,CACE3B,MAAM,UAAUD,KAAM,GAAIG,MAAO,CAAEiC,OAAQ,EAAGE,YAAa,IAC3DjC,SAAUe,EACVhB,QAAS,kBAAMiB,EAAQU,IAASQ,SAElC,gBAAC,EAAD,CACEtC,MAAM,UAAUD,KAAM,GAAIG,MAAO,CAAEiC,OAAQ,GAC3C/B,SAAUe,EACVhB,QAAS,kBAAMiB,EAAQU,IAASS,WAGpC,gBAAC,EAAD,CACEvC,MAAM,UAAUD,KAAM,GAAIG,MAAO,CAAEiC,OAAQ,GAC3C/B,SAAUe,EACVhB,QAAS,kBAAMiB,EAAQU,IAASU,a,wBCrD/BC,EAAsB,WACjC,OAvB+B,WAA6E,IAA5EC,EAA2E,uDAAhD,SAAgD,EACvEC,YAAe,kBAAMC,IAAWpD,IAAIkD,MADmC,WACpGG,EADoG,KACxFC,EADwF,KAmB3G,OAfAH,aAAgB,WACd,IAAII,GAA4B,EAE1BC,EAAmB,SAACC,GACxBF,GAA6BD,EAAcG,EAAeP,KAK5D,OAFAE,IAAWM,iBAAiB,SAAUF,GAE/B,WACLD,GAA4B,EAC5BH,IAAWO,oBAAoB,SAAUH,MAE1C,CAACN,EAAKI,IAEFD,EAIAO,CAAkB,W,QCOZ,SAASC,EAAQC,GAA4B,IAQtDC,EAPGC,EAA4CF,EAA5CE,SAAUrC,EAAkCmC,EAAlCnC,QAASsC,EAAyBH,EAAzBG,YAAaC,EAAYJ,EAAZI,SAChCC,EAAeC,qBAAWC,KAA1BF,YACDG,KAAoBH,EAAYxE,WAAYwE,EAAYI,MACxDC,EAASvB,IACTwB,EAAID,EAAOrD,MACXuD,EAAIF,EAAOtD,OASjB,OALE6C,EAHYW,EAAID,EAEN,IACFC,EAAI,IAEJD,EAAI,IAIZ,kBAAC5D,EAAA,EAAD,CAAMH,MAAOiE,EAAOC,WAClB,kBAAC/D,EAAA,EAAD,CAAMH,MAAO,CAACiE,EAAOE,QAAS,CAAEC,UAAW,CAAC,CAAEf,aAC5C,kBAACvC,EAAA,EAAD,CAAMd,MAAOiE,EAAOI,OAApB,4BACA,kBAAClE,EAAA,EAAD,CAAMH,MAAOiE,EAAOK,SACjBhB,EACArC,EACC,kBAACd,EAAA,EAAD,CAAMH,MAAO,CAACiE,EAAOK,QAAS,CAAEC,SAAU,WAAYC,QAAS,MArDhD,SAACZ,EAA4Ba,EAA4BjB,GAMlF,OAAII,EAEA,kBAACzD,EAAA,EAAD,CAAMH,MAAO,CAAEI,WAAY,WACzB,kBAACU,EAAA,EAAD,CAAMd,MAAOiE,EAAOS,UAApB,+BACA,kBAAC5D,EAAA,EAAD,CAAMd,MAAOiE,EAAOS,UAAWD,EAA/B,+BACA,kBAAC3D,EAAA,EAAD,KAViB,SAAC2D,EAA4BjB,GAClD,OAAIiB,GAAsB,EAAU,yBAChCA,EAAqB,GAAKjB,EAAiB,yBAC3CiB,EAAqB,IAAMjB,EAAiB,yCAAhD,EAOWmB,CAAeF,EAAoBjB,KAK5C,kBAACrD,EAAA,EAAD,CAAMH,MAAO,CAAEI,WAAY,WACzB,kBAACU,EAAA,EAAD,CAAMd,MAAOiE,EAAOS,UAApB,wBACA,kBAAC5D,EAAA,EAAD,gCAoCO8D,CAAYhB,EAAmBL,EAAYxE,OAAS,EAAGyE,IAExD,MAEN,kBAAC,EAAD,CAAQvC,QAASA,MAMzB,IAAMgD,EAASY,IAAWC,OAAO,CAC/BZ,UAAW,CACTxC,KAAM,EACNpB,gBAAiB,UACjBF,WAAY,SACZuB,eAAgB,SAChBoD,QAAS,GACTvE,OAAQ,QAEV8D,QAAS,CACPlE,WAAY,SACZE,gBAAiB,UACjB0E,kBAAmB,UACnBC,gBAAiB,UACjBC,iBAAkB,UAClBC,eAAgB,UAChBC,YAAa,EACb5E,OAAQ,IACRmB,eAAgB,SAChBoD,QAAS,GACTtE,MAAO,KAET0D,QAAS,CACPxC,eAAgB,SAChBvB,WAAY,SACZE,gBAAiB,YACjBC,aAAc,GACd8E,cAAe,GACfC,kBAAmB,IAErBjB,MAAO,CACLkB,SAAU,GACVC,eAAgB,GAChBC,UAAW,UAEbf,SAAU,CACRgB,aAAc,GACdH,SAAU,O,iCC5Gd,iFAMe,SAASI,IACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,MACA,kBAAC,YAAD,S,oNCKS,SAASC,EAAT,GAAsF,IAAhEC,EAA+D,EAA/DA,YACnC,OACE,gBAAC,IAAD,CACEC,QAASC,IACTC,MAAuB,SAAhBH,EAAyBI,IAAYC,KAC5C,gBAACC,EAAD,OAON,IAAMC,EAAQC,cAEd,SAASF,IACP,IAAMG,EAAgCC,IAAG,IAAD,szBADjB,EAGe9D,WAAyE,CAACxD,cAAUL,EAAWiF,UAAMjF,IAHpH,WAGhB6E,EAHgB,KAGH+C,EAHG,KASvB,OACE,gBAAC,IAAcC,SAAf,CAAwB9H,MAAO2H,GAC7B,gBAAC,IAAYG,SAAb,CAAsB9H,MAAO,CAAC8E,cAAaiD,kBANrB,SAAC,GAAwD,IAAvDzH,EAAsD,EAAtDA,SAAU4E,EAA4C,EAA5CA,KACpC2C,EAAe,CAACvH,WAAU4E,YAMtB,gBAACuC,EAAMO,UAAP,CAAiBC,cAAe,CAAEC,aAAa,IAC7C,gBAACT,EAAMU,OAAP,CAAcC,KAAK,OAAOC,UAAWC,MACrC,gBAACb,EAAMU,OAAP,CAAcC,KAAK,aAAaC,UAAWE,MAC3C,gBAACd,EAAMU,OAAP,CAAcC,KAAK,WAAWC,UAAWG,IAAgBC,QAAS,CAAE/C,MAAO,iB,mDC3CrF,2EAGe,SAAS8C,EAAT,GAEoD,IADjEE,EACgE,EADhEA,WAEA,OACE,gBAAC,IAAD,CAAMrH,MAAOiE,EAAOC,WAClB,gBAAC,IAAD,CAAMlE,MAAOiE,EAAOI,OAAQ,8BAC5B,gBAAC,IAAD,CAAkBpE,QAAS,kBAAMoH,EAAWC,QAAQ,SAAStH,MAAOiE,EAAOsD,MACzE,gBAAC,IAAD,CAAMvH,MAAOiE,EAAOuD,UAApB,wBAMR,IAAMvD,EAASY,IAAWC,OAAO,CAC/BZ,UAAW,CACTxC,KAAM,EACNpB,gBAAiB,OACjBF,WAAY,SACZuB,eAAgB,SAChBoD,QAAS,IAEXV,MAAO,CACLkB,SAAU,GACVkC,WAAY,QAEdF,KAAM,CACJxG,UAAW,GACX2G,gBAAiB,IAEnBF,SAAU,CACRjC,SAAU,GACVzF,MAAO,c,iCCnCX,aAEe,KACb6H,SAAU,CAACC,UAAgB,MAC3BC,OAAQ,CACNC,QAAS,CACPC,KAAM,IACNb,WAAY,QACZc,SAAU,Q,wJCNHC,EAAa,CACxa,CACxBP,EAAG,EAAE,EAAG,GACRC,EAAG,EAAE,EAAG,GACRC,EAAG,EAAE,EAAG,GACRC,EAAG,EAAE,EAAG,GACRC,EAAG,EAAE,EAAG,GACRC,EAAG,EAAE,EAAG,GACRC,EAAG,EAAE,EAAG,IAGGE,EAA+B,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAK,KAUzDC,EAAsBC,IAAEC,IAAIC,MAAM,KAAK,kBAAMF,IAAEC,IAAIC,MAAM,IAAK,MAE9DC,EAAsBH,IAAEC,IAAIC,MAAM,IAAI,kBAAMF,IAAEC,IAAIC,MAAM,GAAI,M,oDC8C1DE,E,WAnGb,WAAYC,GAAsB,YAChCC,KAAKC,KAAOF,EAAOE,KAEdF,EAAOG,UAGVF,KAAKE,UAAYH,EAAOG,UAFxBF,KAAKE,UAAYC,KAAKC,MAInBL,EAAOM,MAGVL,KAAKK,MAAQN,EAAOM,MAFpBL,KAAKK,MAAQtB,EAAWiB,KAAKC,MAI1BF,EAAOO,IAELN,KAAKM,IAAMP,EAAOO,IADvBN,KAAKM,IAAMf,EAAWS,KAAKC,M,6CAI7B,IAAMI,EAAQL,KAAKK,MAEnB,OAAO,IAAIP,EAAM,CACfO,MAFyBA,EAAM,GAAGV,KAAI,SAACY,EAAKC,GAAN,OAAgBH,EAAMV,KAAI,SAAAc,GAAG,OAAIA,EAAID,MAAQE,aAGnFT,KAAMD,KAAKC,KACXK,IAAKN,KAAKM,IACVJ,UAAWF,KAAKE,c,6BAGA,IAAfS,EAAc,uDAAV,EACP,OAAO,IAAIb,EAAM,CACfO,MAAOL,KAAKK,MACZJ,KAAMD,KAAKC,KACXK,IAAK,CAACN,KAAKM,IAAI,GAAKK,EAAGX,KAAKM,IAAI,IAChCJ,UAAWC,KAAKC,U,8BAIlB,OAAO,IAAIN,EAAM,CACfO,MAAOL,KAAKK,MACZJ,KAAMD,KAAKC,KACXK,IAAK,CAACN,KAAKM,IAAI,GAAIN,KAAKM,IAAI,GAAK,GACjCJ,UAAWF,KAAKE,c,6BAIlB,OAAO,IAAIJ,EAAM,CACfO,MAAOL,KAAKK,MACZJ,KAAMD,KAAKC,KACXK,IAAK,CAACN,KAAKM,IAAI,GAAIN,KAAKM,IAAI,GAAK,GACjCJ,UAAWF,KAAKE,c,2BAGfU,GAEH,IADA,IAAIC,EAAW,IAAIf,EAAM,CAAEG,KAAMD,KAAKC,KAAMK,IAAKN,KAAKM,IAAKD,MAAOL,KAAKK,QAChEQ,EAASC,OAAOC,QAAQH,IAC7BC,EAAWA,EAASC,OAEtB,OAAOD,I,oCAEkB,IAAD,OAClBG,EAAwB,GAK9B,OAJAtB,IAAEC,IAAIK,KAAKK,OAAO,SAACI,EAAKQ,GAAN,OAChBvB,IAAEC,IAAIc,GAAK,SAACF,EAAKW,GACXX,GAAKS,EAAUG,KAAK,CAACF,EAAW,EAAKX,IAAI,GAAIY,EAAW,EAAKZ,IAAI,WAElEU,I,kCAEkE,IAAD,QAClEI,EAAO1B,IAAEC,IAAIK,KAAKqB,eAAe,kCACjCC,EAAO5B,IAAEC,IAAIK,KAAKqB,eAAe,kCACvC,MAAO,CACLnI,KAAI,SAAEwG,IAAE6B,IAAID,IAAR,EAAiB,EACrBE,IAAG,SAAE9B,IAAE6B,IAAIH,IAAR,EAAiB,EACpBjI,MAAK,SAAEuG,IAAE+B,IAAIH,IAAR,EAAiB,EACtBI,OAAM,SAAEhC,IAAE+B,IAAIL,IAAR,EAAiB,K,8BAGnBd,GACN,YAA8E5K,IAAvEgK,IAAEiC,KAAK3B,KAAKqB,eAAe,SAACO,GAAD,OAAclC,IAAEmC,QAAQD,EAAUtB,Q,8BAE9DM,GACN,IAAMkB,EAAWpC,IAAEiC,KAAK3B,KAAKqB,eAAe,6BAAEZ,EAAF,KAAOsB,EAAP,kBAAgBnB,GAAhB,SAAgBA,EAASH,SAAzB,EAAgB,EAAgBsB,MAD7C,EAEC/B,KAAKgC,YAA7B9I,EAFuB,EAEvBA,KAAMC,EAFiB,EAEjBA,MACd,OAH+B,EAEVuI,OACL,IACXxI,GAAQ,GACRC,EAAQ,KACP2I,I,iCAEGlB,GACT,IAAMqB,EAAYvC,IAAEwC,UAAUtB,GAO9B,OANAlB,IAAEC,IAAIK,KAAKqB,eAAe,SAACf,GACrBA,EAAI,IAAM,GAAKA,EAAI,GAAKZ,IAAE/I,KAAKsL,IAC9B3B,EAAI,IAAM,GAAKA,EAAI,GAAKZ,IAAE/I,KAAKsL,EAAU,MAC5CA,EAAU3B,EAAI,IAAIA,EAAI,IAAM,MAGzB2B,M,uBCnGI,SAASE,EAAT,GAAgE,IAA9CrL,EAA6C,EAA7CA,MAEzBsL,EAAWC,IAAMC,WAAWC,EAAQ,MAAkCC,IAC5E,OACE,gBAACvL,EAAA,EAAD,CAAMH,MAAO,CAAC,CAAEyB,cAAe,OAASzB,IACrC4I,IAAEC,IAAIC,MAAM,IAAI,SAACW,EAAKC,GAAN,OAAwB,gBAACiC,EAAA,EAAD,CACvCxK,IAAKuI,EACLkC,OAAQ,CAAEF,IAAKJ,GACftL,MAAO,CAAES,MAAO,GAAID,OAAQ,GAAIqL,SAAU,UAC1CC,WAAY,CACVtL,OAAQ,IACR4B,MAAO,IACP2J,WAAY,QACZrB,KAAM,GACNjK,MAAO,WCnBjB,IAKeuL,EALY,SAACC,GAC1B,OAAuB,IAAnBA,EAAQlN,OAAqB,aAC3B,YAAakN,EAAQC,KAAK,O,gBCC5BjI,EAASY,IAAWC,OAAO,CAC/BZ,UAAW,CACT/B,YAAa,EACbuD,aAAc,GAEhByG,MAAO,CACL/L,WAAY,SACZgM,YAAa,UACbhH,YAAa,EACb5E,OAAQ,GACRmB,eAAgB,SAChBlB,MAAO,IAET4L,MAAO,CACL7L,OAAQ,GACRC,MAAO,GACPH,gBAAiB,aAYN0I,EARD,SAAC,GAA+C,IAA7CrK,EAA4C,EAA5CA,MACf,OACE,gBAACwB,EAAA,EAAD,CAAMH,MAAO,CAACiE,EAAOkI,MAAOxN,EAAQ,CAAEyN,YAAa,cAAYxN,IAC7D,gBAACuB,EAAA,EAAD,CAAMH,MAAO,CAACiE,EAAOoI,MAAO1N,EAAQ,CAAE2B,gBAAiB,cAAY1B,OCN1D0N,EAXA,SAAC,GAAgG,IAA9FC,EAA6F,EAA7FA,MAAOzC,EAAsF,EAAtFA,OAAQ9J,EAA8E,EAA9EA,MAC/B,OACE,gBAACG,EAAA,EAAD,CAAMH,MAAO,CAACiE,EAAOC,UAAW,CAAE1D,OAJnB,GAI2BoI,IAAE/I,KAAKiK,IAAwB9J,IACtE4I,IAAEC,IAAIiB,GAAQ,SAACH,EAAKQ,GAAN,OACb,gBAAChK,EAAA,EAAD,CAAMgB,IAAKgJ,EAAUnK,MAAO,CAAEyB,cAAe,MAAOhB,MANzC,GAMgDmI,IAAE/I,KAAK8J,GAAmBhI,eAAgB,kBAClGiH,IAAEC,IAAIc,GAAK,SAAChL,EAAOyL,GAAR,OAAqB,gBAAC,EAAD,CAAgBjJ,IAAKiJ,EAAUzL,MAAO4N,EAAMC,QAAQ,CAACrC,EAAUC,IAAa,EAAIzL,aAQrHsF,EAASY,IAAWC,OAAO,CAC/BZ,UAAW,CACTa,QAAS,EAAGpD,eAAgB,gBAAiByK,YAAa,QAAShH,YAAa,EAAG9E,gBAAiB,a,0CCLzF,SAAS4G,IAA2B,IAAD,EAC1CZ,EAAS5C,qBAAW+I,KAClBhJ,EAAgBC,qBAAWC,KAA3BF,YACR/D,QAAQC,IAAI,4BAA6B8D,GAHO,IASxCI,EAAmBJ,EAAnBI,KAAM5E,EAAawE,EAAbxE,SATkC,EAWVyN,mBAAmB,IAXT,WAWzCnJ,EAXyC,KAW5BoJ,EAX4B,OAYtBD,mBAAgB,IAAI1D,EAAM,CAAEG,KAAI,SAAEP,IAAEgE,OAAOlE,IAAX,EAA0B,OAZpC,WAYzC6D,EAZyC,KAYlCM,EAZkC,OAapBH,mBAAiB/D,GAbG,WAazCmB,EAbyC,KAajCgD,EAbiC,OAclBJ,oBAAkB,GAdA,WAczCzL,EAdyC,KAchC8L,EAdgC,OAebL,qBAfa,WAezCM,EAfyC,KAejCC,EAfiC,MCVvB,SAAC,GAKb,IALeF,EAKhB,EALgBA,WAAYD,EAK5B,EAL4BA,UAAWD,EAKvC,EALuCA,SAMnDK,KAAO,SAACC,EAAD,GAAqD,IAE1B,EAFV5L,EAAmC,EAAnCA,SAClBA,IAAYK,IAASC,OAAOkL,GAAW,SAACK,GAAD,OAAgBA,KACvD7L,IAAYK,IAASG,SACvB8K,EAAS,IAAI7D,EAAM,CAAEG,KAAI,SAAEP,IAAEgE,OAAOlE,IAAX,EAA0B,OACnDoE,EAAUnE,GACVoE,GAAW,IAEbA,GAAW,SAACM,GA+BV,OA9BAP,GAAU,SAACQ,GA4BT,OA3BKD,IACC9L,IAAYK,IAASM,QACvB2K,GAAS,SAACU,GAAD,OAAkBA,EAAarL,SAAS+H,QAAQqD,GAAcC,EAAarL,SAAWqL,KAE7FhM,IAAYK,IAASQ,MACvByK,GAAS,SAACU,GAAD,OAAkBA,EAAanL,OAAO6H,QAAQqD,GAAcC,EAAanL,OAASmL,KAEzFhM,IAAYK,IAASS,OACvBwK,GAAS,SAACU,GAAD,OAAkBA,EAAalL,QAAQ4H,QAAQqD,GAAcC,EAAalL,QAAUkL,KAE3FhM,IAAYK,IAASU,MACvBuK,GAAS,SAACU,GACR,OAAIA,EAAavD,OAAOC,QAAQqD,GAAoBC,EAAavD,QAE/D8C,EAAUS,EAAaC,WAAWF,IAC3BC,MAIThM,IAAYK,IAASI,OACvB6K,GAAS,SAACU,GACR,IAAME,EAAYF,EAAaG,KAAKJ,GAEpC,OADAR,EAAUW,EAAUD,WAAWF,IACxBG,MAINH,KAEFD,QDjBXM,CAAY,CAAEd,WAAUC,YAAWC,eAEnCrN,QAAQC,IAAI,uBAAwBqN,GAEpCY,qBAAU,WACR,IAAKtH,EAAQ,MAAMlH,MAAM,aACrBqE,EAAYxE,UAAYwE,EAAYI,MACtCyC,EAAOuH,KAAKC,IAAQC,WAAY,CAAE9O,WAAU+O,SAAUnK,IAGxDyC,EAAO2H,GAAGH,IAAQI,cAAc,SAACzO,GAC3BA,EAAQR,WAAaA,GACvBkP,6BAAmB1O,EAAQR,SAAW,KAAOQ,EAAQX,KAAMW,EAAQR,aAIvEqH,EAAO2H,GAAGH,IAAQM,sBAAsB,SAACpB,GACvCC,EAAiBD,MAGnB1G,EAAO2H,GAAGH,IAAQO,qBAAqB,SAAC7O,GACtCmN,EAAenN,EAAKyM,QAAQpD,KAAI,SAACmE,GAAD,OAAYA,EAAO/N,kBAEpD,IAEH,IAKMqP,EAAgB5F,GAAYE,IAAE2F,QAAQ7F,EAAY6D,EAAMpD,MAAQ,GAAKP,IAAE/I,KAAK6I,IAkBlF,OAjBA8F,aAAY,WACNvN,IACA2H,IAAE6F,SAAS3E,EAAO,GAAI,IACxBgD,EAAUnE,GACVoE,GAAW,IAEXF,GAAS,SAACU,GACR,OAAKhB,EAAMvC,OAAOC,QAAQH,GAIjByD,EAAavD,QAHpB8C,EAAUP,EAAMiB,WAAW1D,IACpB,IAAId,EAAM,CAAEG,KAAMmF,WAM9B,KAGD,oCACE,kBAACnL,EAAA,EAAD,CAASlC,QAASA,EAASsC,YAAaA,EAAaC,SAAQ,MAAEwJ,OAAF,EAAEA,EAAQxJ,UACrE,oCACGvE,GAAY4E,GACb,kBAAC/C,EAAA,EAAD,CAAMd,MAAO,CAAEuF,SAAU,GAAIG,aAAc,GAAIgJ,UAAW,eAAiBzP,EAA3E,MAAwF4E,GACxF,kBAAC1D,EAAA,EAAD,CAAMH,MAAO,CAAEyB,cAAe,MAAOiN,UAAU,aAAcjO,MAAO,SAClE,kBAAC,EAAD,CAAQqJ,OAAQA,EAAQyC,MAAOA,IAC/B,kBAACpM,EAAA,EAAD,CAAMH,MAAO,CAAE2O,WAAY,GAAIjN,KAAM,IACnC,kBAACZ,EAAA,EAAD,CAAMd,MAAO,CAAEuF,SAAU,KAAzB,SACA,kBAAC8F,EAAD,CAAQrL,MAAO,CAAEwF,eAAgB,GAAIkJ,UAAW,cAChD,kBAAC5N,EAAA,EAAD,CAAMd,MAAO,CAAEuF,SAAU,KAAzB,cACA,kBAAC8F,EAAD,CAAQrL,MAAO,CAAEwF,eAAgB,GAAIkJ,UAAW,cAChD,kBAAC5N,EAAA,EAAD,CAAMd,MAAO,CAAEuF,SAAU,KAAzB,SACA,kBAAC8F,EAAD,CAAQrL,MAAO,CAAEwF,eAAgB,GAAIkJ,UAAW,cAChD,kBAAC5N,EAAA,EAAD,CAAMd,MAAO,CAAEuF,SAAU,KAAzB,QACA,kBAAC,EAAD,CACEuE,OAAQf,EACRwD,MAAO,IAAIvD,EAAM,CAAEG,KAAMmF,EAAe9E,IAAK,CAAC,EAAG,KACjDxJ,MAAO,CAAEoF,YAAa,EAAGI,eAAgB,GAAIkJ,UAAW,kBAMjE7K,GAAQ5E,GACP,kBAAC,SAAD,CAAYoF,MAAM,YAAYuK,SAAU5C,EAAmBzI,GAAcsL,qBAjDlD,SAACpP,GAC5B,IAAK6G,EAAQ,MAAMlH,MAAM,aACzBkH,EAAOuH,KAAKC,IAAQI,aAAc,CAAEjP,WAAUQ,UAASoE,e,8KEhD5C,SAASiL,EAAe1L,GAA4B,IAC1DnE,EAA0CmE,EAA1CnE,SAAU8P,EAAgC3L,EAAhC2L,YAAaC,EAAmB5L,EAAnB4L,gBAExB1I,EAAS5C,qBAAW+I,KACpBpF,EAAa4H,0BAJ6C,EAKrBvC,mBAAiB,IALI,WAKzDwC,EALyD,KAKzCC,EALyC,KAqBhE,OACE,kBAAChP,EAAA,EAAD,CAAMH,MAAO,CAAES,MAAO,OAAQL,WAAY,WACxC,kBAACU,EAAA,EAAD,CAAMd,MAAOiE,EAAOI,OAAQ,YAC5B,kBAACvD,EAAA,EAAD,CAAMd,MAAOiE,EAAOmL,OAAQF,GAC5B,kBAACG,EAAA,EAAD,CACE1Q,MAAK,MAAEM,IAAY,GACnBqQ,aAAc,SAAAxQ,GACZqQ,EAAiB,IACjBJ,EAAYjQ,IAEdkB,MAAO,CAAEoF,YAAa,EAAGM,aAAc,GAAIlF,OAAQ,GAAIC,MAAO,UAEhE,kBAACJ,EAAA,EAAD,CACEL,MAAOiE,EAAOsL,OACdtP,QA5BmB,WACvBjB,YAAcC,GACXuQ,MAAK,SAAAhQ,GACJ,IAAa,IAATA,EAAe,CACjB,IAAI8G,EAAQ,MAAMlH,MAAM,aACxBkH,EAAOuH,KAAKC,IAAQ2B,YAAaxQ,GACjC+P,EAAgB,OAGnBU,OAAM,SAAAC,GACLR,EAAiBQ,EAAIlQ,cAoBrB,kBAACqB,EAAA,EAAD,CAAMd,MAAOiE,EAAOuD,UAApB,SAEF,kBAACnH,EAAA,EAAD,CACEL,MAAOiE,EAAOsL,OACdtP,QAAS,kBAAMoH,EAAWgD,KAAK,aAAc,MAE7C,kBAACvJ,EAAA,EAAD,CAAMd,MAAOiE,EAAOuD,UAApB,eAMR,IAAMvD,EAASY,IAAWC,OAAO,CAC/BT,MAAO,CACLqB,aAAc,EACdgJ,UAAW,aACXjJ,UAAW,UAEb2J,MAAO,CACL1J,aAAc,EACdgJ,UAAW,aACXjJ,UAAW,SACX3F,MAAO,WAET0H,SAAU,CACRjC,SAAU,IAEZgK,OAAQ,CACN9O,MAAO,MACP2E,YAAa,EACb7E,aAAc,GACdH,WAAY,SACZ2E,QAAS,EACTW,aAAc,M,QCrEH,SAASkK,EAAWxM,GAA4B,IACtDnE,EAAmCmE,EAAnCnE,SAAU+O,EAAyB5K,EAAzB4K,SAAU6B,EAAezM,EAAfyM,YAErBvJ,EAAS5C,qBAAW+I,KACpBpF,EAAa4H,0BAJyC,EAKlBvC,mBAAiB,IALC,WAKrDoD,EALqD,KAKtCC,EALsC,OAMpBrD,mBAAmB,IANC,WAMrDsD,EANqD,KAMvCC,EANuC,KAOrDvJ,EAAqBhD,qBAAWC,KAAhC+C,kBAEPhH,QAAQC,IAAI,4BAA6BqQ,GACzCpC,qBAAU,WACR,IAAKtH,EAAQ,MAAMlH,MAAM,aAGzBkH,EAAOuH,KAAKC,IAAQoC,qBACpB5J,EAAO2H,GAAGH,IAAQoC,qBAAqB,SAACC,GACtCF,EAAgBE,QAEjB,IAEHvC,qBAAU,WACR,IAAKtH,EAAQ,MAAMlH,MAAM,aAEzBkH,EAAO2H,GAAGH,IAAQsC,sBAAsB,SAACD,GACvCF,EAAgBE,SAIpB,IAAME,EAAkB,SAACrC,GACvB,GAAInP,YAAgBmP,GACf,CAEH,GADAtH,EAAkB,CAAEzH,WAAU4E,KAAMmK,KAC/B1H,EAAQ,MAAMlH,MAAM,aACzBkH,EAAOuH,KAAKC,IAAQwC,YAAa,CAAErR,WAAU+O,aAC7C/O,GAAY+O,GAAY3G,EAAWgD,KAAK,aAAc,CAAEpL,WAAU4E,KAAMmK,SAL3C+B,EAAiB,8BASlD,OACE,kBAAC5P,EAAA,EAAD,CAAMH,MAAO,CAAES,MAAO,OAAQL,WAAY,WACxC,kBAACU,EAAA,EAAD,CAAMd,MAAO,CAAEuF,SAAU,GAAIG,aAAc,KAA3C,UAAyDzG,GACzD,kBAAC6B,EAAA,EAAD,CAAMd,MAAOiE,EAAOI,OAApB,eACA,kBAACvD,EAAA,EAAD,CAAMd,MAAOiE,EAAOmL,OAAQU,GAC5B,kBAACT,EAAA,EAAD,CACE1Q,MAAK,MAAEqP,IAAY,GACnBsB,aAAc,SAAAxQ,GACZiR,EAAiB,IACjBF,EAAY/Q,IAEdkB,MAAO,CAAEoF,YAAa,EAAGM,aAAc,GAAIlF,OAAQ,GAAIC,MAAO,UAEhE,kBAACJ,EAAA,EAAD,CACEL,MAAOiE,EAAOsL,OACdtP,QAAS,kBAAMoQ,EAAgBrC,KAE/B,kBAAClN,EAAA,EAAD,CAAMd,MAAOiE,EAAOuD,UAApB,SAEF,kBAACrH,EAAA,EAAD,CAAMH,MAAO,CAAES,MAAO,MAAOM,UAAW,KACrCiP,EAAajR,OAAS,GAAK,kBAAC+B,EAAA,EAAD,CAAMd,MAAOiE,EAAOI,OAApB,aAC3B2L,EAAajR,OAAS,GAAKiR,EAAanH,KAAI,SAAC0H,GAAD,OAC3C,kBAACpQ,EAAA,EAAD,CAAMgB,IAAKoP,GACT,kBAAClQ,EAAA,EAAD,CACEL,MAAOiE,EAAOuM,UACdvQ,QAAS,kBAAMoQ,EAAgBE,KAE/B,kBAACzP,EAAA,EAAD,KAAOyP,UAQrB,IAAMtM,EAASY,IAAWC,OAAO,CAC/BT,MAAO,CACLqB,aAAc,EACdgJ,UAAW,aACXjJ,UAAW,UAEb2J,MAAO,CACL1J,aAAc,EACdgJ,UAAW,aACXjJ,UAAW,SACX3F,MAAO,WAET0H,SAAU,CACRjC,SAAU,IAEZiL,UAAW,CACTpL,YAAa,EACb7E,aAAc,EACd0B,OAAQ,EACR8C,QAAS,EACT3E,WACF,UAEAmP,OAAQ,CACN9O,MAAO,MACP2E,YAAa,EACb7E,aAAc,GACdH,WAAY,SACZ2E,QAAS,EACTW,aAAc,M,SC/GH,SAASuB,IAAsB,IAAD,EACXyF,qBADW,WACpCzN,EADoC,KAC1B8P,EAD0B,OAEXrC,qBAFW,WAEpCsB,EAFoC,KAE1B6B,EAF0B,OAGHnD,mBAAgB,GAHb,WAGpC+D,EAHoC,KAGtBzB,EAHsB,KAK3C,OACE,kBAAC7L,EAAA,EAAD,KACE,kBAAChD,EAAA,EAAD,CAAMH,MAAO,CAAEI,WAAY,SAAUK,MAAO,QACxB,IAAjBgQ,EACG,kBAAC3B,EAAD,CAAgB7P,SAAUA,EAAU8P,YAAaA,EAAaC,gBAAiBA,IAC/E,kBAACY,EAAD,CAAY3Q,SAAUA,EAAU+O,SAAUA,EAAU6B,YAAaA,Q,gCCjB7E,kCAAO,IAAMjO,EAAW,CACtB,KAAQ,GACR,OAAU,GACV,MAAS,GACT,KAAQ,GACR,MAAS,GACT,MAAS,GACT,MAAS,GACT,MAAS,K,+DCNP,kBAAmB8O,WACrB5M,OAAOd,iBAAiB,QAAQ,WAC9B0N,UAAUC,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CrB,MAAK,SAAUsB,OAGfpB,OAAM,SAAUN,GACf1P,QAAQoR,KAAK,oCAAqC1B,U,oBCV1D2B,EAAOC,QAAU,IAA0B,oC,oDCA3C,kCAAO,IAAMlD,EAAU,CAErB2B,YAAa,cACbrB,qBAAsB,uBAGtBkC,YAAa,sBACbvC,WAAY,aACZM,oBAAqB,sBAGrB6B,oBAAqB,sBACrBE,qBAAsB,uBAGtBlC,aAAc,iB,gCCfhB,WAEMzB,EAAgBwE,6BAAiDrS,GAExD6N,O,gCCJf,WAEMhJ,EAAc,CAACxE,cAAUL,EAAWiF,UAAMjF,GAE1C+E,EAAcsN,wBAAwF,CAC1GxN,cAEAiD,kBAAmB,eAGN/C,Q","file":"static/js/app.8dbda83e.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst maxLength = 15;\n\nexport const isEmpty = (value?: string | null): boolean => value === undefined || value === null || value === '';\n\nexport const checkTextLength = (text?: string | null):boolean => {\n  if (isEmpty(text)) return false;\n  if (text && text.length > maxLength) return false;\n  return true;\n};\n\nexport const checkUsername = async (username: string | null | undefined): Promise<boolean | undefined> => {\n  if (!checkTextLength(username)) {\n    throw Error('Name must be 1-15 symbols');\n  }\n  try {\n    const response = await axios.get(`${process.env.SERVER_URL}/player/${username}`);\n    if (isEmpty(response.data.username)) return true;\n    throw Error('Username already taken');\n  } catch (error) {\n    if (error.message === 'Username already taken')\n      throw Error('Username already taken');\n    console.log(error);\n  }\n};\n","import { TouchableOpacity, View, Text, ViewStyle } from 'react-native';\nimport * as React from 'react';\n\nimport { keyboard } from '/client/constants/keyboard';\n\nconst RoundButton = ({\n  size, color, label, style, onPress, disabled,\n}: {\n  size: number, color: string, label?: string,\n  style?: ViewStyle, onPress?: () => void, disabled?: boolean,\n}): JSX.Element => {\n  return (\n    <View style={[{ alignItems: 'center' }, style]}>\n      <TouchableOpacity\n        disabled={disabled}\n        onPress={onPress}\n        style={{\n          backgroundColor: color,\n          borderRadius: size / 2,\n          height: size,\n          width: size,\n          shadowColor: 'rgba(0,0,0, .4)',\n          shadowOffset: { height: 1, width: 1 },\n          shadowOpacity: 20,\n          shadowRadius: 5,\n        }} />\n      {label && <Text style={{ marginTop: 10 }}>{label}</Text>}\n    </View>\n  );\n};\n\nconst Keypad = ({ isPause }: { isPause?: boolean }): JSX.Element => {\n  const keyDown = (key: number) => {\n    // @ts-ignore https://github.com/microsoft/TSJS-lib-generator/pull/892\n    document.dispatchEvent(new KeyboardEvent('keydown', { keyCode: key, which: key }));\n  };\n  return (\n    <View style={{ width: 400 }}>\n      <View style={{ flexDirection: 'row', width: '100%' }}>\n        <View style={{ flex: 1 }}>\n          <View style={{ flexDirection: 'row', marginTop: 20, justifyContent: 'space-between'}}>\n            <RoundButton\n              color=\"#2dc421\" size={50} label={isPause ? 'Play(P)' : 'Pause(P)'}\n              onPress={() => keyDown(keyboard.pause)}\n            />\n            <RoundButton\n              color=\"#2dc421\" size={50} label=\"Sound(S)\"\n              onPress={() => keyDown(keyboard.sound)}\n            />\n            <RoundButton\n              color=\"#efcc19\" size={50} label=\"Reset(R)\"\n              onPress={() => keyDown(keyboard.reset)}\n            />\n          </View>\n          <View style={{ alignItems: 'center' }}>\n            <RoundButton\n              color=\"#5a65f1\" size={160} label=\"Drop(Space)\" style={{ marginTop: 20 }}\n              disabled={isPause}\n              onPress={() => keyDown(keyboard.space)}\n            />\n          </View>\n        </View>\n        <View style={{ alignItems: 'center', flex: 1, justifyContent: 'center' }}>\n          <RoundButton\n            color=\"#5a65f1\" size={70} style={{ margin: 0 }}\n            disabled={isPause}\n            onPress={() => keyDown(keyboard.rotate)}\n          />\n          <View style={{ flexDirection: 'row' }}>\n            <RoundButton\n              color=\"#5a65f1\" size={70} style={{ margin: 0, marginRight: 60 }}\n              disabled={isPause}\n              onPress={() => keyDown(keyboard.left)}\n            />\n            <RoundButton\n              color=\"#5a65f1\" size={70} style={{ margin: 0 }}\n              disabled={isPause}\n              onPress={() => keyDown(keyboard.right)}\n            />\n          </View>\n          <RoundButton\n            color=\"#5a65f1\" size={70} style={{ margin: 0 }}\n            disabled={isPause}\n            onPress={() => keyDown(keyboard.down)}\n          />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Keypad;\n","import { Dimensions, ScaledSize } from 'react-native';\nimport * as React from 'react';\n\ntype EventValue = {\n  window: ScaledSize;\n  screen: ScaledSize;\n};\n\nexport const useDimensionsSync = (dim: 'window' | 'screen' = 'window'): { width: number, height: number } => {\n  const [dimensions, setDimensions] = React.useState(() => Dimensions.get(dim));\n\n  // Start listening to changes\n  React.useEffect(() => {\n    let stillCareAboutTheCallback = true;\n\n    const updateDimensions = (nextDimensions: EventValue) => {\n      stillCareAboutTheCallback && setDimensions(nextDimensions[dim]);\n    };\n\n    Dimensions.addEventListener('change', updateDimensions);\n\n    return () => {\n      stillCareAboutTheCallback = false;\n      Dimensions.removeEventListener('change', updateDimensions);\n    };\n  }, [dim, setDimensions]);\n\n  return dimensions;\n};\n\nexport const useWindowDimensions = (): { width: number, height: number } => {\n  return useDimensionsSync('window');\n};\n","import { StyleSheet, Text, View } from 'react-native';\nimport React, { useContext } from 'react';\nimport Keypad from '/client/components/Keypad';\n\nimport { useWindowDimensions } from '/client/hooks/useWindowDimensions';\nimport UserContext from '/client/context/UserContext';\n\nexport const previewText = (isMultiplayerMode: boolean, otherPlayersNumber: number, isLeader?: boolean):React.ReactChild  => {\n  const secondLineText = (otherPlayersNumber: number, isLeader?: boolean) => {\n    if (otherPlayersNumber <= 0) return 'Wait for other players';\n    if (otherPlayersNumber > 0 && isLeader) return 'Press Play(P) to start';\n    if (otherPlayersNumber > 0 && !isLeader) return 'Wait for leader to start the game';\n  };\n  if (isMultiplayerMode) {\n    return (\n      <View style={{ alignItems: 'center' }}>\n        <Text style={styles.gameMode}>You are in mulriplayer mode</Text>\n        <Text style={styles.gameMode}>{otherPlayersNumber} ohter players in your room</Text>\n        <Text>{secondLineText(otherPlayersNumber, isLeader)}</Text>\n      </View>\n    );\n  } else {\n    return (\n      <View style={{ alignItems: 'center' }}>\n        <Text style={styles.gameMode}>You are in solo mode</Text>\n        <Text>Press Play(P) to start</Text>\n      </View>\n    );\n  }\n};\n\ntype Props = {\n  children: React.ReactChild,\n  isPause?: boolean,\n  roomPlayers: string[],\n  isLeader?: boolean,\n}\n\nexport default function Gameboy(props: Props): JSX.Element {\n  const {children, isPause, roomPlayers, isLeader} = props;\n  const {userContext} = useContext(UserContext);\n  const isMultiplayerMode = userContext.username && userContext.room ? true : false;\n  const window = useWindowDimensions();\n  const w = window.width;\n  const h = window.height;\n  const ratio = h / w;\n  let scale;\n  if (ratio < 1.5) {\n    scale = h / 960;\n  } else {\n    scale = w / 560;\n  }\n\n  return (\n    <View style={styles.container}>\n      <View style={[styles.gameboy, { transform: [{ scale }] }]}>\n        <Text style={styles.title}>R E D ■ T E T R I S</Text>\n        <View style={styles.display}>\n          {children}\n          {isPause ?\n            <View style={[styles.display, { position: 'absolute', opacity: 0.8 }]} >\n              {previewText(isMultiplayerMode, roomPlayers.length - 1, isLeader)}\n            </View>\n            : null}\n        </View>\n        <Keypad isPause={isPause}/>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1f393e',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n    height: '100%',\n  },\n  display: {\n    alignItems: 'center',\n    backgroundColor: '#9ead86',\n    borderBottomColor: '#fa6b6b',\n    borderLeftColor: '#980f0f',\n    borderRightColor: '#fa6b6b',\n    borderTopColor: '#980f0f',\n    borderWidth: 5,\n    height: 500,\n    justifyContent: 'center',\n    padding: 10,\n    width: 400,\n  },\n  gameboy: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#990011ff',\n    borderRadius: 20,\n    paddingBottom: 50,\n    paddingHorizontal: 50,\n  },\n  title: {\n    fontSize: 30,\n    marginVertical: 15,\n    textAlign: 'center',\n  },\n  gameMode: {\n    marginBottom: 20,\n    fontSize: 18,\n  },\n});\n","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport Navigation from './src/client/navigation';\n\nexport default function App(): JSX.Element | null {\n  return (\n    <SafeAreaProvider>\n      <Navigation />\n      <StatusBar />\n    </SafeAreaProvider>\n  );\n}\n","import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport NotFoundScreen from '/client/screens/NotFoundScreen';\nimport Login from '/client/screens/Login';\nimport Playground from '/client/screens/Playground';\nimport LinkingConfiguration from '/client/navigation/LinkingConfiguration';\nimport io from 'socket.io-client';\nimport SocketContext from '/client/context/SocketContext';\nimport UserContext from '/client/context/UserContext';\n\n// If you are not familiar with React Navigation, we recommend going through the\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\nexport default function Navigation({ colorScheme }: { colorScheme?: ColorSchemeName }): JSX.Element {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  const socket: SocketIOClient.Socket = io(`${process.env.SERVER_URL}`);\n\n  const [userContext, setUserContext] = React.useState<{username: undefined | string, room: undefined | string}>({username: undefined, room: undefined});\n\n  const updateUserContext = ({username, room}: {username: string, room: string}) => {\n    setUserContext({username, room});\n  };\n\n  return (\n    <SocketContext.Provider value={socket} >\n      <UserContext.Provider value={{userContext, updateUserContext}} >\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\n          <Stack.Screen name=\"Root\" component={Login} />\n          <Stack.Screen name=\"Playground\" component={Playground} />\n          <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n        </Stack.Navigator>\n      </UserContext.Provider>\n    </SocketContext.Provider>\n  );\n}\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>): JSX.Element {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{'This screen doesn\\'t exist.'}</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import * as Linking from 'expo-linking';\n\nexport default {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Root: '/',\n      Playground: '/play',\n      NotFound: '*',\n    },\n  },\n};\n","import _ from 'lodash';\n\nexport const blockShape = {\n  I: [\n    [0, 0, 0, 0],\n    [1, 1, 1, 1],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ],\n  L: [\n    [0, 0, 1],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n  J: [\n    [1, 0, 0],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n  Z: [\n    [1, 1, 0],\n    [0, 1, 1],\n    [0, 0, 0],\n  ],\n  S: [\n    [0, 1, 1],\n    [1, 1, 0],\n    [0, 0, 0],\n  ],\n  O: [\n    [1, 1],\n    [1, 1],\n  ],\n  T: [\n    [0, 1, 0],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n};\n\nexport const initialPos = {\n  I: [-2, 3],\n  L: [-2, 4],\n  J: [-2, 4],\n  Z: [-2, 4],\n  S: [-2, 4],\n  O: [-2, 4],\n  T: [-2, 4],\n};\n\nexport const blockTypes: TetriminosType[] = ['I','L','J','Z','S','O', 'T'];\n\nexport const speeds = [800, 650, 500, 370, 250, 160];\n\nexport const delays = [50, 60, 70, 80, 90, 100];\n\nexport const fillLine = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\n\nexport const blankLine = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\nexport const blankMatrix: Matrix = _.map(Array(20), () => _.map(Array(10), 0));\n\nexport const blockMatrix: Matrix = _.map(Array(2), () => _.map(Array(4), 0));\n","import _ from 'lodash';\nimport { blockShape, initialPos } from '/client/constants/tetriminos.ts';\n\nclass Block {\n  pos: number[];\n  shape: number[][];\n  type: TetriminosType;\n  timeStamp: number;\n\n  constructor(option: BlockOption) {\n    this.type = option.type;\n\n    if (!option.timeStamp) {\n      this.timeStamp = Date.now();\n    } else {\n      this.timeStamp = option.timeStamp;\n    }\n    if (!option.shape) {\n      this.shape = blockShape[this.type];\n    } else {\n      this.shape = option.shape;\n    }\n    if (!option.pos) {\n      this.pos = initialPos[this.type];\n    } else this.pos = option.pos;\n  }\n  rotate(): Block {\n    const shape = this.shape;\n    const result: number[][] = shape[0].map((val, index) => shape.map(row => row[index]).reverse());\n    return new Block({\n      shape: result,\n      type: this.type,\n      pos: this.pos,\n      timeStamp: this.timeStamp,\n    });\n  }\n  fall(n = 1): Block {\n    return new Block({\n      shape: this.shape,\n      type: this.type,\n      pos: [this.pos[0] + n, this.pos[1]],\n      timeStamp: Date.now(),\n    });\n  }\n  right(): Block {\n    return new Block({\n      shape: this.shape,\n      type: this.type,\n      pos: [this.pos[0], this.pos[1] + 1],\n      timeStamp: this.timeStamp,\n    });\n  }\n  left(): Block {\n    return new Block({\n      shape: this.shape,\n      type: this.type,\n      pos: [this.pos[0], this.pos[1] - 1],\n      timeStamp: this.timeStamp,\n    });\n  }\n  drop(matrix: Matrix): Block {\n    let newState = new Block({ type: this.type, pos: this.pos, shape: this.shape });\n    while (newState.fall().isValid(matrix)) { \n      newState = newState.fall();\n    }\n    return newState;\n  }\n  getBlockPos(): number[][] {\n    const positions: number[][] = [];\n    _.map(this.shape, (row, rowIndex) =>\n      _.map(row, (val, colIndex) => { \n        if (val) positions.push([rowIndex + this.pos[0], colIndex + this.pos[1]]);\n      }));\n    return positions;\n  }\n  getCorner(): { left: number, top: number, right: number, bottom: number } { \n    const rows = _.map(this.getBlockPos(), ([row]) => row);\n    const cols = _.map(this.getBlockPos(), ([, col]) => col);\n    return {\n      left: _.min(cols) ?? 0,\n      top: _.min(rows) ?? 0,\n      right: _.max(cols) ?? 0,\n      bottom: _.max(rows) ?? 0,\n    };\n  }\n  isBlock(pos: number[]): boolean { \n    return _.find(this.getBlockPos(), (shapePos) => _.isEqual(shapePos, pos)) !== undefined;\n  }\n  isValid(matrix: Matrix): boolean { \n    const hitBlock = _.find(this.getBlockPos(), ([row, col]) => matrix?.[row]?.[col]);\n    const { left, right, bottom } = this.getCorner();\n    return bottom < 20\n      && left >= 0\n      && right < 10\n      && !hitBlock;\n  }\n  printBlock(matrix: Matrix): Matrix { \n    const newMatrix = _.cloneDeep(matrix);\n    _.map(this.getBlockPos(), (pos) => {\n      if (pos[0] >= 0 && pos[0] < _.size(newMatrix)\n        && pos[1] >= 0 && pos[1] < _.size(newMatrix[0])) {\n        newMatrix[pos[0]][pos[1]] = 1;\n      }\n    });\n    return newMatrix;\n  }\n}\n\nexport default Block;\n","import _ from 'lodash';\nimport { Asset } from 'expo-asset';\nimport { ImageBackground, View, ViewStyle } from 'react-native';\nimport * as React from 'react';\n\nexport default function Digits({ style }: { style?: ViewStyle }): JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const imageURI = Asset.fromModule(require('../../../../assets/sprite.png')).uri;\n  return (\n    <View style={[{ flexDirection: 'row' }, style]} >\n      {_.map(Array(6), (val, index: number) => <ImageBackground\n        key={index}\n        source={{ uri: imageURI }}\n        style={{ width: 14, height: 24, overflow: 'hidden' }}\n        imageStyle={{\n          height: 186,\n          left: -215,\n          resizeMode: 'cover',\n          top: -25,\n          width: 400,\n        }}\n      />)}\n    </View>\n  );\n}\n","const formatChatSubtitle = (players: string[]): string => {\n  if (players.length === 0) return 'No players';\n  return `Players: ${players.join(', ')}`;\n};\n\nexport default formatChatSubtitle;\n","import { StyleSheet, View } from 'react-native';\nimport * as React from 'react';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginRight: 2,\n    marginBottom: 2,\n  },\n  outer: {\n    alignItems: 'center',\n    borderColor: '#879372',\n    borderWidth: 1,\n    height: 20,\n    justifyContent: 'center',\n    width: 20,\n  },\n  inner: {\n    height: 12,\n    width: 12,\n    backgroundColor: '#879372',\n  },\n});\n\nconst Block = ({ value }: { value: number }): JSX.Element => {\n  return (\n    <View style={[styles.outer, value ? { borderColor: 'black' } : undefined]}>\n      <View style={[styles.inner, value ? { backgroundColor: 'black' } : undefined]} />\n    </View>\n  );\n};\n\nexport default Block;\n","import _ from 'lodash';\nimport { View, ViewStyle, StyleSheet } from 'react-native';\nimport * as React from 'react';\n\nimport BlockComponent from '/client/components/Block';\nimport Block from '/client/models/block';\n\nconst blockWidth = 22;\n\nconst Matrix = ({ block, matrix, style }: { block: Block, matrix: Matrix, style?: ViewStyle }): JSX.Element => {\n  return (\n    <View style={[styles.container, { height: _.size(matrix) * blockWidth }, style]}>\n      {_.map(matrix, (row, rowIndex) =>\n        <View key={rowIndex} style={{ flexDirection: 'row', width: _.size(row) * blockWidth, justifyContent: 'space-between' }}>\n          {_.map(row, (value, colIndex) => <BlockComponent key={colIndex} value={block.isBlock([rowIndex, colIndex]) ? 1 : value} />)}\n        </View>)}\n    </View>\n  );\n};\n\nexport default Matrix;\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 2, justifyContent: 'space-between', borderColor: 'black', borderWidth: 1, backgroundColor: '#9ead86',\n  },\n});","import  React, { useState, useEffect, useContext } from 'react';\nimport _ from 'lodash';\nimport { View, Text } from 'react-native';\nimport useInterval from '@use-it/interval';\nimport { useRoute, RouteProp } from '@react-navigation/native';\n\nimport { SOCKETS } from '/config/constants';\nimport { blankMatrix, blockMatrix } from '/client/constants/tetriminos';\nimport { blockTypes } from '/client/constants/tetriminos';\nimport { ChatWidget, addResponseMessage } from '/client/components/Chat';\nimport Block from '/client/models/block';\nimport Digits from '/client/components/Digits';\nimport formatChatSubtitle from '/client/screens/Playground/utils';\nimport Gameboy from '/client/components/Gameboy';\nimport Matrix from '/client/components/Matrix';\nimport { useKeyEvent } from '/client/hooks/useKeyEvent';\nimport SocketContext from '/client/context/SocketContext';\nimport UserContext from '/client/context/UserContext';\n\nexport default function Playground(): JSX.Element {  \n  const socket = useContext(SocketContext);\n  const { userContext } = useContext(UserContext);\n  console.log('Playground, User context:', userContext);\n\n\n  // TODO: delete Playground routes everywhere\n  // const route = useRoute<RouteProp<RootStackParamList, 'Playground'>>();\n  // const { params } = route;\n  const { room, username } = userContext;\n  // const { room, username } = params ?? {};\n  const [roomPlayers, setRoomPlayers] = useState<string[]>([]);\n  const [block, setBlock] = useState<Block>(new Block({ type: _.sample(blockTypes) ?? 'T' }));\n  const [matrix, setMatrix] = useState<Matrix>(blankMatrix);\n  const [isPause, setIsPause] = useState<boolean>(true);\n  const [player, setCurrentPlayer] = useState<PlayerType>();\n\n  useKeyEvent({ setBlock, setMatrix, setIsPause });\n\n  console.log('FETCH_CURRENT_PLAYER', player); // TODO: use player.isLeader to show/hide tetris buttons\n\n  useEffect(() => {\n    if (!socket) throw Error('No socket');\n    if (userContext.username && userContext.room) // If not solo mode, enter room\n      socket.emit(SOCKETS.ENTER_ROOM, { username, roomName: room });\n\n    // Message from server\n    socket.on(SOCKETS.CHAT_MESSAGE, (message: Message) => {\n      if (message.username !== username)\n        addResponseMessage(message.username + ': ' + message.text, message.username);\n    });\n\n    // Current player sent from server\n    socket.on(SOCKETS.FETCH_CURRENT_PLAYER, (player: PlayerType) => {\n      setCurrentPlayer(player);\n    });\n\n    socket.on(SOCKETS.UPDATE_ROOM_PLAYERS, (data: { room: string, players: PlayerType[] }) => {\n      setRoomPlayers(data.players.map((player) => player.username));\n    });\n  }, []);\n\n  const handleNewUserMessage = (message: string) => {\n    if (!socket) throw Error('No socket');\n    socket.emit(SOCKETS.CHAT_MESSAGE, { username, message, room });\n  };\n\n  const nextBlockType = blockTypes[(_.indexOf(blockTypes, block.type) + 1) % _.size(blockTypes)];\n  useInterval(() => {\n    if (isPause) return;\n    if (_.includes(matrix[0], 1)) {\n      setMatrix(blankMatrix);\n      setIsPause(true);\n    } else {\n      setBlock((currentBlock) => {\n        if (!block.fall().isValid(matrix)) {\n          setMatrix(block.printBlock(matrix));\n          return new Block({ type: nextBlockType });\n        } else {\n          return currentBlock.fall();\n        }\n      });\n    }\n  }, 500);\n\n  return (\n    <>\n      <Gameboy isPause={isPause} roomPlayers={roomPlayers} isLeader={player?.isLeader}>\n        <>\n          {username && room &&\n          <Text style={{ fontSize: 16, marginBottom: 10, alignSelf: 'flex-start' }}>{username} @ {room}</Text>}\n          <View style={{ flexDirection: 'row', alignSelf:'flex-start', width: '100%' }}>\n            <Matrix matrix={matrix} block={block}/>\n            <View style={{ marginLeft: 20, flex: 1 }} >\n              <Text style={{ fontSize: 20 }}>Score</Text>\n              <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n              <Text style={{ fontSize: 20 }}>Start Line</Text>\n              <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n              <Text style={{ fontSize: 20 }}>Level</Text>\n              <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n              <Text style={{ fontSize: 20 }}>Next</Text>\n              <Matrix\n                matrix={blockMatrix}\n                block={new Block({ type: nextBlockType, pos: [0, 0] })}\n                style={{ borderWidth: 0, marginVertical: 10, alignSelf: 'flex-end' }}\n              />\n            </View>\n          </View>\n        </>\n      </Gameboy>\n      {room && username &&\n        <ChatWidget title=\"RedTetris\" subtitle={formatChatSubtitle(roomPlayers)} handleNewUserMessage={handleNewUserMessage}/>\n      }\n    </>\n  );\n}\n","import { Dispatch, SetStateAction } from 'react';\nimport useKey from 'use-key-hook';\nimport _ from 'lodash';\n\nimport { blankMatrix } from '/client/constants/tetriminos';\nimport { blockTypes } from '/client/constants/tetriminos';\nimport { keyboard } from '/client/constants/keyboard';\nimport Block from '/client/models/block';\n\nexport const useKeyEvent = ({ setIsPause, setMatrix, setBlock }\n  : {\n    setIsPause: Dispatch<SetStateAction<boolean>>,\n    setMatrix: Dispatch<SetStateAction<Matrix>>,\n    setBlock: Dispatch<SetStateAction<Block>>,\n  }): void => {\n  useKey((_key: number, { keyCode }: { keyCode: number }) => {\n    if (keyCode === keyboard.pause) setIsPause((prevState) => !prevState);\n    if (keyCode === keyboard.reset) {\n      setBlock(new Block({ type: _.sample(blockTypes) ?? 'T' }));\n      setMatrix(blankMatrix);\n      setIsPause(true);\n    }\n    setIsPause((prevIsPause) => {\n      setMatrix((prevMatrix) => {\n        if (!prevIsPause) {\n          if (keyCode === keyboard.rotate) {\n            setBlock((currentBlock) => currentBlock.rotate().isValid(prevMatrix) ? currentBlock.rotate() : currentBlock);\n          }\n          if (keyCode === keyboard.left) {\n            setBlock((currentBlock) => currentBlock.left().isValid(prevMatrix) ? currentBlock.left() : currentBlock);\n          }\n          if (keyCode === keyboard.right) {\n            setBlock((currentBlock) => currentBlock.right().isValid(prevMatrix) ? currentBlock.right() : currentBlock);\n          }\n          if (keyCode === keyboard.down) {\n            setBlock((currentBlock) => {\n              if (currentBlock.fall().isValid(prevMatrix)) return currentBlock.fall();\n              else {\n                setMatrix(currentBlock.printBlock(prevMatrix));\n                return currentBlock;\n              }\n            });\n          }\n          if (keyCode === keyboard.space) {\n            setBlock((currentBlock) => {\n              const nextBlock = currentBlock.drop(prevMatrix);\n              setMatrix(nextBlock.printBlock(prevMatrix));\n              return nextBlock;\n            });\n          }\n        }\n        return prevMatrix;\n      });\n      return prevIsPause;\n    });\n  });\n};\n","import  React, { useState, useContext, Dispatch, SetStateAction } from 'react';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { StyleSheet, Text, TouchableOpacity, TextInput, View } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { SOCKETS } from '/config/constants';\nimport SocketContext from '/client/context/SocketContext';\nimport { checkUsername } from '/client/screens/Login/utils';\n\ntype Props = {\n\tusername: string | null | undefined,\n\tsetUsername: Dispatch<SetStateAction<string | null | undefined>>,\n\tsetScreenNumber: Dispatch<SetStateAction<1 | 2>>,\n};\n\nexport default function ChooseUsername(props: Props): JSX.Element {\n  const {username, setUsername, setScreenNumber} = props;\n  \n  const socket = useContext(SocketContext);\n  const navigation = useNavigation<StackNavigationProp<RootStackParamList, 'Root'>>();\n  const [ussernameError, setUsernameError] = useState<string>('');\n\n  const validateUsername = () => {\n    checkUsername(username)\n      .then(data => {\n        if (data === true) {\n          if(!socket) throw Error('No socket');\n          socket.emit(SOCKETS.CREATE_USER, username);\n          setScreenNumber(2);\n        }\n      })\n      .catch(err => {\n        setUsernameError(err.message);\n      });\n  };\n\n  return (\n    <View style={{ width: '100%', alignItems: 'center' }}>\n      <Text style={styles.title}>{'Username'}</Text>\n      <Text style={styles.error}>{ussernameError}</Text>\n      <TextInput\n        value={username ?? ''}\n        onChangeText={text => {\n          setUsernameError('');\n          setUsername(text);\n        }}\n        style={{ borderWidth: 1, marginBottom: 20, height: 30, width: '100%' }}\n      />\n      <TouchableOpacity\n        style={styles.button}\n        onPress={validateUsername}\n      >\n        <Text style={styles.linkText}>Next</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.push('Playground', {})} // TODO: do we need to validate username here too?\n      >\n        <Text style={styles.linkText}>Solo mode</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    marginBottom: 5,\n    alignSelf: 'flex-start',\n    textAlign: 'center',\n  },\n  error: {\n    marginBottom: 5,\n    alignSelf: 'flex-start',\n    textAlign: 'center',\n    color: '#980f0f',\n  },\n  linkText: {\n    fontSize: 14,\n  },\n  button: {\n    width: '70%',\n    borderWidth: 1,\n    borderRadius: 10,\n    alignItems: 'center',\n    padding: 3,\n    marginBottom: 30,\n  },\n});\n","import  React, { useState, useEffect, useContext, Dispatch, SetStateAction } from 'react';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { StyleSheet, Text, TouchableOpacity, TextInput, View } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { SOCKETS } from '/config/constants';\nimport SocketContext from '/client/context/SocketContext';\nimport { checkTextLength } from '/client/screens/Login/utils';\nimport UserContext from '/client/context/UserContext';\n\ntype Props = {\n\tusername: string | null | undefined,\n\troomName: string | null | undefined,\n\tsetRoomName: Dispatch<SetStateAction<string | null | undefined>>,\n};\n\nexport default function ChooseRoom(props: Props): JSX.Element {\n  const {username, roomName, setRoomName} = props;\n\n  const socket = useContext(SocketContext);\n  const navigation = useNavigation<StackNavigationProp<RootStackParamList, 'Root'>>();\n  const [roomNameError, setRoomNameError] = useState<string>('');\n  const [waitingRooms, setWaitingRooms] = useState<string[]>([]);\n  const {updateUserContext} = useContext(UserContext);\n\n  console.log('Updates for waitingRooms:', waitingRooms);\n  useEffect(() => {\n    if (!socket) throw Error('No socket');\n    // If I remove [] from useEffect there is a flood of sockets, for some reason component rerenders several times a second.\n    // Later we need to listen to a socket event when game in room has started.\n    socket.emit(SOCKETS.FETCH_WAITING_ROOMS);\n    socket.on(SOCKETS.FETCH_WAITING_ROOMS, (roomNames: string[]) => {\n      setWaitingRooms(roomNames);\n    });\n  }, []);\n  \n  useEffect(() => {\n    if (!socket) throw Error('No socket');\n    // new room is created + room is deleted\n    socket.on(SOCKETS.UPDATE_WAITING_ROOMS, (roomNames: string[]) => {\n      setWaitingRooms(roomNames);\n    });\n  });\n\n  const onJoinRoomPress = (roomName: string | null | undefined) => {\n    if(!checkTextLength(roomName)) setRoomNameError('Name must be 1-15 symbols');\n    else {\n      updateUserContext({ username, room: roomName });\n      if (!socket) throw Error('No socket');\n      socket.emit(SOCKETS.CHOOSE_ROOM, { username, roomName });\n      username && roomName && navigation.push('Playground', { username, room: roomName });\n    }\n  };\n\n  return (\n    <View style={{ width: '100%', alignItems: 'center' }}>\n      <Text style={{ fontSize: 16, marginBottom: 50 }}>Hello, {username}</Text>\n      <Text style={styles.title}>Create room</Text>\n      <Text style={styles.error}>{roomNameError}</Text>\n      <TextInput\n        value={roomName ?? ''}\n        onChangeText={text => {\n          setRoomNameError('');\n          setRoomName(text);\n        }}\n        style={{ borderWidth: 1, marginBottom: 20, height: 30, width: '100%' }}\n      />\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => onJoinRoomPress(roomName)}\n      >\n        <Text style={styles.linkText}>Play</Text>\n      </TouchableOpacity>\n      <View style={{ width: '80%', marginTop: 20 }}>\n        {waitingRooms.length > 0 && <Text style={styles.title}>Join room</Text>}\n        {waitingRooms.length > 0 && waitingRooms.map((waitingRoom) =>\n          <View key={waitingRoom}>\n            <TouchableOpacity\n              style={styles.roomsList}\n              onPress={() => onJoinRoomPress(waitingRoom)}\n            >\n              <Text>{waitingRoom}</Text>\n            </TouchableOpacity>\n          </View>)}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    marginBottom: 5,\n    alignSelf: 'flex-start',\n    textAlign: 'center',\n  },\n  error: {\n    marginBottom: 5,\n    alignSelf: 'flex-start',\n    textAlign: 'center',\n    color: '#980f0f',\n  },\n  linkText: {\n    fontSize: 14,\n  },\n  roomsList: {\n    borderWidth: 1,\n    borderRadius: 5,\n    margin: 3,\n    padding: 2,\n    alignItems:\n\t\t'center',\n  },\n  button: {\n    width: '70%',\n    borderWidth: 1,\n    borderRadius: 10,\n    alignItems: 'center',\n    padding: 3,\n    marginBottom: 10,\n  },\n});\n","import  React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport ChooseUsername from '/client/screens/Login/ChooseUsername';\nimport ChooseRoom from '/client/screens/Login/ChooseRoom';\nimport Gameboy from '/client/components/Gameboy';\n\nexport default function Login(): JSX.Element {\n  const [username, setUsername] = useState<string | null>();\n  const [roomName, setRoomName] = useState<string | null>();\n  const [screenNumber, setScreenNumber] = useState<1 | 2>(1);\n\n  return (\n    <Gameboy>\n      <View style={{ alignItems: 'center', width: '60%' }}>\n        {screenNumber === 1\n          ? <ChooseUsername username={username} setUsername={setUsername} setScreenNumber={setScreenNumber} />\n          : <ChooseRoom username={username} roomName={roomName} setRoomName={setRoomName} />\n        }\n      </View>\n    </Gameboy>\n  );\n}","export const keyboard = {\n  'left': 37,\n  'rotate': 38,\n  'right': 39,\n  'down': 40,\n  'space': 32,\n  'sound': 83,\n  'reset': 82,\n  'pause': 80,\n};\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/sprite.81de6409.png\";","export const SOCKETS = {\n  /* ---- User ---- */\n  CREATE_USER: 'create user',\n  FETCH_CURRENT_PLAYER: 'fetch current player',\n\n  /* ---- Room ---- */\n  CHOOSE_ROOM: 'create or join room',\n  ENTER_ROOM: 'enter room',\n  UPDATE_ROOM_PLAYERS: 'update room players',\n  \n  /* ---- Game ---- */\n  FETCH_WAITING_ROOMS: 'fetch waiting rooms',\n  UPDATE_WAITING_ROOMS: 'update waiting rooms',\n  \n  /* ---- Chat ---- */\n  CHAT_MESSAGE: 'chat message',\n};\n","import {createContext} from 'react';\n\nconst SocketContext = createContext<undefined | SocketIOClient.Socket>(undefined);\n\nexport default SocketContext;\n","import {createContext} from 'react';\n\nconst userContext = {username: undefined, room: undefined};\n\nconst UserContext = createContext<{userContext: UserContextType, updateUserContext: UpdateUserContextType}>({\n  userContext,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  updateUserContext: () => {},\n});\n\nexport default UserContext;\n"],"sourceRoot":""}