{"version":3,"sources":["src/client/screens/Login/utils.ts","src/config/constants.ts","App.tsx","src/client/navigation/index.tsx","src/client/screens/NotFoundScreen.tsx","src/client/screens/Ranking/index.tsx","src/client/navigation/LinkingConfiguration.ts","src/client/constants/tetriminos.ts","src/client/components/Digits/index.tsx","src/client/screens/Playground/utils.tsx","src/client/components/Block/index.tsx","src/client/controllers/blockControllers.ts","src/client/components/Matrix/index.tsx","src/client/hooks/useKeyEvent/index.tsx","src/client/screens/Playground/index.tsx","src/client/screens/Login/ChooseUsername.tsx","src/client/screens/Login/ChooseRoom.tsx","src/client/screens/Login/index.tsx","web-build/register-service-worker.js","src/client/constants/keyboard.ts","assets/sprite.png","src/client/context/UserContext.ts","src/client/context/SocketContext.ts","src/client/components/Keypad/index.tsx","src/client/hooks/useWindowDimensions/index.ts","src/client/components/Gameboy/index.tsx"],"names":["isEmpty","value","undefined","checkTextLength","text","length","checkSpecialChars","regexpr","RegExp","match","checkUsername","username","a","async","Error","axios","get","response","data","message","console","log","checkRoomName","roomName","name","SOCKETS","CREATE_USER","FETCH_CURRENT_PLAYER","CHOOSE_ROOM","ENTER_ROOM","UPDATE_ROOM_PLAYERS","PLAYER_LEFT","START_GAME","PENALTY_ROWS","FETCH_WAITING_ROOMS","UPDATE_WAITING_ROOMS","GAMEOVER","FETCH_ROOM_RANKING","CHAT_MESSAGE","FORBIDDEN","App","Navigation","colorScheme","linking","LinkingConfiguration","theme","DarkTheme","DefaultTheme","RootNavigator","Stack","createStackNavigator","useState","socket","setSocket","room","userContext","setUserContext","Provider","newSocket","io","getSocket","Navigator","screenOptions","headerShown","Screen","component","Login","Playground","Ranking","NotFoundScreen","options","title","navigation","style","styles","container","onPress","replace","link","linkText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","fontSize","fontWeight","marginTop","paddingVertical","color","alignSelf","marginBottom","subtitle","tableContainer","width","flexDirection","tableHeader","tableContent","props","useContext","SocketContext","UserContext","params","useRoute","roomPlayers","setRoomPlayers","socketAccessForbidden","socketFetchRoomRanking","players","useEffect","emit","gameMode","on","removeListener","rankedPlayers","id","score","_","map","index","key","player","Math","floor","prefixes","Linking","config","screens","Root","NotFound","cellState","blockShape","I","L","J","Z","S","O","T","initialPos","blockTypes","fill","Array","OCCUPIED","blankLine","FREE","penaltyLine","BLOCKED","blankMatrix","blockMatrix","Digits","imageURI","Asset","fromModule","require","uri","View","val","ImageBackground","source","height","overflow","imageStyle","left","resizeMode","top","roomPlayersNames","marginRight","outer","borderColor","borderWidth","inner","Block","blockCreate","pos","shape","type","timeStamp","Date","now","blockRotate","block","result","row","reverse","blockFall","n","blockRight","blockLeft","blockGetBlockPos","positions","rowIndex","colIndex","push","isBlock","find","shapePos","isEqual","isBlockValid","matrix","hitBlock","col","rows","cols","min","right","max","bottom","blockGetCorner","printBlock","newMatrix","cloneDeep","size","Matrix","useKeyEvent","setIsPause","setMatrix","setBlock","useKey","_key","keyCode","keyboard","pause","prevState","reset","sample","prevIsPause","prevMatrix","rotate","currentBlock","down","space","nextBlock","newState","blockDrop","useNavigation","isPause","setCurrentPlayer","roomLeader","setRoomLeader","gameover","setGameover","isSoloMode","socketChatMessage","addResponseMessage","socketFetchCurrentPlayer","socketUpdateRoomPlayers","newLeader","isLeader","prevCurrentPlayer","socketStartGame","tilesStack","startTile","socketReceivePenaltyRows","rowsNumber","addPenaltyRows","socketReceiveGameover","endGame","leader","penaltyMatrix","slice","nextBlockType","useInterval","includes","socketEmitGameover","bottomMatrix","topMatrix","sum","deletedRows","destroyBlock","socketEmitPenaltyRows","Gameboy","Text","marginLeft","marginVertical","join","handleNewUserMessage","ChooseUsername","setScreenNumber","ussernameError","setUsernameError","error","TextInput","onChangeText","TouchableOpacity","button","then","catch","err","textAlign","borderRadius","ChooseRoom","roomNameError","setRoomNameError","waitingRooms","setWaitingRooms","handleFetchWaitingRooms","roomNames","handleUpdateWaitingRooms","onCreateRoomPress","waitingRoom","roomsList","onJoinRoomPress","margin","screenNumber","navigator","window","addEventListener","serviceWorker","register","scope","info","module","exports","createContext","RoundButton","label","disabled","React","useRef","ref","current","blur","shadowColor","shadowOffset","shadowOpacity","shadowRadius","Keypad","opponentsNumber","showStartButton","isButtonDisabled","keyDown","document","dispatchEvent","KeyboardEvent","which","sound","navigate","useWindowDimensions","dim","Dimensions","dimensions","setDimensions","stillCareAboutTheCallback","updateDimensions","nextDimensions","removeEventListener","useDimensionsSync","scale","children","isMultiplayerMode","w","h","isKeypadDisabled","gameboy","transform","display","position","opacity","secondLineText","previewText","borderBottomColor","borderLeftColor","borderRightColor","borderTopColor","paddingBottom","paddingHorizontal"],"mappings":"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","file":"static/js/app.d5d0dac4.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst maxLength = 15;\n\nexport const isEmpty = (value?: string | null): boolean => value === undefined || value === null || value === '';\n\nexport const checkTextLength = (text?: string | null): boolean => {\n  if (isEmpty(text)) return false;\n  if (text && text.length > maxLength) return false;\n  return true;\n};\n\nconst checkSpecialChars = (text?: string | null): boolean => {\n  const regexpr =  new RegExp('\\\\W');\n  if (!text) return false;\n  if (text.match(regexpr)) return false;\n  return true;\n};\n\nexport const checkUsername = async (username: string | null | undefined): Promise<boolean | undefined> => {\n  if (!checkTextLength(username)) throw Error('Name must be 1-15 symbols');\n  if (!checkSpecialChars(username)) throw Error('Use letters and numbers');\n  try {\n    const response = await axios.get(`${process.env.SERVER_URL}/player/${username}`);\n    if (isEmpty(response.data.username)) return true;\n    throw Error('Username already taken');\n  } catch (error) {\n    if (error.message === 'Username already taken')\n      throw Error('Username already taken');\n    console.log(error);\n  }\n};\n\nexport const checkRoomName = async (roomName: string | null | undefined): Promise<boolean | undefined> => {\n  if (!checkTextLength(roomName)) throw Error('Name must be 1-15 symbols');\n  if (!checkSpecialChars(roomName)) throw Error('Use letters and numbers');\n  try {\n    const response = await axios.get(`${process.env.SERVER_URL}/room/${roomName}`);\n    if (isEmpty(response.data.name)) return true;\n    throw Error('Room name already taken');\n  } catch (error) {\n    if (error.message === 'Room name already taken')\n      throw Error('Room name already taken');\n    console.log(error);\n  }\n};\n","export const SOCKETS = {\n  /* ---- User ---- */\n  CREATE_USER: 'create user',\n  FETCH_CURRENT_PLAYER: 'fetch current player',\n\n  /* ---- Room ---- */\n  CHOOSE_ROOM: 'create or join room',\n  ENTER_ROOM: 'enter room',\n  UPDATE_ROOM_PLAYERS: 'update room players',\n  PLAYER_LEFT: 'player left',\n  START_GAME: 'start game',\n  PENALTY_ROWS: 'penalty rows',\n  \n  /* ---- Game ---- */\n  FETCH_WAITING_ROOMS: 'fetch waiting rooms',\n  UPDATE_WAITING_ROOMS: 'update waiting rooms',\n  GAMEOVER: 'gameover',\n  FETCH_ROOM_RANKING: 'fetch room ranking',\n  \n  /* ---- Chat ---- */\n  CHAT_MESSAGE: 'chat message',\n\n  /* ---- Error ---- */\n  FORBIDDEN: 'access forbidden',\n};\n","import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport Navigation from './src/client/navigation';\n\nexport default function App(): JSX.Element | null {\n  return (\n    <SafeAreaProvider>\n      <Navigation />\n      <StatusBar />\n    </SafeAreaProvider>\n  );\n}\n","import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport React, { useState } from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport NotFoundScreen from '/client/screens/NotFoundScreen';\nimport Login from '/client/screens/Login';\nimport Playground from '/client/screens/Playground';\nimport Ranking from '/client/screens/Ranking';\nimport LinkingConfiguration from '/client/navigation/LinkingConfiguration';\nimport io from 'socket.io-client';\nimport SocketContext from '/client/context/SocketContext';\nimport UserContext from '/client/context/UserContext';\n\n// If you are not familiar with React Navigation, we recommend going through the\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\nexport default function Navigation({ colorScheme }: { colorScheme?: ColorSchemeName }): JSX.Element {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  const [socket, setSocket] = useState<undefined | SocketIOClient.Socket>(undefined);\n\n  const getSocket = () => {\n    if (socket) {\n      return socket;\n    }\n    const newSocket = io(`${process.env.SERVER_URL}`);\n    setSocket(newSocket);\n    return newSocket;\n  };\n  \n  const [userContext, setUserContext] = useState<UserContextType>({username: undefined, room: undefined});\n\n  return (\n    <SocketContext.Provider value={getSocket()} >\n      <UserContext.Provider value={{userContext, setUserContext}} >\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\n          <Stack.Screen name=\"Root\" component={Login} />\n          <Stack.Screen name=\"Playground\" component={Playground} />\n          <Stack.Screen name=\"Ranking\" component={Ranking} />\n          <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n        </Stack.Navigator>\n      </UserContext.Provider>\n    </SocketContext.Provider>\n  );\n}\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>): JSX.Element {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{'This screen doesn\\'t exist.'}</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import  React, { useState, useEffect, useContext } from 'react';\nimport _ from 'lodash';\nimport { StyleSheet, View, Text } from 'react-native';\nimport { useRoute, RouteProp } from '@react-navigation/native';\n\nimport Gameboy from '/client/components/Gameboy';\nimport { SOCKETS } from '/config/constants';\nimport SocketContext from '/client/context/SocketContext';\nimport UserContext from '/client/context/UserContext';\n\ntype Props = {\n\t// players: PlayerType[],\n};\n\nconst Ranking = (props: Props): JSX.Element => {\n  // const {players} = props;\n\n  const socket = useContext(SocketContext);\n  const { userContext, setUserContext } = useContext(UserContext);\n\n  const route = useRoute<RouteProp<RootStackParamList, 'Playground'>>();\n  const { params } = route;\n  // const { room, username } = userContext;\n  const { room, username } = params ?? {};\n  const [roomPlayers, setRoomPlayers] = useState<PlayerType[]>([]);\n\n  console.log('roomPlayers:', roomPlayers);\n\n  const socketAccessForbidden = () => {\n    console.log('aaaaaaaaaaaa forbidden');\n  };\n\n  const socketFetchRoomRanking = (players: PlayerType[]) => {\n    setRoomPlayers(players);\n  };\n\n\n  useEffect(() => {\n    if (!socket) throw Error('No socket');\n    // TODO: Here I tested how I can forbid access to pages that I entered fom URL but sis not create. Uncomment it at the end of development\n    // socket.emit(SOCKETS.FETCH_ROOM_RANKING, {username, roomName: room, gameMode: 'not solo'});\n    socket.emit(SOCKETS.FETCH_ROOM_RANKING, {username, roomName: room, gameMode: 'not solo'});\n    socket.on(SOCKETS.FORBIDDEN, socketAccessForbidden);\n    socket.on(SOCKETS.FETCH_ROOM_RANKING, socketFetchRoomRanking);\n\n    return () => {\n      socket.removeListener(SOCKETS.FORBIDDEN, socketAccessForbidden);\n      socket.removeListener(SOCKETS.FETCH_ROOM_RANKING, socketFetchRoomRanking);\n    };\n  }, []);\n\n  const rankedPlayers = [{ username: 'sqss', room: '1', id: 'aaa', score: 22800 }, { username: 'bbb', room: '1', id: 'bbb', score: 12003 }, { username: 'ccc', room: '1', id: 'acccaa', score: 5453 }, { username: 'ddd', room: '1', id: 'acccaa', score: 5453 }, { username: 'eee', room: '1', id: 'acccaa', score: 5453 }, { username: 'fff', room: '1', id: 'acccaa', score: 5453 }, { username: 'ggg', room: '1', id: 'acccaa', score: 5453 }, { username: 'hhh', room: '1', id: 'acccaa', score: 5453 },{ username: 'iii', room: '1', id: 'acccaa', score: 5453 }, { username: 'jjj', room: '1', id: 'acccaa', score: 5453 }];\n\n  return (\n    <Gameboy>\n      <View style={{ justifyContent: 'space-between' }}>\n        <Text style={styles.title}>Game report</Text>\n        {/* {_.map(roomPlayers, (player) => <Text>{player}</Text>)} */}\n        {username === rankedPlayers[0].username\n          ? <Text style={styles.subtitle}>{username}, you are the winner!</Text>\n          : <Text style={styles.subtitle}>{username} @ {room}</Text>}\n        <View style={styles.tableContainer}>\n          <View>\n            <Text style={styles.tableHeader}>Place</Text>\n            {_.map(rankedPlayers, (_, index) =>\n              <Text key={index} style={styles.tableContent}>{index + 1}</Text>)}\n          </View>\n          <View>\n            <Text style={styles.tableHeader}>Name</Text>\n            {_.map(rankedPlayers, (player, index) =>\n              <Text key={index} style={styles.tableContent}>{player.username}</Text>)}\n          </View>\n          <View>\n            <Text style={styles.tableHeader}>Lines</Text>\n            {_.map(rankedPlayers, (player, index) =>\n              <Text key={index} style={styles.tableContent}>{Math.floor(player.score / 10)}</Text>)}\n          </View>\n          <View>\n            <Text style={styles.tableHeader}>Score</Text>\n            {_.map(rankedPlayers, (player, index) =>\n              <Text key={index} style={styles.tableContent}>{player.score}</Text>)}\n          </View>\n        </View>\n      </View>\n    </Gameboy>\n  );\n};\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 26,\n    fontWeight: 'bold',\n    alignSelf: 'center',\n    marginBottom: '10%',\n  },\n  subtitle: {\n    fontSize: 24,\n    alignSelf: 'center',\n    marginBottom: '10%',\n  },\n  tableContainer: {\n    width: 300,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  tableHeader: {\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  tableContent: {\n    fontSize: 18,\n    marginBottom: 3,\n    marginTop: 3,\n  },\n});\n\nexport default Ranking;\n","import * as Linking from 'expo-linking';\n\nexport default {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Root: '/',\n      Playground: '/play',\n      Ranking: '/ranking',\n      NotFound: '*',\n    },\n  },\n};\n","import _ from 'lodash';\n\nexport const blockShape = {\n  I: [\n    [0, 0, 0, 0],\n    [1, 1, 1, 1],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ],\n  L: [\n    [0, 0, 1],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n  J: [\n    [1, 0, 0],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n  Z: [\n    [1, 1, 0],\n    [0, 1, 1],\n    [0, 0, 0],\n  ],\n  S: [\n    [0, 1, 1],\n    [1, 1, 0],\n    [0, 0, 0],\n  ],\n  O: [\n    [1, 1],\n    [1, 1],\n  ],\n  T: [\n    [0, 1, 0],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n};\n\nexport const initialPos = {\n  I: [-2, 3],\n  L: [-2, 4],\n  J: [-2, 4],\n  Z: [-2, 4],\n  S: [-2, 4],\n  O: [-2, 4],\n  T: [-2, 4],\n};\n\nexport const blockTypes: TetriminosType[] = ['I','L','J','Z','S','O', 'T'];\n\nexport const speeds = [800, 650, 500, 370, 250, 160];\n\nexport const delays = [50, 60, 70, 80, 90, 100];\n\nexport enum cellState {\n  FREE,\n  OCCUPIED,\n  BLOCKED,\n}\n\nexport const fillLine = _.fill(Array(10), cellState.OCCUPIED); // never used\n\nexport const blankLine = _.fill(Array(10), cellState.FREE);\n\nexport const penaltyLine = _.fill(Array(10), cellState.BLOCKED);\n\nexport const blankMatrix: Matrix = _.map(Array(20), () => _.fill(Array(10), cellState.FREE));\n\nexport const blockMatrix: Matrix = _.map(Array(2), () => _.fill(Array(4), cellState.FREE));\n","import _ from 'lodash';\nimport { Asset } from 'expo-asset';\nimport { ImageBackground, View, ViewStyle } from 'react-native';\nimport * as React from 'react';\n\nexport default function Digits({ style }: { style?: ViewStyle }): JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const imageURI = Asset.fromModule(require('../../../../assets/sprite.png')).uri;\n  return (\n    <View style={[{ flexDirection: 'row' }, style]} >\n      {_.map(Array(6), (val, index: number) => <ImageBackground\n        key={index}\n        source={{ uri: imageURI }}\n        style={{ width: 14, height: 24, overflow: 'hidden' }}\n        imageStyle={{\n          height: 186,\n          left: -215,\n          resizeMode: 'cover',\n          top: -25,\n          width: 400,\n        }}\n      />)}\n    </View>\n  );\n}\n","const formatChatTitle = (leader: string): string => {\n  return `Leader: ${leader}`;\n};\n\nconst formatChatSubtitle = (players: string[]): string => {\n  if (players.length === 0) return 'No players';\n  return `Players: ${players.join(', ')}`;\n};\n\nconst roomPlayersNames = (players?: PlayerType[]): string[] => {\n  if (!players || players.length === 0) return [];\n  const namesArray = players.map((player) => player.username);\n  return namesArray;\n};\n\nexport { formatChatSubtitle, formatChatTitle, roomPlayersNames };\n","import { StyleSheet, View } from 'react-native';\nimport * as React from 'react';\n\nimport { cellState } from '/client/constants/tetriminos.ts';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginRight: 2,\n    marginBottom: 2,\n  },\n  outer: {\n    alignItems: 'center',\n    borderColor: '#879372',\n    borderWidth: 1,\n    height: 20,\n    justifyContent: 'center',\n    width: 20,\n  },\n  inner: {\n    height: 12,\n    width: 12,\n    backgroundColor: '#879372',\n  },\n});\n\nconst Block = ({ value }: { value: CellStateType | number }): JSX.Element => {\n  return (\n    <View style={[styles.outer, value === cellState.OCCUPIED ? { borderColor: 'black' } : (value === cellState.BLOCKED ? { borderColor: 'black'} : undefined)]}>\n      <View style={[styles.inner, value === cellState.OCCUPIED ? { backgroundColor: 'black' } : (value === cellState.BLOCKED ? { backgroundColor: 'transparent'} : undefined)]} />\n    </View>\n  );\n};\n\nexport default Block;\n","import _ from 'lodash';\n\nimport { blockShape, initialPos, blankLine, cellState } from '/client/constants/tetriminos.ts';\n\nconst blockCreate = ({pos, shape, type, timeStamp}: BlockOption): BlockType => {\n  return {\n    pos: pos ?? initialPos[type],\n    shape: shape ?? blockShape[type],\n    type: type,\n    timeStamp: timeStamp ?? Date.now(),\n  };\n};\n\nconst blockRotate = (block: BlockType): BlockType => {\n  const shape = block.shape;\n  const result: number[][] = shape[0].map((val, index) => shape.map(row => row[index]).reverse());\n\n  return {\n    pos: block.pos,\n    shape: result,\n    type: block.type,\n    timeStamp: block.timeStamp,\n  };\n};\n\nconst blockFall = (block: BlockType, n = 1): BlockType => {\n  return {\n    pos: [block.pos[0] + n, block.pos[1]],\n    shape: block.shape,\n    type: block.type,\n    timeStamp: block.timeStamp,\n  };\n};\n\nconst blockRight = (block: BlockType): BlockType => {\n  return {\n    pos: [block.pos[0], block.pos[1] + 1],\n    shape: block.shape,\n    type: block.type,\n    timeStamp: block.timeStamp,\n  };\n};\n\nconst blockLeft = (block: BlockType): BlockType => {\n  return {\n    pos: [block.pos[0], block.pos[1] - 1],\n    shape: block.shape,\n    type: block.type,\n    timeStamp: block.timeStamp,\n  };\n};\n\nconst blockDrop = (block: BlockType, matrix: Matrix): BlockType => {\n  let newState = blockCreate({ type: block.type, pos: block.pos, shape: block.shape });\n\n  while (isBlockValid(blockFall(newState), matrix)) { \n    newState = blockFall(newState);\n  }\n  return newState;  \n};\n\nconst blockGetBlockPos = (block: BlockType): number[][] => {\n  const positions: number[][] = [];\n  _.map(block.shape, (row, rowIndex) =>\n    _.map(row, (val, colIndex) => { \n      if (val) positions.push([rowIndex + block.pos[0], colIndex + block.pos[1]]);\n    }));\n  return positions;\n};\n\nconst blockGetCorner = (block: BlockType): { left: number, top: number, right: number, bottom: number } => { \n  const rows = _.map(blockGetBlockPos(block), ([row]) => row);\n  const cols = _.map(blockGetBlockPos(block), ([, col]) => col);\n  return {\n    left: _.min(cols) ?? 0,\n    top: _.min(rows) ?? 0,\n    right: _.max(cols) ?? 0,\n    bottom: _.max(rows) ?? 0,\n  };\n};\n\nconst isBlock = (block: BlockType, pos: number[]): boolean => { \n  return _.find(blockGetBlockPos(block), (shapePos) => _.isEqual(shapePos, pos)) !== undefined;\n};\n\nconst isBlockValid = (block: BlockType, matrix: Matrix): boolean => { \n  const hitBlock = _.find(blockGetBlockPos(block), ([row, col]) => matrix?.[row]?.[col] === cellState.BLOCKED || matrix?.[row]?.[col] === cellState.OCCUPIED);\n  const { left, right, bottom } = blockGetCorner(block);\n  return bottom < 20\n    && left >= 0\n    && right < 10\n    && !hitBlock;\n};\n\nconst printBlock = (block: BlockType, matrix: Matrix): Matrix => { \n  const newMatrix = _.cloneDeep(matrix);\n  _.map(blockGetBlockPos(block), (pos) => {\n    if (pos[0] >= 0 && pos[0] < _.size(newMatrix)\n      && pos[1] >= 0 && pos[1] < _.size(newMatrix[0])) {\n      newMatrix[pos[0]][pos[1]] = cellState.OCCUPIED;\n    }\n  });\n  return newMatrix;\n};\n\nconst destroyBlock = (matrix: Matrix): { newMatrix: Matrix, deletedRows: number} => {\n  let bottomMatrix: Matrix = [];\n  let topMatrix: Matrix = [];\n  _.map(matrix, (row) => {\n    // Row sum = 10 when row is complete (cellState.OCCUPIED);\n    // Row sum > 10 (row sum = 20) when there is a penalty row (because penalty row consists of cellState.BLOCKED = 2)\n    if (_.sum(row) < 10 || _.sum(row) > 10) {\n      bottomMatrix = _.cloneDeep([...bottomMatrix, row]);\n      // TODO: We can send SOCKETS.SPECTER_UPDATE here when bottomMatrix.length === 20\n    } else {\n      topMatrix = _.cloneDeep([...topMatrix, blankLine]);\n    }\n  });\n  console.log('Destroy', _.cloneDeep([...topMatrix, ...bottomMatrix])); // TODO: rm\n  return ({ newMatrix: _.cloneDeep([...topMatrix, ...bottomMatrix]), deletedRows: topMatrix.length });\n};\n\nexport { \n  blockCreate,\n  blockRotate,\n  blockFall,\n  blockRight,\n  blockLeft,\n  blockDrop,\n  blockGetBlockPos,\n  blockGetCorner,\n  isBlock,\n  isBlockValid,\n  printBlock,\n  destroyBlock,\n};\n","import _ from 'lodash';\nimport { View, ViewStyle, StyleSheet } from 'react-native';\nimport * as React from 'react';\n\nimport BlockComponent from '/client/components/Block';\nimport { isBlock } from '/client/controllers/blockControllers';\nimport { cellState } from '/client/constants/tetriminos.ts';\n\nconst blockWidth = 22;\n\nconst Matrix = ({ block, matrix, style }: { block: BlockType, matrix: Matrix, style?: ViewStyle }): JSX.Element => {\n  return (\n    <View style={[styles.container, { height: _.size(matrix) * blockWidth }, style]}>\n      {_.map(matrix, (row, rowIndex) =>\n        <View key={rowIndex} style={{ flexDirection: 'row', width: _.size(row) * blockWidth, justifyContent: 'space-between' }}>\n          {_.map(row, (value, colIndex) => <BlockComponent key={colIndex} value={isBlock(block, [rowIndex, colIndex]) ? cellState.OCCUPIED : value} />)}\n        </View>)}\n    </View>\n  );\n};\n\nexport default Matrix;\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 2, justifyContent: 'space-between', borderColor: 'black', borderWidth: 1, backgroundColor: '#9ead86',\n  },\n});\n","import { Dispatch, SetStateAction } from 'react';\nimport useKey from 'use-key-hook';\nimport _ from 'lodash';\n\nimport { blankMatrix } from '/client/constants/tetriminos';\nimport { blockTypes } from '/client/constants/tetriminos';\nimport { keyboard } from '/client/constants/keyboard';\nimport {\n  blockCreate,\n  blockRotate,\n  blockFall,\n  blockRight,\n  blockLeft,\n  blockDrop,\n  isBlockValid,\n  printBlock,\n} from '/client/controllers/blockControllers';\n\nexport const useKeyEvent = ({ setIsPause, setMatrix, setBlock }\n  : {\n    setIsPause: Dispatch<SetStateAction<boolean>>,\n    setMatrix: Dispatch<SetStateAction<Matrix>>,\n    setBlock: Dispatch<SetStateAction<BlockType>>,\n  }): void => {\n  useKey((_key: number, { keyCode }: { keyCode: number }) => {\n    if (keyCode === keyboard.pause) setIsPause((prevState) => !prevState);\n    if (keyCode === keyboard.reset) {\n      setBlock(blockCreate({ type: _.sample(blockTypes) ?? 'T' }));\n      setMatrix(blankMatrix);\n      setIsPause(true);\n    }\n    setIsPause((prevIsPause) => {\n      setMatrix((prevMatrix) => {\n        if (!prevIsPause) {\n          if (keyCode === keyboard.rotate) {\n            setBlock((currentBlock) => isBlockValid(blockRotate(currentBlock), prevMatrix) ? blockRotate(currentBlock) : currentBlock);\n          }\n          if (keyCode === keyboard.left) {\n            setBlock((currentBlock) => isBlockValid(blockLeft(currentBlock), prevMatrix) ? blockLeft(currentBlock) : currentBlock);\n          }\n          if (keyCode === keyboard.right) {\n            setBlock((currentBlock) => isBlockValid(blockRight(currentBlock), prevMatrix) ? blockRight(currentBlock) : currentBlock);\n          }\n          if (keyCode === keyboard.down) {\n            setBlock((currentBlock) => {\n              if (isBlockValid(blockFall(currentBlock), prevMatrix)) return blockFall(currentBlock);\n              else {\n                setMatrix(printBlock(currentBlock, prevMatrix));\n                return currentBlock;\n              }\n            });\n          }\n          if (keyCode === keyboard.space) {\n            setBlock((currentBlock) => {\n              const nextBlock = blockDrop(currentBlock, prevMatrix);\n              setMatrix(printBlock(nextBlock, prevMatrix));\n              return nextBlock;\n            });\n          }\n        }\n        return prevMatrix;\n      });\n      return prevIsPause;\n    });\n  });\n};\n","import  React, { useState, useEffect, useContext } from 'react';\nimport _ from 'lodash';\nimport { View, Text } from 'react-native';\nimport useInterval from '@use-it/interval';\nimport { useRoute, RouteProp } from '@react-navigation/native';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { SOCKETS } from '/config/constants';\nimport { blankMatrix, blockMatrix, penaltyLine } from '/client/constants/tetriminos';\nimport { blockTypes } from '/client/constants/tetriminos';\nimport { ChatWidget, addResponseMessage } from '/client/components/Chat';\nimport Digits from '/client/components/Digits';\nimport { formatChatSubtitle, formatChatTitle, roomPlayersNames } from '/client/screens/Playground/utils';\nimport Gameboy from '/client/components/Gameboy';\nimport Matrix from '/client/components/Matrix';\nimport { useKeyEvent } from '/client/hooks/useKeyEvent';\nimport SocketContext from '/client/context/SocketContext';\nimport UserContext from '/client/context/UserContext';\nimport { blockCreate, blockFall, isBlockValid, printBlock, destroyBlock } from '/client/controllers/blockControllers';\n\nexport default function Playground(): JSX.Element {\n  const socket = useContext(SocketContext);\n  const { userContext, setUserContext } = useContext(UserContext);\n  const navigation = useNavigation<StackNavigationProp<RootStackParamList, 'Root'>>();\n\n  const route = useRoute<RouteProp<RootStackParamList, 'Playground'>>();\n  const { params } = route;\n  // const { room, username } = userContext;\n  const { room, username } = params ?? {};\n  const [roomPlayers, setRoomPlayers] = useState<PlayerType[]>([]);\n  const [block, setBlock] = useState<BlockType>(blockCreate({ type: _.sample(blockTypes) ?? 'T' }));\n  const [matrix, setMatrix] = useState<Matrix>(blankMatrix);\n  const [isPause, setIsPause] = useState<boolean>(true);\n  const [player, setCurrentPlayer] = useState<PlayerType>();\n  const [roomLeader, setRoomLeader] = useState<PlayerType>();\n  const [gameover, setGameover] = useState<boolean>(false);\n  //If there are no URL params, then it's solo mode\n  const isSoloMode = !room || !username;\n\n  useKeyEvent({ setBlock, setMatrix, setIsPause });\n\n  const socketChatMessage = (message: Message) => {\n    addResponseMessage(message.username + ': ' + message.text, message.username);\n  };\n  \n  const socketFetchCurrentPlayer = (player: PlayerType) => {\n    setCurrentPlayer(player);\n    console.log('FETCH_CURRENT_PLAYER', player); // TODO: use player.isLeader to show/hide tetris buttons\n  };\n\n  const socketUpdateRoomPlayers = (data: { room: string, players: PlayerType[] }) => {\n    setRoomPlayers(data.players);\n    \n    // When old leader leaves the room, we set a new leader\n    // And if new room leader and this room player are the same user, we update isLeader in player (or update the whole player)\n    const newLeader = _.find(data.players, (player) => player.isLeader);\n    setRoomLeader(newLeader);\n    setCurrentPlayer((prevCurrentPlayer) => {\n      if (prevCurrentPlayer && newLeader && prevCurrentPlayer.id === newLeader.id) {\n        return newLeader;\n      }\n      return prevCurrentPlayer;\n    });\n  };\n\n  const socketStartGame = ({ tilesStack, startTile }: { tilesStack: string[], startTile: string }) => {\n    console.log('START_GAME', startTile, tilesStack, isPause);\n    // TODO: smth to separate START_GAME from PAUSE\n    setIsPause(false);\n  };\n\n  const socketEmitPenaltyRows = (rowsNumber: number) => {\n    if (!socket) throw Error('No socket');\n    console.log('PENALTY_ROWS emit, rowsNumber:', rowsNumber);\n    socket.emit(SOCKETS.PENALTY_ROWS, { username, roomName: room, rowsNumber });\n  };\n\n  const socketReceivePenaltyRows = (rowsNumber: number) => {\n    setMatrix((prevMatrix) => {\n      const newMatrix = addPenaltyRows(prevMatrix, rowsNumber);\n      console.log('PENALTY_ROWS receive. rowsNumber, newMatrix:', rowsNumber, newMatrix);\n      return newMatrix;\n    });\n  };\n\n  const socketEmitGameover = () => {\n    if (!socket) throw Error('No socket');\n    socket.emit(SOCKETS.GAMEOVER, {username: userContext.username, roomName: userContext.room });\n  };\n\n  const socketReceiveGameover = (data: { players: PlayerType[], endGame: boolean }) => {\n    console.log('Game players, endGame:', data.players, data.endGame);\n    if (data.endGame) setIsPause(true);\n    navigation.push('Ranking', { username, room });\n  };\n\n  useEffect(() => {\n    /*\n    ** TODO: del next line when tmp SOCKETS.ENTER_ROOM by url params is deleted\n    */\n    setUserContext({ username, room }); // for components that use UserContext\n    console.log('Playground, User context:', userContext);\n    if (!socket) throw Error('No socket');\n    /*\n    ** TODO: uncomment when tmp SOCKETS.ENTER_ROOM by url params is deleted\n    */\n    // if (userContext.username && userContext.room) // If not solo mode, enter room\n    socket.emit(SOCKETS.ENTER_ROOM, { username, roomName: room });\n\n    // Message from server\n    socket.on(SOCKETS.CHAT_MESSAGE, socketChatMessage);\n\n    // Current player sent from server\n    socket.on(SOCKETS.FETCH_CURRENT_PLAYER, socketFetchCurrentPlayer);\n\n    // When new players join the room\n    socket.on(SOCKETS.UPDATE_ROOM_PLAYERS, socketUpdateRoomPlayers);\n\n    // Receive block type and stack of 3 next blocks\n    socket.on(SOCKETS.START_GAME, socketStartGame);\n\n    // Receive penalty rows\n    socket.on(SOCKETS.PENALTY_ROWS, socketReceivePenaltyRows);\n\n    // One of opponents has gameover\n    socket.on(SOCKETS.GAMEOVER, socketReceiveGameover);\n  \n    return () => {\n      socket.emit(SOCKETS.PLAYER_LEFT, username);\n\n      socket.removeListener(SOCKETS.CHAT_MESSAGE, socketChatMessage);\n      socket.removeListener(SOCKETS.FETCH_CURRENT_PLAYER, socketFetchCurrentPlayer);\n      socket.removeListener(SOCKETS.UPDATE_ROOM_PLAYERS, socketUpdateRoomPlayers);\n      socket.removeListener(SOCKETS.START_GAME, socketStartGame);\n      socket.removeListener(SOCKETS.PENALTY_ROWS, socketReceivePenaltyRows);\n      socket.removeListener(SOCKETS.GAMEOVER, socketReceiveGameover);\n    };\n  }, []);\n\n  const handleNewUserMessage = (message: string) => {\n    if (!socket) throw Error('No socket');\n    socket.emit(SOCKETS.CHAT_MESSAGE, { username, message, roomName: room });\n  };\n\n  const addPenaltyRows = (matrix: Matrix, rowsNumber: number): Matrix => {\n    // Create array of blank lines\n    const penaltyMatrix = Array(rowsNumber).fill(penaltyLine);\n    // Add it to the bottom of matrix (matrix has 20 + rowsNumber lines)\n    const newMatrix = _.cloneDeep([...matrix, ...penaltyMatrix]);\n    // Return matrix without N start lines (matrix has 20 lines again)\n    return _.slice(newMatrix, rowsNumber, newMatrix.length);\n  };\n\n  // const nextBlockType = blockTypes[(_.indexOf(blockTypes, block.type) + 1) % _.size(blockTypes)];\n  const nextBlockType = blockTypes[0]; // TODO: del after debugging\n  useInterval(() => {\n    if (isPause) return;\n    // TODO: What condition do we have on playground screen? If not solo mode, check if user left Playground screen and stop pieces from falling (issue #66 in github)\n    // if (!username) return; // If user left Playground screen\n    if (_.includes(matrix[0], 1)) {\n      setMatrix(blankMatrix);\n      setIsPause(true);\n      setGameover(true);\n      socketEmitGameover();\n    } else {\n      setBlock((currentBlock) => {\n        if (!isBlockValid(blockFall(currentBlock), matrix)) {\n          const { newMatrix, deletedRows } = destroyBlock(printBlock(block, matrix));\n          setMatrix(newMatrix);\n          // if (deletedRows > 1)\n          if (deletedRows > 0) // TODO: del after debugging\n          //   socketEmitPenaltyRows(deletedRows - 1);\n            socketEmitPenaltyRows(deletedRows); // TODO: del after debugging\n\n          return blockCreate({ type: nextBlockType });\n        } else {\n          return blockFall(currentBlock);\n        }\n      });\n    }\n  }, 500);\n\n  return (\n    <>\n      <Gameboy isPause={isPause} roomPlayers={roomPlayersNames(roomPlayers)} isLeader={player?.isLeader} gameover={gameover} isSoloMode={isSoloMode}>\n        <>\n          {username && room &&\n          <Text style={{ fontSize: 16, marginBottom: 10, alignSelf: 'flex-start' }}>{username} @ {room}</Text>}\n          <View style={{ flexDirection: 'row', alignSelf:'flex-start', width: '100%' }}>\n            <Matrix matrix={matrix} block={block}/>\n            <View style={{ marginLeft: 20, flex: 1 }} >\n              <Text style={{ fontSize: 20 }}>Score</Text>\n              <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n              <Text style={{ fontSize: 20 }}>Start Line</Text>\n              <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n              <Text style={{ fontSize: 20 }}>Level</Text>\n              <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n              <Text style={{ fontSize: 20 }}>Next</Text>\n              <Matrix\n                matrix={blockMatrix}\n                block={blockCreate({ type: nextBlockType, pos: [0, 0] })}\n                style={{ borderWidth: 0, marginVertical: 10, alignSelf: 'flex-end' }}\n              />\n            </View>\n          </View>\n        </>\n      </Gameboy>\n      {room && username &&\n        <ChatWidget title={formatChatTitle(roomLeader?.username ?? 'no leader')} subtitle={formatChatSubtitle(roomPlayersNames(roomPlayers))} handleNewUserMessage={handleNewUserMessage}/>\n      }\n    </>\n  );\n}\n","import  React, { useState, useContext, Dispatch, SetStateAction } from 'react';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { StyleSheet, Text, TouchableOpacity, TextInput, View } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { SOCKETS } from '/config/constants';\nimport { checkUsername } from '/client/screens/Login/utils';\nimport SocketContext from '/client/context/SocketContext';\nimport UserContext from '/client/context/UserContext';\n\ntype Props = {\n\tsetScreenNumber: Dispatch<SetStateAction<1 | 2>>,\n};\n\nexport default function ChooseUsername(props: Props): JSX.Element {\n  const {setScreenNumber} = props;\n  const { userContext, setUserContext } = useContext(UserContext);\n  const { username } = userContext;\n  const socket = useContext(SocketContext);\n  const navigation = useNavigation<StackNavigationProp<RootStackParamList, 'Root'>>();\n  const [ussernameError, setUsernameError] = useState<string>('');\n\n  const validateUsername = () => {\n    checkUsername(username)\n      .then(data => {\n        if (data === true) {\n          if(!socket) throw Error('No socket');\n          socket.emit(SOCKETS.CREATE_USER, username);\n          setScreenNumber(2);\n        }\n      })\n      .catch(err => {\n        setUsernameError(err.message);\n      });\n  };\n\n  return (\n    <View style={{ width: '100%', alignItems: 'center' }}>\n      <Text style={styles.title}>{'Username'}</Text>\n      <Text style={styles.error}>{ussernameError}</Text>\n      <TextInput\n        value={username ?? ''}\n        onChangeText={text => {\n          setUsernameError('');\n          setUserContext({username: text, room: undefined});\n        }}\n        style={{ borderWidth: 1, marginBottom: 20, height: 30, width: '100%' }}\n      />\n      <TouchableOpacity\n        style={styles.button}\n        onPress={validateUsername}\n      >\n        <Text style={styles.linkText}>Next</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => navigation.push('Playground', {})} // TODO: do we need to validate username here too?\n      >\n        <Text style={styles.linkText}>Solo mode</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    marginBottom: 5,\n    alignSelf: 'flex-start',\n    textAlign: 'center',\n  },\n  error: {\n    marginBottom: 5,\n    alignSelf: 'flex-start',\n    textAlign: 'center',\n    color: '#980f0f',\n  },\n  linkText: {\n    fontSize: 14,\n  },\n  button: {\n    width: '70%',\n    borderWidth: 1,\n    borderRadius: 10,\n    alignItems: 'center',\n    padding: 3,\n    marginBottom: 30,\n  },\n});\n","import  React, { useState, useEffect, useContext, Dispatch, SetStateAction } from 'react';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { StyleSheet, Text, TouchableOpacity, TextInput, View } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { SOCKETS } from '/config/constants';\nimport { checkRoomName } from '/client/screens/Login/utils';\nimport SocketContext from '/client/context/SocketContext';\nimport UserContext from '/client/context/UserContext';\n\ntype Props = {\n  setScreenNumber: Dispatch<SetStateAction<1 | 2>>,\n};\n\nexport default function ChooseRoom(props: Props): JSX.Element {\n  const {setScreenNumber} = props;\n  const { userContext, setUserContext } = useContext(UserContext);\n  const { username, room: roomName } = userContext;\n  const socket = useContext(SocketContext);\n  const navigation = useNavigation<StackNavigationProp<RootStackParamList, 'Root'>>();\n  const [roomNameError, setRoomNameError] = useState<string>('');\n  const [waitingRooms, setWaitingRooms] = useState<string[]>([]);\n\n  console.log('Updates for waitingRooms:', waitingRooms);\n\n  const handleFetchWaitingRooms = (roomNames: string[]) => setWaitingRooms(roomNames);\n\n  const handleUpdateWaitingRooms = (roomNames: string[]) => setWaitingRooms(roomNames);\n\n  useEffect(() => {\n    if (!socket) throw Error('No socket');\n    // If I remove [] from useEffect there is a flood of sockets, for some reason component rerenders several times a second.\n    socket.emit(SOCKETS.FETCH_WAITING_ROOMS);\n\n    // Get waitingRooms when enter ChooseUsername screen\n    socket.on(SOCKETS.FETCH_WAITING_ROOMS, handleFetchWaitingRooms);\n\n    // Get waitingRooms when other users create / delete rooms and ChooseUsername screen is already open\n    socket.on(SOCKETS.UPDATE_WAITING_ROOMS, handleUpdateWaitingRooms);\n    return () => {\n      socket.removeListener(SOCKETS.FETCH_WAITING_ROOMS, handleFetchWaitingRooms);\n      socket.removeListener(SOCKETS.UPDATE_WAITING_ROOMS, handleUpdateWaitingRooms);\n    };\n  }, []);\n\n  const onCreateRoomPress = (roomName: string | undefined) => {\n    checkRoomName(roomName)\n      .then(data => {\n        if (data === true) {\n          if(!socket) throw Error('No socket');\n          socket.emit(SOCKETS.CHOOSE_ROOM, { username, roomName });\n          username && roomName && navigation.push('Playground', { username, room: roomName });\n          setScreenNumber(1);\n        }\n      })\n      .catch(err => {\n        setRoomNameError(err.message);\n      });\n  };\n\n  const onJoinRoomPress = (roomName: string | null | undefined) => {\n    setUserContext({ username, room: roomName });\n    if (!socket) throw Error('No socket');\n    socket.emit(SOCKETS.CHOOSE_ROOM, { username, roomName });\n    username && roomName && navigation.push('Playground', { username, room: roomName });\n    setScreenNumber(1);\n  };\n\n  return (\n    <View style={{ width: '100%', alignItems: 'center' }}>\n      <Text style={{ fontSize: 16, marginBottom: 50 }}>Hello, {username}</Text>\n      <Text style={styles.title}>Create room</Text>\n      <Text style={styles.error}>{roomNameError}</Text>\n      <TextInput\n        value={roomName ?? ''}\n        onChangeText={text => {\n          setRoomNameError('');\n          setUserContext({username, room: text});\n        }}\n        style={{ borderWidth: 1, marginBottom: 20, height: 30, width: '100%' }}\n      />\n      <TouchableOpacity\n        style={styles.button}\n        onPress={() => onCreateRoomPress(roomName)}\n      >\n        <Text style={styles.linkText}>Play</Text>\n      </TouchableOpacity>\n      <View style={{ width: '80%', marginTop: 20 }}>\n        {waitingRooms.length > 0 && <Text style={styles.title}>Join room</Text>}\n        {waitingRooms.length > 0 && waitingRooms.map((waitingRoom) =>\n          <View key={waitingRoom}>\n            <TouchableOpacity\n              style={styles.roomsList}\n              onPress={() => onJoinRoomPress(waitingRoom)}\n            >\n              <Text>{waitingRoom}</Text>\n            </TouchableOpacity>\n          </View>)}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    marginBottom: 5,\n    alignSelf: 'flex-start',\n    textAlign: 'center',\n  },\n  error: {\n    marginBottom: 5,\n    alignSelf: 'flex-start',\n    textAlign: 'center',\n    color: '#980f0f',\n  },\n  linkText: {\n    fontSize: 14,\n  },\n  roomsList: {\n    borderWidth: 1,\n    borderRadius: 5,\n    margin: 3,\n    padding: 2,\n    alignItems:\n\t\t'center',\n  },\n  button: {\n    width: '70%',\n    borderWidth: 1,\n    borderRadius: 10,\n    alignItems: 'center',\n    padding: 3,\n    marginBottom: 10,\n  },\n});\n","import  React, { useState } from 'react';\nimport { View } from 'react-native';\n\nimport ChooseUsername from '/client/screens/Login/ChooseUsername';\nimport ChooseRoom from '/client/screens/Login/ChooseRoom';\nimport Gameboy from '/client/components/Gameboy';\n\nexport default function Login(): JSX.Element {\n  const [screenNumber, setScreenNumber] = useState<1 | 2>(1);\n\n  return (\n    <Gameboy>\n      <View style={{ alignItems: 'center', width: '60%' }}>\n        {screenNumber === 1\n          ? <ChooseUsername setScreenNumber={setScreenNumber} />\n          : <ChooseRoom setScreenNumber={setScreenNumber} />\n        }\n      </View>\n    </Gameboy>\n  );\n}","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","export const keyboard = {\n  'left': 37,\n  'rotate': 38,\n  'right': 39,\n  'down': 40,\n  'space': 32,\n  'sound': 83,\n  'reset': 82,\n  'pause': 80,\n};\n","module.exports = __webpack_public_path__ + \"static/media/sprite.81de6409.png\";","import {createContext} from 'react';\n\nconst userContext = {username: undefined, room: undefined};\n\nconst UserContext = createContext<{userContext: UserContextType, setUserContext: UpdateUserContextType}>({\n  userContext,\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  setUserContext: () => {},\n});\n\nexport default UserContext;\n","import {createContext} from 'react';\n\nconst SocketContext = createContext<undefined | SocketIOClient.Socket>(undefined);\n\nexport default SocketContext;\n","import { TouchableOpacity, View, Text, ViewStyle } from 'react-native';\nimport React, { useContext } from 'react';\nimport { StackNavigationProp } from '@react-navigation/stack';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { keyboard } from '/client/constants/keyboard';\nimport { SOCKETS } from '/config/constants';\nimport SocketContext from '/client/context/SocketContext';\nimport UserContext from '/client/context/UserContext';\n\nconst RoundButton = ({\n  size, color, label, style, onPress, disabled, text,\n}: {\n  size: number, color: string, label?: string,\n  style?: ViewStyle, onPress?: () => void, disabled?: boolean, text?: string,\n}): JSX.Element => {\n  const button = React.useRef<TouchableOpacity>(null);\n\n  return (\n    <View style={[{ alignItems: 'center' }, style]}>\n      <TouchableOpacity\n        ref={button}\n        disabled={disabled}\n        onPress={() => { button?.current?.blur(); onPress?.();}}\n        style={{\n          backgroundColor: color,\n          borderRadius: size / 2,\n          height: size,\n          width: size,\n          shadowColor: 'rgba(0,0,0, .4)',\n          shadowOffset: { height: 1, width: 1 },\n          shadowOpacity: 20,\n          shadowRadius: 5,\n          justifyContent: 'center',\n          alignItems: 'center',\n        }} >\n        {text && <Text style={{ fontSize: 25 }}>{text}</Text>}\n      </TouchableOpacity>\n      {label && <Text style={{ marginTop: 10 }}>{label}</Text>}\n    </View>\n  );\n};\n\ntype Props = {\n  isPause?: boolean,\n  opponentsNumber: number,\n  isLeader?: boolean,\n  disabled?: boolean,\n  isSoloMode?: boolean,\n}\n\nconst Keypad = (props: Props): JSX.Element => {\n  const { isPause, opponentsNumber, isLeader, disabled, isSoloMode } = props;\n  const socket = useContext(SocketContext);\n  const { userContext, setUserContext } = useContext(UserContext);\n  const navigation = useNavigation<StackNavigationProp<RootStackParamList, 'Playground'>>();\n  const showStartButton = isLeader; // || isLeader === undefined;\n  const isButtonDisabled = !isSoloMode && (disabled || opponentsNumber < 1);\n\n  const keyDown = (key: number) => {\n    // @ts-ignore https://github.com/microsoft/TSJS-lib-generator/pull/892\n    document.dispatchEvent(new KeyboardEvent('keydown', { keyCode: key, which: key }));\n  };\n  return (\n    <View style={{ width: 400 }}>\n      <View style={{ width: '100%' }}>\n        <View style={{ flexDirection: 'row', marginVertical: 20, justifyContent: 'space-between'}}>\n          {showStartButton &&\n          <RoundButton\n            color={isButtonDisabled ? '#c0c0c0' : '#2dc421'} size={50} label='Start' text='▶'\n            disabled={isButtonDisabled}\n            onPress={() => {\n              if (!socket) throw Error('No socket');\n              socket.emit(SOCKETS.START_GAME, { username: userContext.username, roomName: userContext.room });\n            }}\n          />}\n          <RoundButton\n            disabled={isButtonDisabled}\n            color={isButtonDisabled ? '#c0c0c0' : '#2dc421'} size={50} label={isPause ? 'Play(P)' : 'Pause(P)'}\n            onPress={() => keyDown(keyboard.pause)}\n          />\n          <RoundButton\n            disabled={isButtonDisabled}\n            color={isButtonDisabled ? '#c0c0c0' : '#2dc421'} size={50} label=\"Sound(S)\"\n            onPress={() => keyDown(keyboard.sound)}\n          />\n          <RoundButton\n            disabled={isButtonDisabled}\n            color={isButtonDisabled ? '#c0c0c0' : '#efcc19'} size={50} label=\"Reset(R)\"\n            onPress={() => keyDown(keyboard.reset)}\n          />\n          <RoundButton\n            color=\"white\" size={50} style={{ margin: 0 }} label='Exit' text='╳'\n            onPress={() => {\n              if (!socket) throw Error('No socket');\n              setUserContext({username: undefined, room: undefined});\n              socket.emit(SOCKETS.PLAYER_LEFT, userContext.username);\n              navigation.navigate('Root');\n            }}\n          />\n        </View>\n        <View style={{ flexDirection: 'row', alignItems: 'center', marginTop: 20 }}>\n          <View style={{ marginRight: 20 }}>\n            <RoundButton\n              color={isButtonDisabled ? '#c0c0c0' : '#5a65f1'} size={160} label=\"Drop(Space)\" style={{ marginTop: 20 }}\n              disabled={isButtonDisabled || isPause}\n              onPress={() => keyDown(keyboard.space)}\n            />\n          </View>\n          <View style={{ marginLeft: 20 }}>\n            <RoundButton\n              color={isButtonDisabled ? '#c0c0c0' : '#5a65f1'} size={70} style={{ margin: 0 }}\n              disabled={isButtonDisabled || isPause}\n              onPress={() => keyDown(keyboard.rotate)}\n            />\n            <View style={{ flexDirection: 'row' }}>\n              <RoundButton\n                color={isButtonDisabled ? '#c0c0c0' : '#5a65f1'} size={70} style={{ margin: 0, marginRight: 60 }}\n                disabled={isButtonDisabled || isPause}\n                onPress={() => keyDown(keyboard.left)}\n              />\n              <RoundButton\n                color={isButtonDisabled ? '#c0c0c0' : '#5a65f1'} size={70} style={{ margin: 0 }}\n                disabled={isButtonDisabled || isPause}\n                onPress={() => keyDown(keyboard.right)}\n              />\n            </View>\n            <RoundButton\n              color={isButtonDisabled ? '#c0c0c0' : '#5a65f1'} size={70} style={{ margin: 0 }}\n              disabled={isButtonDisabled || isPause}\n              onPress={() => keyDown(keyboard.down)}\n            />\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Keypad;\n","import { Dimensions, ScaledSize } from 'react-native';\nimport * as React from 'react';\n\ntype EventValue = {\n  window: ScaledSize;\n  screen: ScaledSize;\n};\n\nexport const useDimensionsSync = (dim: 'window' | 'screen' = 'window'): { width: number, height: number } => {\n  const [dimensions, setDimensions] = React.useState(() => Dimensions.get(dim));\n\n  // Start listening to changes\n  React.useEffect(() => {\n    let stillCareAboutTheCallback = true;\n\n    const updateDimensions = (nextDimensions: EventValue) => {\n      stillCareAboutTheCallback && setDimensions(nextDimensions[dim]);\n    };\n\n    Dimensions.addEventListener('change', updateDimensions);\n\n    return () => {\n      stillCareAboutTheCallback = false;\n      Dimensions.removeEventListener('change', updateDimensions);\n    };\n  }, [dim, setDimensions]);\n\n  return dimensions;\n};\n\nexport const useWindowDimensions = (): { width: number, height: number } => {\n  return useDimensionsSync('window');\n};\n","import { StyleSheet, Text, View } from 'react-native';\nimport React, { useContext } from 'react';\nimport Keypad from '/client/components/Keypad';\n\nimport { useWindowDimensions } from '/client/hooks/useWindowDimensions';\nimport UserContext from '/client/context/UserContext';\n\nexport const previewText = (isMultiplayerMode: boolean, opponentsNumber: number, isLeader?: boolean, gameover?: boolean):React.ReactChild  => {\n  const secondLineText = (opponentsNumber: number, isLeader?: boolean) => {\n    if (opponentsNumber <= 0) return 'Wait for other players';\n    if (opponentsNumber > 0 && isLeader) return 'Press Start to begin';\n    if (opponentsNumber > 0 && !isLeader) return 'Wait for leader to start the game';\n  };\n  if (gameover) {\n    return (\n      <View style={{ alignItems: 'center' }}>\n        <Text style={styles.gameover}>Game Over</Text>\n        <Text style={styles.gameMode}>Please wait for other players to finish</Text>\n      </View>\n    );\n  }\n  if (isMultiplayerMode) {\n    return (\n      <View style={{ alignItems: 'center' }}>\n        <Text style={styles.gameMode}>You are in multiplayer mode</Text>\n        <Text style={styles.gameMode}>{opponentsNumber} other player(s) in your room</Text>\n        <Text>{secondLineText(opponentsNumber, isLeader)}</Text>\n      </View>\n    );\n  }\n  return (\n    <View style={{ alignItems: 'center' }}>\n      <Text style={styles.gameMode}>You are in solo mode</Text>\n      <Text>Press Play(P) to start</Text>\n    </View>\n  );\n};\n\ntype Props = {\n  children: React.ReactChild,\n  isPause?: boolean,\n  roomPlayers?: string[],\n  isLeader?: boolean,\n  gameover?: boolean,\n  isSoloMode?: boolean,\n}\n\nexport default function Gameboy(props: Props): JSX.Element {\n  const {children, isPause, roomPlayers, isLeader, gameover, isSoloMode} = props;\n  const {userContext} = useContext(UserContext);\n  const opponentsNumber = !roomPlayers || roomPlayers.length === 0 ? 0 : roomPlayers.length - 1;\n  const isMultiplayerMode = userContext.username && userContext.room ? true : false;\n  const window = useWindowDimensions();\n  const w = window.width;\n  const h = window.height;\n  const ratio = h / w;\n  let scale;\n  if (ratio < 1.5) {\n    scale = h / 960;\n  } else {\n    scale = w / 560;\n  }\n\n  const isKeypadDisabled = gameover;\n\n  return (\n    <View style={styles.container}>\n      <View style={[styles.gameboy, { transform: [{ scale }] }]}>\n        <Text style={styles.title}>R E D ■ T E T R I S</Text>\n        <View style={styles.display}>\n          {children}\n          {isPause ?\n            <View style={[styles.display, { position: 'absolute', opacity: 0.8 }]} >\n              {previewText(isMultiplayerMode, opponentsNumber, isLeader, gameover)}\n            </View>\n            : null}\n        </View>\n        <Keypad isPause={isPause} opponentsNumber={opponentsNumber} isLeader={isLeader} disabled={isKeypadDisabled} isSoloMode={isSoloMode}/>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1f393e',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n    height: '100%',\n  },\n  display: {\n    alignItems: 'center',\n    backgroundColor: '#9ead86',\n    borderBottomColor: '#fa6b6b',\n    borderLeftColor: '#980f0f',\n    borderRightColor: '#fa6b6b',\n    borderTopColor: '#980f0f',\n    borderWidth: 5,\n    height: 500,\n    justifyContent: 'center',\n    padding: 10,\n    width: 400,\n  },\n  gameboy: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#990011',\n    borderRadius: 20,\n    paddingBottom: 30,\n    paddingHorizontal: 50,\n  },\n  title: {\n    fontSize: 30,\n    marginVertical: 15,\n    textAlign: 'center',\n  },\n  gameMode: {\n    marginBottom: 20,\n    fontSize: 18,\n  },\n  gameover: {\n    marginBottom: 20,\n    fontWeight: 'bold',\n    color: '#990011',\n    fontSize: 24,\n  },\n});\n"],"sourceRoot":""}