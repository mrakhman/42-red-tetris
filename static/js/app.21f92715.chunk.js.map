{"version":3,"sources":["App.tsx","src/screens/NotFoundScreen.tsx","src/components/Keypad/index.tsx","src/hooks/useWindowDimensions/index.ts","src/components/Gameboy/index.tsx","src/screens/Login/index.tsx","src/constants/tetriminos.ts","src/constants/keyboard.ts","src/models/block.ts","src/components/Block/index.tsx","src/components/Matrix/index.tsx","src/components/Digits/index.tsx","src/screens/Playground/index.tsx","src/navigation/LinkingConfiguration.ts","src/navigation/index.tsx","web-build/register-service-worker.js","assets/sprite.png"],"names":["io","App","NotFoundScreen","navigation","View","style","styles","container","Text","title","TouchableOpacity","onPress","replace","link","linkText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","fontSize","fontWeight","marginTop","paddingVertical","color","RoundButton","size","label","margin","borderRadius","height","width","shadowColor","shadowOffset","shadowOpacity","shadowRadius","Keypad","flexDirection","marginRight","useWindowDimensions","dim","React","Dimensions","get","dimensions","setDimensions","stillCareAboutTheCallback","updateDimensions","nextDimensions","addEventListener","removeEventListener","useDimensionsSync","Gameboy","scale","children","window","w","h","gameboy","transform","display","borderBottomColor","borderLeftColor","borderRightColor","borderTopColor","borderWidth","paddingBottom","paddingHorizontal","marginVertical","textAlign","Login","useNavigation","username","setUsername","room","setRoom","TextInput","value","onChangeText","marginBottom","push","alignSelf","blockShape","I","L","J","Z","S","O","T","initialPos","blockTypes","keyboard","Block","option","this","type","timeStamp","Date","now","shape","pos","map","val","index","row","reverse","n","outer","borderColor","inner","undefined","Matrix","matrix","_","key","Digits","imageURI","Asset","fromModule","require","uri","Array","ImageBackground","source","overflow","imageStyle","left","resizeMode","top","Playground","sample","block","setBlock","nextBlockType","indexOf","useInterval","currentBlock","length","fall","useKey","rotate","right","newMatrix","forEach","rowIndex","col","colIndex","printBlock","marginLeft","take","merge","prefixes","Linking","config","screens","Root","NotFound","Navigation","colorScheme","NavigationContainer","linking","LinkingConfiguration","theme","DarkTheme","DefaultTheme","RootNavigator","Stack","createStackNavigator","Navigator","screenOptions","headerShown","Screen","name","component","options","navigator","serviceWorker","register","scope","then","info","catch","error","console","module","exports"],"mappings":"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","file":"static/js/app.21f92715.chunk.js","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\n\nimport Navigation from '/navigation';\nimport io from 'socket.io-client';\n\n// Check socket connection\nconst socket = io(`${process.env.EXPO_SOCKET_URL}`);\n\nexport default function App(): JSX.Element | null {\n  return (\n    <SafeAreaProvider>\n      <Navigation />\n      <StatusBar />\n    </SafeAreaProvider>\n  );\n}\n","import { StackScreenProps } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\n\nexport default function NotFoundScreen({\n  navigation,\n}: StackScreenProps<RootStackParamList, 'NotFound'>): JSX.Element {\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>{'This screen doesn\\'t exist.'}</Text>\n      <TouchableOpacity onPress={() => navigation.replace('Root')} style={styles.link}>\n        <Text style={styles.linkText}>Go to home screen!</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold',\n  },\n  link: {\n    marginTop: 15,\n    paddingVertical: 15,\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n});\n","import { TouchableOpacity, View, Text, ViewStyle } from 'react-native';\nimport * as React from 'react';\n\n\nconst RoundButton = ({\n  size, color, label, style,\n}: {\n  size: number, color: string, label?: string, style?: ViewStyle,\n}): JSX.Element => {\n  return (\n    <View style={[{ alignItems: 'center', margin: 10 }, style]}>\n      <TouchableOpacity\n        style={{\n          backgroundColor: color,\n          borderRadius: size / 2,\n          height: size,\n          width: size,\n          shadowColor: 'rgba(0,0,0, .4)',\n          shadowOffset: { height: 1, width: 1 },\n          shadowOpacity: 20,\n          shadowRadius: 5,\n        }} />\n      <Text style={{ marginTop: 10 }}>{label}</Text>\n    </View>\n  );\n};\n\nconst Keypad = (): JSX.Element => {\n  return (\n    <View>\n      <View style={{ flexDirection: 'row' }}>\n        <View style={{ flex: 1 }}>\n          <View style={{ flexDirection: 'row', marginTop: 20 }}>\n            <RoundButton color=\"#2dc421\" size={50} label=\"Pause(P)\"/>\n            <RoundButton color=\"#2dc421\" size={50} label=\"Sound(S)\"/>\n            <RoundButton color=\"#efcc19\" size={50} label=\"Reset(R)\"/>\n          </View>\n          <View style={{ alignItems: 'center' }}>\n            <RoundButton color=\"#5a65f1\" size={160} label=\"Drop(Space)\" style={{ marginTop: 20 }}/>\n          </View>\n        </View>\n        <View style={{ alignItems: 'center', flex: 1, justifyContent: 'center' }}>\n          <RoundButton color=\"#5a65f1\" size={70} style={{ margin: 0 }} />\n          <View style={{ flexDirection: 'row' }}>\n            <RoundButton color=\"#5a65f1\" size={70} style={{ margin: 0, marginRight: 60}} />\n            <RoundButton color=\"#5a65f1\" size={70} style={{ margin: 0 }} />\n          </View>\n          <RoundButton color=\"#5a65f1\" size={70} style={{ margin: 0 }} />\n        </View>\n      </View>\n    </View>\n  );\n};\n\nexport default Keypad;\n","import { Dimensions, ScaledSize } from 'react-native';\nimport * as React from 'react';\n\ntype EventValue = {\n  window: ScaledSize;\n  screen: ScaledSize;\n};\n\nexport const useDimensionsSync = (dim: 'window' | 'screen' = 'window'): { width: number, height: number } => {\n  const [dimensions, setDimensions] = React.useState(() => Dimensions.get(dim));\n\n  // Start listening to changes\n  React.useEffect(() => {\n    let stillCareAboutTheCallback = true;\n\n    const updateDimensions = (nextDimensions: EventValue) => {\n      stillCareAboutTheCallback && setDimensions(nextDimensions[dim]);\n    };\n\n    Dimensions.addEventListener('change', updateDimensions);\n\n    return () => {\n      stillCareAboutTheCallback = false;\n      Dimensions.removeEventListener('change', updateDimensions);\n    };\n  }, [dim, setDimensions]);\n\n  return dimensions;\n};\n\nexport const useWindowDimensions = (): { width: number, height: number } => {\n  return useDimensionsSync('window');\n};\n","import { StyleSheet, Text, View } from 'react-native';\nimport * as React from 'react';\nimport Keypad from '/components/Keypad';\n\nimport { useWindowDimensions } from '/hooks/useWindowDimensions';\n\nexport default function Gameboy({ children }: { children: JSX.Element[] | JSX.Element }): JSX.Element {\n  const window = useWindowDimensions();\n  const w = window.width;\n  const h = window.height;\n  const ratio = h / w;\n  let scale;\n  if (ratio < 1.5) {\n    scale = h / 960;\n  } else {\n    scale = w / 560;\n  }\n  return (\n    <View style={styles.container}>\n      <View style={[styles.gameboy, { transform: [{ scale }] }]}>\n        <Text style={styles.title}>R E D ■ T E T R I S</Text>\n        <View style={styles.display}>\n          {children}\n        </View>\n        <Keypad/>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#009688',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20,\n    height: '100%',\n  },\n  display: {\n    alignItems: 'center',\n    backgroundColor: '#9ead86',\n    borderBottomColor: '#fa6b6b',\n    borderLeftColor: '#980f0f',\n    borderRightColor: '#fa6b6b',\n    borderTopColor: '#980f0f',\n    borderWidth: 5,\n    height: 470,\n    justifyContent: 'center',\n    padding: 10,\n    width: 400,\n  },\n  gameboy: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#af0000',\n    borderRadius: 20,\n    paddingBottom: 50,\n    paddingHorizontal: 50,\n  },\n  title: {\n    fontSize: 30,\n    marginVertical: 20,\n    textAlign: 'center',\n  },\n});\n","import { StackNavigationProp } from '@react-navigation/stack';\nimport { StyleSheet, Text, TouchableOpacity, TextInput, View } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport * as React from 'react';\n\nimport Gameboy from '/components/Gameboy';\n\nexport default function Login(): JSX.Element {\n  const navigation = useNavigation<StackNavigationProp<RootStackParamList, 'Root'>>();\n  const [username, setUsername] = React.useState<string | null>();\n  const [room, setRoom] = React.useState<string | null>();\n  return (\n    <Gameboy>\n      <View style={{ alignItems: 'center' }}>\n        <Text style={styles.title}>{'Username'}</Text>\n        <TextInput\n          value={username ?? ''}\n          onChangeText={setUsername}\n          style={{ borderWidth: 1, marginBottom: 20, height: 30 }}\n        />\n        <Text style={styles.title}>{'Room'}</Text>\n        <TextInput\n          value={room ?? ''}\n          onChangeText={setRoom}\n          style={{ borderWidth: 1, marginBottom: 20, height: 30 }}\n        />\n        <TouchableOpacity\n          style={{ marginBottom: 20 }}\n          onPress={() => username && room && navigation.push('Playground', { username, room })}\n        >\n          <Text style={styles.linkText}>Join Room</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={() => navigation.push('Playground', {})}\n        >\n          <Text style={styles.linkText}>Solo mode</Text>\n        </TouchableOpacity>\n      </View>\n    </Gameboy>\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: {\n    marginBottom: 10,\n    alignSelf: 'flex-start',\n  },\n  linkText: {\n    fontSize: 14,\n    color: '#004580',\n  },\n});\n","import _ from 'lodash';\n\nexport const blockShape = {\n  I: [\n    [0, 0, 0, 0],\n    [1, 1, 1, 1],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ],\n  L: [\n    [0, 0, 1],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n  J: [\n    [1, 0, 0],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n  Z: [\n    [1, 1, 0],\n    [0, 1, 1],\n    [0, 0, 0],\n  ],\n  S: [\n    [0, 1, 1],\n    [1, 1, 0],\n    [0, 0, 0],\n  ],\n  O: [\n    [1, 1],\n    [1, 1],\n  ],\n  T: [\n    [0, 1, 0],\n    [1, 1, 1],\n    [0, 0, 0],\n  ],\n};\n\nexport const initialPos = {\n  I: [0, 3],\n  L: [-1, 4],\n  J: [-1, 4],\n  Z: [-1, 4],\n  S: [-1, 4],\n  O: [-1, 4],\n  T: [-1, 4],\n};\n\nexport const blockTypes: TetriminosType[] = ['I','L','J','Z','S','O', 'T'];\n\nexport const speeds = [800, 650, 500, 370, 250, 160];\n\nexport const delays = [50, 60, 70, 80, 90, 100];\n\nexport const fillLine = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1];\n\nexport const blankLine = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\nexport const blankMatrix = (): Matrix => _.map(Array(20), () => _.map(Array(10), 0));\n\nexport const blockMatrix = (): Matrix => _.map(Array(2), () => _.map(Array(4), 0));\n","export const keyboard = {\n  'left': 37,\n  'rotate': 38,\n  'right': 39,\n  'down': 40,\n  'space': 32,\n  'sound': 83,\n  'reset': 82,\n  'pause': 80,\n};\n","\nimport { blockShape, initialPos } from '/constants/tetriminos.ts';\n\nclass Block {\n  pos: number[];\n  shape: number[][];\n  type: TetriminosType;\n  timeStamp: number;\n\n  constructor(option: BlockOption) {\n    this.type = option.type;\n\n    if (!option.timeStamp) {\n      this.timeStamp = Date.now();\n    } else {\n      this.timeStamp = option.timeStamp;\n    }\n    if (!option.shape) {\n      this.shape = blockShape[this.type];\n    } else {\n      this.shape = option.shape;\n    }\n    if (!option.pos) {\n      this.pos = initialPos[this.type];\n    } else this.pos = option.pos;\n  }\n  rotate(): Block {\n    const shape = this.shape;\n    const result: number[][] = shape[0].map((val, index) => shape.map(row => row[index]).reverse());\n    return new Block({\n      shape: result,\n      type: this.type,\n      pos: this.pos,\n      timeStamp: this.timeStamp,\n    });\n  }\n  fall(n = 1): Block {\n    return new Block({\n      shape: this.shape,\n      type: this.type,\n      pos: [this.pos[0] + n, this.pos[1]],\n      timeStamp: Date.now(),\n    });\n  }\n  right(): Block {\n    return new Block({\n      shape: this.shape,\n      type: this.type,\n      pos: [this.pos[0], this.pos[1] + 1],\n      timeStamp: this.timeStamp,\n    });\n  }\n  left(): Block {\n    return new Block({\n      shape: this.shape,\n      type: this.type,\n      pos: [this.pos[0], this.pos[1] - 1],\n      timeStamp: this.timeStamp,\n    });\n  }\n}\n\nexport default Block;\n","import { StyleSheet, View } from 'react-native';\nimport * as React from 'react';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginRight: 2,\n    marginBottom: 2,\n  },\n  outer: {\n    alignItems: 'center',\n    borderColor: '#879372',\n    borderWidth: 1,\n    height: 20,\n    justifyContent: 'center',\n    width: 20,\n  },\n  inner: {\n    height: 12,\n    width: 12,\n    backgroundColor: '#879372',\n  },\n});\n\nconst Block = ({ value }: { value: number }): JSX.Element => {\n  return (\n    <View style={[styles.outer, value ? { borderColor: 'black' } : undefined]}>\n      <View style={[styles.inner, value ? { backgroundColor: 'black' } : undefined]} />\n    </View>\n  );\n};\n\nexport default Block;\n","import _ from 'lodash';\nimport { View, ViewStyle, StyleSheet } from 'react-native';\nimport * as React from 'react';\n\nimport Block from '/components/Block';\n\nconst Matrix = ({ matrix, style }: { matrix: Matrix, style?: ViewStyle }): JSX.Element => {\n  return (\n    <View style={[styles.container, { height: _.size(matrix) * 22 }, style]}>\n      {_.map(matrix, (row, index) =>\n        <View key={index} style={{ flexDirection: 'row', width: _.size(row) * 22, justifyContent: 'space-between' }}>\n          {_.map(row, (value, index) => <Block key={index} value={value} />)}\n        </View>)}\n    </View>\n  );\n};\n\nexport default Matrix;\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 2, justifyContent: 'space-between', borderColor: 'black', borderWidth: 1, backgroundColor: '#9ead86',\n  },\n});","import _ from 'lodash';\nimport { Asset } from 'expo-asset';\nimport { ImageBackground, View, ViewStyle } from 'react-native';\nimport * as React from 'react';\n\nexport default function Digits({ style }: { style?: ViewStyle }): JSX.Element {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const imageURI = Asset.fromModule(require('../../../assets/sprite.png')).uri;\n  return (\n    <View style={[{ flexDirection: 'row' }, style]} >\n      {_.map(Array(6), (val, index: number) => <ImageBackground\n        key={index}\n        source={{ uri: imageURI }}\n        style={{ width: 14, height: 24, overflow: 'hidden' }}\n        imageStyle={{\n          height: 186,\n          left: -215,\n          resizeMode: 'cover',\n          top: -25,\n          width: 400,\n        }}\n      />)}\n    </View>\n  );\n}\n","import _ from 'lodash';\nimport { View, Text } from 'react-native';\nimport * as React from 'react';\nimport useInterval from '@use-it/interval';\nimport useKey from 'use-key-hook';\n\nimport { blankMatrix, blockMatrix } from '/constants/tetriminos';\nimport { blockTypes } from '/constants/tetriminos';\nimport { keyboard } from '/constants/keyboard';\nimport Block from '/models/block';\nimport Matrix from '/components/Matrix';\nimport Gameboy from '/components/Gameboy';\nimport Digits from '/components/Digits';\n\nconst printBlock = (matrix: Matrix, block: Block) => { \n  const { shape, pos } = block;\n  shape.forEach((row, rowIndex) => (\n    row.forEach((col, colIndex) => {\n      if (pos[0] + rowIndex >= 0 && pos[0] + rowIndex < 20 && pos[1] + colIndex < 10) {\n        matrix[pos[0] + rowIndex][pos[1] + colIndex] = shape[rowIndex][colIndex];\n      }\n    })\n  ));\n  return matrix;\n};\n\nexport default function Playground(): JSX.Element {\n  const [block, setBlock] = React.useState<Block>(new Block({\n    type: _.sample<TetriminosType>(blockTypes) ?? 'T',\n  }));\n  const nextBlockType = blockTypes[(_.indexOf(blockTypes, block.type) + 1) % _.size(blockTypes)];\n  useInterval(() => {\n    setBlock((currentBlock) =>\n      (currentBlock.pos[0] + currentBlock.shape.length < 20)\n        ? currentBlock.fall()\n        : new Block({ type: nextBlockType }));\n  }, 500);\n  useKey((key: number) => {\n    if (key === keyboard.rotate) setBlock((currentBlock) => currentBlock.rotate());\n    if (key === keyboard.left) setBlock((currentBlock) => currentBlock.left());\n    if (key === keyboard.right) setBlock((currentBlock) => currentBlock.right());\n    if (key === keyboard.down) setBlock((currentBlock) => currentBlock.fall());\n  });\n  const newMatrix = printBlock(blankMatrix(), block);\n  return (\n    <Gameboy>\n      <View style={{ flexDirection: 'row', alignSelf:'flex-start', width: '100%' }}>\n        <Matrix matrix={newMatrix} />\n        <View style={{ marginLeft: 20, flex: 1 }} >\n          <Text style={{ fontSize: 20 }}>Score</Text>\n          <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n          <Text style={{ fontSize: 20 }}>Start Line</Text>\n          <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n          <Text style={{ fontSize: 20 }}>Level</Text>\n          <Digits style={{ marginVertical: 10, alignSelf: 'flex-end' }} />\n          <Text style={{ fontSize: 20 }}>Next</Text>\n          <Matrix\n            matrix={_.take(_.merge(blockMatrix(), new Block({ type: nextBlockType }).shape), 2)}\n            style={{ borderWidth: 0, marginVertical: 10, alignSelf: 'flex-end' }}\n          />\n        </View>\n      </View>\n    </Gameboy>\n  );\n}\n","import * as Linking from 'expo-linking';\n\nexport default {\n  prefixes: [Linking.makeUrl('/')],\n  config: {\n    screens: {\n      Root: '/',\n      Playground: '/play',\n      NotFound: '*',\n    },\n  },\n};\n","import { NavigationContainer, DefaultTheme, DarkTheme } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport * as React from 'react';\nimport { ColorSchemeName } from 'react-native';\n\nimport NotFoundScreen from '/screens/NotFoundScreen';\nimport Login from '/screens/Login';\nimport Playground from '/screens/Playground';\nimport LinkingConfiguration from '/navigation/LinkingConfiguration';\n\n// If you are not familiar with React Navigation, we recommend going through the\n// \"Fundamentals\" guide: https://reactnavigation.org/docs/getting-started\nexport default function Navigation({ colorScheme }: { colorScheme?: ColorSchemeName }): JSX.Element {\n  return (\n    <NavigationContainer\n      linking={LinkingConfiguration}\n      theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\n      <RootNavigator />\n    </NavigationContainer>\n  );\n}\n\n// A root stack navigator is often used for displaying modals on top of all other content\n// Read more here: https://reactnavigation.org/docs/modal\nconst Stack = createStackNavigator<RootStackParamList>();\n\nfunction RootNavigator() {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: false }}>\n      <Stack.Screen name=\"Root\" component={Login} />\n      <Stack.Screen name=\"Playground\" component={Playground} />\n      <Stack.Screen name=\"NotFound\" component={NotFoundScreen} options={{ title: 'Oops!' }} />\n    </Stack.Navigator>\n  );\n}\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/sprite.81de6409.png\";"],"sourceRoot":""}